<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IMDagger</title><link>http://imdagger.github.io/</link><description></description><atom:link href="http://imdagger.github.io/feeds/imdagger.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 05 Jan 2015 02:12:00 +0300</lastBuildDate><item><title>Прошёл последнюю часть Депонии</title><link>http://imdagger.github.io/posts/2015/01/05/proshiol-posledniuiu-chast-deponii/</link><description>&lt;p&gt;Грустно Goodbye Deponia 3 закончилась, но в принципе ..., с другой стороны, главный
герой изменился хотя бы чуть-чуть внутренне и стал лучше. Т.к. до этого он
столько всего натворил: и детей монстру скормил, и пару любимых
разлучил в особо жестоком формате. Конечно хотелось бы увидеть,
что Руфус вместе с Гоал, розовые сопли и т.д. Но конец игры — есть конец игры.&lt;/p&gt;
&lt;!-- LocalWords:  Deponia Депонии Руфус Гоал --&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 05 Jan 2015 02:12:00 +0300</pubDate><guid>tag:imdagger.github.io,2015-01-05:posts/2015/01/05/proshiol-posledniuiu-chast-deponii/</guid><category>goodbye</category><category>deponia</category><category>daedalic</category><category>квест</category><category>прохождение</category><category>игра</category><category>конец</category></item><item><title>Emacs и Hunspell</title><link>http://imdagger.github.io/posts/2014/12/17/emacs-i-hunspell/</link><description>&lt;p&gt;Раньше у меня с Emacs использовалась проверка через Aspell,
но так можно проверять только один язык в тексте, либо собирать
мультиязыковой словарь. Я решил посмотреть, может ли Hunspell
просто принять в качестве аргументов несколько словарей, и да,
он может это. Поэтому я сделал выбор в пользу него.
Хотя на этом пути тоже возникли свои подводные камни связанные
с тем, что в пакетах старая сборка Hunspell. А в ней есть
&lt;a class="reference external" href="http://debbugs.gnu.org/cgi/bugreport.cgi?bug=7781"&gt;ошибка&lt;/a&gt; при
работе с UTF-8, когда утилита выводит номер
байта вместо номера символа. Поэтому пришлось собрать
пакет из &lt;a class="reference external" href="http://sourceforge.net/projects/hunspell/"&gt;исходников&lt;/a&gt;.
А ещё установить пакет  hunspell-ru-ie-yo из
&lt;a class="reference external" href="https://launchpad.net/~andrew-crew-kuznetsov/+archive/ubuntu/xneur-stable"&gt;ppa:andrew-crew-kuznetsov/xneur-stable&lt;/a&gt;
от команды XNeur, чтобы была в словарях бука &lt;strong&gt;Ё&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Устанавливаем пакет Hunspell и языки.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;./configure.sh --prefix&lt;span class="pgcss-o"&gt;=&lt;/span&gt;/usr
&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;sudo checkinstall make &lt;span class="pgcss-c"&gt;# используем утилиту для сборки deb&lt;/span&gt;
...
&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;sudo apt-get install hunspell-en-us hunspell-ru-ie-yo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Правда последняя версии чекера из SVN немного медленная и пришлось
нарастить timeout-ы в &lt;code class="code"&gt;
flyspell-lazy.el&lt;/code&gt;
. Включить другой движок для
Emacs не составляет большой проблемы.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;custom-set-variables&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-local-dictionary-alist&lt;/span&gt;
   &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;russian-english&amp;quot;&lt;/span&gt;
     &lt;span class="pgcss-s"&gt;&amp;quot;[АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзийклмнопрстуфхцчшщьыъэюяA-Za-z]&amp;quot;&lt;/span&gt;
     &lt;span class="pgcss-s"&gt;&amp;quot;[^АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзийклмнопрстуфхцчшщьыъэюяA-Za-z]&amp;quot;&lt;/span&gt;
     &lt;span class="pgcss-s"&gt;&amp;quot;[-&amp;#39;]&amp;quot;&lt;/span&gt;  &lt;span class="pgcss-no"&gt;nil&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;ru_RU,en_US&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-no"&gt;nil&lt;/span&gt; &lt;span class="pgcss-nv"&gt;utf-8&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-program-name&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;hunspell&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-dictionary&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;russian-english&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-really-aspell&lt;/span&gt; &lt;span class="pgcss-no"&gt;nil&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-really-hunspell&lt;/span&gt; &lt;span class="pgcss-no"&gt;t&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-encoding8-command&lt;/span&gt; &lt;span class="pgcss-no"&gt;t&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-silently-savep&lt;/span&gt; &lt;span class="pgcss-no"&gt;t&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;flyspell-delay&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В данном случае словарь russian-english это ключ, по которому происходит
поиск настроек. Где я уже указал опции &lt;code class="code"&gt;
-d ru_RU,en_US&lt;/code&gt;
 и кодировку
ввода &lt;strong&gt;UTF-8&lt;/strong&gt;.&lt;/p&gt;
&lt;!-- LocalWords: Hunspell checkinstall --&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 17 Dec 2014 14:27:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-12-17:posts/2014/12/17/emacs-i-hunspell/</guid><category>emacs</category><category>spellcheck</category><category>hunspell</category><category>aspell</category><category>проверка</category><category>UTF-8</category></item><item><title>Вывод окружности в Kivy</title><link>http://imdagger.github.io/posts/2014/12/15/vyvod-okruzhnosti-v-kivy/</link><description>&lt;p&gt;Не знаю почему я решил, что используя Ellipse инструкцию,
я могу получить окружность, а не круг. Я пытался в ней
найти как отказаться от заливки... хо-хо но ведь, окружность —
это просто линия! И нужно использовать Line со специальным параметром:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;Line&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;circle&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;y&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;r&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;width&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-mf"&gt;2.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Параметр &lt;code class="code"&gt;
circle&lt;/code&gt;
 можно трактовать, будто передан параметр &lt;code class="code"&gt;
points&lt;/code&gt;
,
который содержит точки окружности и сквозь них будет прочерчена линия толщиной
width.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 15 Dec 2014 03:15:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-12-15:posts/2014/12/15/vyvod-okruzhnosti-v-kivy/</guid><category>программирование</category><category>python</category><category>kivy</category><category>окружность</category></item><item><title>Квест про бургеры из Chaos of Deponia</title><link>http://imdagger.github.io/posts/2014/12/04/kvest-pro-burgery-iz-chaos-of-deponia/</link><description>&lt;p&gt;Во время прохождения квеста про ресторан в игре Chaos of Deponia столкнулся с
задачей, в которой нужно не имея денег получить бесплатную печенюшку. Но эта
Печенка даётся только, если возьмёшь гамбургеры из утконоса и напиток из
утконоса. Т.е. следовало сделать так, чтобы на подносе &lt;strong&gt;не осталось&lt;/strong&gt; платной
еды и ценник был &lt;strong&gt;0с&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Уже после первых обменов руками видно, что в правилах есть какая-то «утечка».
Ибо запросто можно придти в ситуацию, что на подносе ничего нет, а стоимость
отличная от нуля. Сразу возникает мысль, что этим можно воспользоваться и в другую
сторону.&lt;/p&gt;
&lt;p&gt;Но так как я человек ленивый, то я сразу набросал черновой скрипт для правил:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Стаканов есть 3 размера и от питья можно отказаться&lt;/li&gt;
&lt;li&gt;Еды есть два вида: большой и маленький гамбургеры&lt;/li&gt;
&lt;li&gt;При увеличении размера стакана к стоимости нужно добавить +0.5c&lt;/li&gt;
&lt;li&gt;При уменьшении размера стакана к стоимости нужно добавить -0.5c&lt;/li&gt;
&lt;li&gt;При обмене большого гамбургера на маленький или обратно, цена меняется на 1с
(в ту или другую сторону)&lt;/li&gt;
&lt;li&gt;Стакан размера 3 можно бесплатно обменять на большой гамбургер и обратно&lt;/li&gt;
&lt;li&gt;Большой гамбургер можно бесплатно обменять на два малых и обратно&lt;/li&gt;
&lt;li&gt;А вот два стакана размера 1 можно обменять только на 2 малых гамбургера&lt;/li&gt;
&lt;li&gt;Заказать можно только следующие исходные позиции: один стакан размера 1
и один малый гамбургер за 2c; два малых гамбургера, один стакан размера 2
и одну печенку за 3c; один стакан размера 3, один большой гамбургер и
несколько печенок за 4c&lt;/li&gt;
&lt;li&gt;Еды и питья на подносе не может быть больше 4 единиц каждого&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Хоть и ясно, что первая исходная позиция не подходит, т.к. нет бесплатных
печенок, но я не оставил надежды найти вариант выйти в отрицательную зону
и получить монет. Хотя, забегая вперёд, скажу, что это не вышло, минимум
это &lt;strong&gt;0c&lt;/strong&gt;. Далее идёт код, который рекурсивным перебором с мемоизацией
минимизирует состояния (его следовало сделать и покороче и побыстрее,
но особого желания возиться не было):&lt;/p&gt;
&lt;p class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_66478352"data-toggle="collapse"&gt;(Подробнее)&lt;/a&gt;&lt;/p&gt;
&lt;div class="collapse" id="cut_66478352"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;state&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;state&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# отбрасывает случаи, где слишком много еды на подносе&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sum&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt; &lt;span class="pgcss-ow"&gt;or&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sum&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;skey&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;tuple&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;map&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;tuple&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;state&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;skey&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;scost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;spath&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;skey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;scost&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-ow"&gt;or&lt;/span&gt; &lt;span class="pgcss-n"&gt;scost&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;spath&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;path&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;skey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;)):&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать увеличить стакан&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mf"&gt;0.5&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;),],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать уменьшить стакан&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mf"&gt;0.5&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink&amp;lt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;),],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;)):&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать увеличить гамбургер&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mf"&gt;1.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;)],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать уменьшить гамбургер&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mf"&gt;1.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food&amp;lt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;)],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен большого гамбургера на два малых&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sum&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food2-&amp;gt;food1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен большого гамбургера на стакан размера 3&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food2-&amp;gt;drink3&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен стакана размера 3 на большой гамбургер&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink3-&amp;gt;food2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен двух малых гамбургеров на один большой&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food1-&amp;gt;food2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен двух стаканов размера 1 на два мелких гамбургера&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink1-&amp;gt;food1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-n"&gt;found&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{}&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# начальные позиции&lt;/span&gt;
&lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(([&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;]),&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;[],&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(([&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;]),&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;[],&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(([&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]),&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;[],&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# выбор решения, чтобы взять поднос без денег&lt;/span&gt;
&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;itervalues&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;И отработавшая программа выдаст: &lt;code class="code"&gt;
[('drink&amp;gt;', 2), 'drink3-&amp;gt;food2', ('food&amp;lt;', 2), 'food1-&amp;gt;food2', ('food&amp;lt;', 2), 'food1-&amp;gt;food2', 'food2-&amp;gt;drink3', ('drink&amp;lt;', 3), ('drink&amp;lt;', 2), ('drink&amp;lt;', 1)]&lt;/code&gt;
, что означает:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Взять два малых гамбургера и стакан 2 размера&lt;/li&gt;
&lt;li&gt;Стакан 2 размера увеличить до 3&lt;/li&gt;
&lt;li&gt;Обменять стакан 3 размера на большой гамбургер&lt;/li&gt;
&lt;li&gt;Большой гамбургер уменьшить&lt;/li&gt;
&lt;li&gt;Два малых гамбургера обменять на большой&lt;/li&gt;
&lt;li&gt;Большой гамбургер уменьшить&lt;/li&gt;
&lt;li&gt;Два малых гамбургера обменять на большой&lt;/li&gt;
&lt;li&gt;Обменять большой гамбургер на стакана 3 размера&lt;/li&gt;
&lt;li&gt;Уменьшить стакан до 2 размера&lt;/li&gt;
&lt;li&gt;Уменьшить стакана до 1 размера&lt;/li&gt;
&lt;li&gt;Отказаться от питься&lt;/li&gt;
&lt;li&gt;Deal with it! Теперь есть бесплатное печенье и &lt;strong&gt;0c&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 04 Dec 2014 02:20:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-12-04:posts/2014/12/04/kvest-pro-burgery-iz-chaos-of-deponia/</guid><category>программирование</category><category>chaos</category><category>deponia</category><category>квест</category><category>прохождение</category><category>игра</category><category>python</category></item><item><title>Программирование</title><link>http://imdagger.github.io/posts/2014/11/29/programmirovanie/</link><description>&lt;p&gt;Где-то прочитал, но запишу как запомнил, а кое-где привру:
«Программирование — это легко, так же легко как кататься на велосипеде.
На горящем велосипеде. Когда ты и сам горишь... А у велосипеда нет сидения.»&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 29 Nov 2014 01:34:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-11-29:posts/2014/11/29/programmirovanie/</guid><category>программирование</category><category>бредни</category><category>мысль</category><category>прочитал</category></item><item><title>syntax-parse и литералы</title><link>http://imdagger.github.io/posts/2014/11/11/syntax-parse-i-literaly/</link><description>&lt;p&gt;При использовании &lt;code class="code"&gt;
syntax-parse&lt;/code&gt;
 все литералы из &lt;code class="code"&gt;
 # :literals&lt;/code&gt;

должны быть обязательно объявлены, в отличие от syntax-case, в котором
литералы это нечто ближе к данным, а не к синтаксическим переменным.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;define-syntax&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-ss"&gt;:pre&lt;/span&gt; &lt;span class="pgcss-nv"&gt;stx&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;raise-syntax-error&lt;/span&gt; &lt;span class="pgcss-nv"&gt;stx&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;pre&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;Cannot be used outside syntax ...&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;define-syntax&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;test&lt;/span&gt; &lt;span class="pgcss-nv"&gt;stx&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;syntax-parse&lt;/span&gt; &lt;span class="pgcss-ss"&gt;#:literals&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-ss"&gt;:pre&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-nv"&gt;[&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt; &lt;span class="pgcss-nv"&gt;]&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Если так не сделать, то Racket будет ругаться, что &lt;code class="code"&gt;
syntax-parse : literal is unbound in phase 0 (phase 0 relative to the enclosing module)&lt;/code&gt;
.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 11 Nov 2014 04:15:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-11-11:posts/2014/11/11/syntax-parse-i-literaly/</guid><category>racket</category><category>literals</category><category>syntax-parse</category><category>биндинг</category><category>связывание</category><category>синтаксис</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/11/09/sell/</link><description>&lt;p&gt;Продать кому-то что-то всегда на деле сложнее, чем кажется&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 09 Nov 2014 01:30:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-11-09:posts/2014/11/09/sell/</guid></item><item><title>Приключения с a.out</title><link>http://imdagger.github.io/posts/2014/11/08/prikliucheniia-s-aout/</link><description>&lt;p&gt;Хорошо, что я запомнил, что я 6-го числа случайно опечатался
и написал &lt;code class="code"&gt;
ld /bin/bash&lt;/code&gt;
. Т.к. через два дня
я открываю как обычно свою домашнюю директорию и вижу, что
в ней лежит &lt;code class="code"&gt;
a.out&lt;/code&gt;
 файл, который как мне казалось,
я не создавал. Я пытаюсь сделать ldd, чтобы посмотреть, что за оно и
увидеть с чем исполняемый файл слинкован, но вместо этого
получаю:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;imdagger@thug-machine:~&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;ldd a.out
Inconsistency detected by ld.so: dl-lookup.c: 876: _dl_setup_hash: Assertion &lt;span class="pgcss-s1"&gt;&amp;#39;(bitmask_nwords &amp;amp; (bitmask_nwords - 1)) == 0&amp;#39;&lt;/span&gt; failed!
ldd: завершено с неизвестным выходным кодом &lt;span class="pgcss-o"&gt;(&lt;/span&gt;127&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Судорожно начинаю проверять свою машинку на вторжения, логи, аккаунты, даты, chkrootkit... всё в бой. Сбиваю все приложения, что
работают с сетью, начинаю смотреть важные обновления, проверяю netstat. И вспоминаю, что было 6 числа :) Это просто ld создал
файл из &lt;code class="code"&gt;
/bin/bash&lt;/code&gt;
. Выдыхаю, успокоился :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 08 Nov 2014 15:43:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-11-08:posts/2014/11/08/prikliucheniia-s-aout/</guid><category>a.out</category><category>паранойя</category><category>домашняя</category><category>директория</category></item><item><title>На малой земле</title><link>http://imdagger.github.io/posts/2014/10/17/na-maloi-zemle/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/next/users/imdagger/album/229756/view/668987"&gt;&lt;img alt="Птицы" src="https://img-fotki.yandex.ru/get/3110/22199227.b/0_a353b_53b54011_L" title="Птицы"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/668982/"&gt;&lt;img alt="Трава" src="https://img-fotki.yandex.ru/get/3303/22199227.b/0_a3536_f86322dd_L" title="Трава"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/next/users/imdagger/album/229756/view/668985"&gt;&lt;img alt="Траншея" src="https://img-fotki.yandex.ru/get/3013/22199227.b/0_a3539_70ac2fa5_L" title="Траншея"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Живём, работаем.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 17 Oct 2014 17:28:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-10-17:posts/2014/10/17/na-maloi-zemle/</guid><category>земля</category><category>природа</category><category>процесс</category></item><item><title>Быстрые списки с произвольным доступом</title><link>http://imdagger.github.io/posts/2014/08/18/bystrye-spiski-s-proizvolnym-dostupom/</link><description>&lt;p&gt;Наткнулся на описание реализации алгоритма списков с поддержкой
всех необходимых базовых операций (добавка элемента, отщепление, получение
хвоста и др.) за &lt;span class="raw-latex"&gt;$math$O(1)$/math$&lt;/span&gt; и поиск/обновление за &lt;span class="raw-latex"&gt;$math$O(log_{2}{N})$/math$&lt;/span&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;Pure Functional Random-Access Lists&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;em&gt;Chris Okasaki&lt;/em&gt;&lt;/div&gt;
&lt;div class="line"&gt;School of Computer Science, Carnegie Mellon University&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;По ссылке доступна страница, где можно ознакомиться с работой в формате PDF.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 18 Aug 2014 03:17:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-08-18:posts/2014/08/18/bystrye-spiski-s-proizvolnym-dostupom/</guid><category>список</category><category>алгоритм</category><category>структура</category><category>быстрый</category></item><item><title>Исправления и оптимизация для индексирующих ботов</title><link>http://imdagger.github.io/posts/2014/08/15/robot-indexing/</link><description>&lt;p&gt;Исправил немного CSS блога, чтобы табы отображались корректно, а то появлялась
дополнительная вертикальная полосочка в режиме &lt;code class="code"&gt;
:hover&lt;/code&gt;
. Наконец-то добавил
иконку &lt;code class="code"&gt;
favicon.ico&lt;/code&gt;
 и для некоторых ссылок &lt;code class="code"&gt;
rel=&amp;quot;nofollow&amp;quot;&lt;/code&gt;
,
т.к. я не хочу, чтобы бот переходил на индексацию сквозь ссылки в тегах, ибо
там всё равно тотже контент. И это замедляет процесс граббинга блога. Ещё
пришлось &lt;a class="reference external" href="https://help.yandex.ru/webmaster/controlling-robot/html.xml"&gt;закрыть от индексации&lt;/a&gt;
страницы с группировкой постов, чтобы не дублировался материал.&lt;/p&gt;
&lt;p&gt;Осталось разобраться с Pelican, чтобы страницы нумеровались не в прямом порядке а в обратном,
чтобы не требовалось при создании всего нескольких постов регенерировать всё содержимое.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 15 Aug 2014 03:42:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-08-15:posts/2014/08/15/robot-indexing/</guid><category>переезд</category><category>блог</category><category>жизнь</category><category>индексация</category><category>поиск</category><category>робот</category></item><item><title>Переехал</title><link>http://imdagger.github.io/posts/2014/08/01/blog-movement/</link><description>&lt;p&gt;Наконец-то я переехал в новое место — GitHub Pages. Теперь я использую
статические страницы, генерацию и reStructuredText для написания своих
постов. Все предыдущие посты я заранее сдампил (т.к. я знал, что Яндекс
это сделают криво да ещё и медленно, поэтому я нещадно использовал их
API ещё до того, как они привели финальный механизм в действие), а
затем HTML-тексты я сконвертировал при помощи &lt;a class="reference external" href="http://johnmacfarlane.net/pandoc/"&gt;Pandoc&lt;/a&gt;.
Чудесная утилита для преобразования из всего во всё. Были конечно проблемы
с тем, как я раньше оформлял код (Я.ру не позволял это сделать по человески),
поэтому при конвертации возникли разнообразные недочёты, которые пришлось
устранить руками. А ещё пришлось сделать некоторое количество плагинов для
Pelican, чтобы у меня были теги для зачёркивания текста, для оформления
постов с фотографиями и для более продвинутой разметки кода. Также порядочно
времени ушло на создание стиля похожего на то, что у меня было раньше, но
на основе &lt;strong&gt;bootstrap&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Буду теперь обживаться и привыкать тут, настраивать деплой постов,
править все проблемы полученные при конвертации во время переезда.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 01 Aug 2014 04:30:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-08-01:posts/2014/08/01/blog-movement/</guid><category>переезд</category><category>блог</category><category>Я.ру</category><category>радость</category><category>жизнь</category><category>pelican</category><category>rst</category></item><item><title>Ввод специальных символов в Emacs</title><link>http://imdagger.github.io/posts/2014/08/01/emacs-unicode-chars/</link><description>&lt;p&gt;В Emacs, если нужно ввести специальный символ, то не обязательно
переключать метод ввода, можно воспользоваться сочетанием &lt;kbd class="kbd"&gt;
C-x 8 ENTER&lt;/kbd&gt;
,
которое предложит варианты, либо сразу ввести шорткат сочетания, например:
&lt;kbd class="kbd"&gt;
C-x 8 ' e&lt;/kbd&gt;
 даёт é символ с диакритическим знаком.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 01 Aug 2014 03:57:00 +0300</pubDate><guid>tag:imdagger.github.io,2014-08-01:posts/2014/08/01/emacs-unicode-chars/</guid><category>emacs</category><category>сочетание</category><category>клавиша</category><category>символы</category><category>unicode</category></item><item><title>Переезд</title><link>http://imdagger.github.io/posts/2014/06/26/pereezd/</link><description>&lt;p&gt;Такс, придётся подумать куда перехать с Я.ру, чтобы всё перенести
как нужно. Жду, когда они зальют на Я.Диск все посты в HTML, чтобы
посмотреть, что там, хотя если они будут долго шевелиться, то мне
придётся самому сделать краулера, который вытащит всё моё. В принципе
такими темпами стоит подумать и о моей второй почте, и подвязать к ней
сервисы тоже, чтобы не растерять всё. Т.к. всё что меня держало это
OpenID и Jabber от Яндекса.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 26 Jun 2014 17:23:23 +0300</pubDate><guid>tag:imdagger.github.io,2014-06-26:posts/2014/06/26/pereezd/</guid><category>переезд</category><category>прощай</category><category>Я.ру</category><category>Яндекс</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/06/25/urn:ya.ru:post/22199227/1969/</link><description>&lt;p&gt;Висцеральная теория сна выглядит стройно и убедительно, и сходится с
опытами. И это позволяет подругому взгянуть на то, зачем мы вообще спим
и под другим углом осознать «усталость». Проглотил на одном дыхании.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 25 Jun 2014 02:49:44 +0300</pubDate><guid>tag:imdagger.github.io,2014-06-25:posts/2014/06/25/urn:ya.ru:post/22199227/1969/</guid><category>теория</category><category>сон</category><category>Пигарев</category><category>наука</category></item><item><title>Малина в корпусе</title><link>http://imdagger.github.io/posts/2014/06/21/malina-v-korpuse/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/643281"&gt;&lt;img alt="Малина в корпусе" src="http://img-fotki.yandex.ru/get/9666/22199227.b/0_9d0d1_706b1fc6_L" title="Малина в корпусе"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/643282"&gt;&lt;img alt="Малина в корпусе" src="http://img-fotki.yandex.ru/get/9489/22199227.b/0_9d0d2_44287593_L" title="Малина в корпусе"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Корпус добротный, утяжелённый, на силиконовой подложке, чтобы не
скользил; хотя сама плата во много раз меньше корпуса (размером с
кредитную карту).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 21 Jun 2014 16:19:31 +0300</pubDate><guid>tag:imdagger.github.io,2014-06-21:posts/2014/06/21/malina-v-korpuse/</guid><category>компьютер</category><category>pi</category><category>корпус</category><category>устройство</category><category>raspberry</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/06/13/urn:ya.ru:post/22199227/1967/</link><description>&lt;p&gt;В сериалах с закадровым смехом настолько к нему привыкаешь, что
когда смотрю новый ситком без закадрового смеха, то уже чувствую
странное ощущение тревожности (моз такой: «бзыыынь..бзыынь.. вроде
смешно, а чего никто не смеётся?»). Хотя, собственно, привыкнуть к
стороннему смеху было тоже сложно, особенно, когда кажется, что шутка не
смешная; а они всё равно радуются. Это, наверное, для меня как Гриффинов
смотреть… начинаешь смотреть — кажется странным, потом втягиваешься,
привыкаешь и вот уже смеёшься… бах! посмотрел уже 10 сезонов. Потом
долгий перерыв, и оказывается, что успел отвыкнуть и нужен опять
разогрев.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 13 Jun 2014 02:32:51 +0300</pubDate><guid>tag:imdagger.github.io,2014-06-13:posts/2014/06/13/urn:ya.ru:post/22199227/1967/</guid><category>смех</category><category>привычка</category><category>сериал</category><category>жизнь</category><category>бредни</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/06/07/urn:ya.ru:post/22199227/1966/</link><description>&lt;p&gt;Rust в качестве замены C++ выглядит для меня довольно интересно. И
гигиеничные макросы дают больше свободы в метапрограммировании, чем
исторический костыль из плюсов.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 07 Jun 2014 13:54:01 +0300</pubDate><guid>tag:imdagger.github.io,2014-06-07:posts/2014/06/07/urn:ya.ru:post/22199227/1966/</guid><category>Rust</category><category>мысль</category><category>C++</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/30/urn:ya.ru:post/22199227/1965/</link><description>&lt;p&gt;Ееее! Сегодня моему «уютненькому» уже 5 лет! Пусть растёт большой :)
Хотя уже совсем не так быстро как раньше.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 30 May 2014 18:33:33 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-30:posts/2014/05/30/urn:ya.ru:post/22199227/1965/</guid><category>блог</category><category>5</category><category>годовщина</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/25/urn:ya.ru:post/22199227/1964/</link><description>&lt;p&gt;Повезло, сегодня чуть не наступил на змею ногой. Впредь буду
внимательнее смотреть, что ползает по земле.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 25 May 2014 01:01:28 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-25:posts/2014/05/25/urn:ya.ru:post/22199227/1964/</guid><category>Я</category><category>опасность</category><category>жизнь</category></item><item><title>ICFPC 2014</title><link>http://imdagger.github.io/posts/2014/05/22/icfpc-2014/</link><description>&lt;p&gt;Ура! Наконец стали известны даты ICFP Programming Contest 2014. Это
будет 3 дня начиная с 25 июля. С нетерпением жду новых приключений :).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 22 May 2014 03:34:41 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-22:posts/2014/05/22/icfpc-2014/</guid><category>соревнование</category><category>2014</category><category>ожидание</category><category>icfpc</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/22/urn:ya.ru:post/22199227/1962/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Попробовал мороженое от Zielona Budka (это Польша), взял то, что без
молочных продуктов сделано. Я думал оно будет по вкусу и фактуре как
фруктовый лёд, а оказалось, что &lt;strong&gt;лучше&lt;/strong&gt; многих сортов мороженого, что
я пробовал. И килокалорий вышло всего 145 и без холестерина. В следующий
раз попробую их малиновый сорбет.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 22 May 2014 01:59:40 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-22:posts/2014/05/22/urn:ya.ru:post/22199227/1962/</guid><category>радость</category><category>жизнь</category><category>еда</category><category>мороженое</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/17/urn:ya.ru:post/22199227/1959/</link><description>&lt;p&gt;Странно, как я пропустил такой интересный фильм как «Limitless». Хм,
может быть я забыл опять принять свои ноотропы? :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 17 May 2014 04:29:10 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-17:posts/2014/05/17/urn:ya.ru:post/22199227/1959/</guid><category>интересно</category><category>фильм</category><category>жизнь</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/16/urn:ya.ru:post/22199227/1958/</link><description>&lt;p&gt;Пожалуй у ByFly сегодня даже более серьёзные проблемы, чем все эти две
или три недели:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;…&lt;/div&gt;
&lt;div class="line"&gt;3354 packets transmitted, 12 received, &lt;strong&gt;99% packet loss&lt;/strong&gt;, time 3380764ms&lt;/div&gt;
&lt;div class="line"&gt;rtt min/avg/max/mdev = 244.105/1204.424/3983.568/1329.357 ms, pipe 4&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 16 May 2014 02:00:52 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-16:posts/2014/05/16/urn:ya.ru:post/22199227/1958/</guid><category>byfly</category><category>интернет</category><category>проблема</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/14/urn:ya.ru:post/22199227/1957/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Наконец я заметил, где в Gimp переключается цетовой профиль для уже
существующих изображений (т.к. настройки рабочего холста расположены в
Правка → Параметры → Управление цветом), а я для профиля искал тоже
параметры в настройках а они в:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Изображение → Режим → Назначить цветовой профиль&lt;/p&gt;
&lt;p&gt;Изображение → Режим → Преобразовать в цветовой профиль&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; Теперь я могу сохранять PNG с цветовым профилем sRGB. Заодно
познакомился с утилитой colormgr, при помощи которой можно посмотреть
устройства и профили.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 14 May 2014 18:35:17 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-14:posts/2014/05/14/urn:ya.ru:post/22199227/1957/</guid><category>gimp</category><category>цвет</category><category>colormgr</category><category>профиль</category><category>srgb</category></item><item><title>Транспорт в Гомеле</title><link>http://imdagger.github.io/posts/2014/05/05/transport-v-gomele/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; В браузере я привык использовать gomeltrans.net, но на смартфоне я
редко включаю 3G-интернет. А вот для мобильной версии нашёлся GoTrans,
удобное приложение, может работать оффлайн, сайт у них тоже приятный;
правда привычкам изменять сложно и с компьютера я буду как и раньше
открывать любимый сайт. Зато в мобильном +1 приложение.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 05 May 2014 19:15:40 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-05:posts/2014/05/05/transport-v-gomele/</guid><category>мобильный</category><category>транспорт</category><category>Гомель</category><category>приложение</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/05/02/urn:ya.ru:post/22199227/1953/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Игра “Нямстеры” затягивает… Простые правила, забавные персонажи и
приятный игровой процесс. Убивает время однозначно.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 02 May 2014 02:06:14 +0300</pubDate><guid>tag:imdagger.github.io,2014-05-02:posts/2014/05/02/urn:ya.ru:post/22199227/1953/</guid><category>игра</category><category>нямстеры</category></item><item><title>Pygame и MP3</title><link>http://imdagger.github.io/posts/2014/04/25/pygame-i-mp3/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В документации написано, что mp3 ограниченно поддерживается и на
некоторых платформах могут быть проблемы (даже падение с segfault). В
моём случае на Ubuntu 12.04 LTS с Pygame из пакетов и всем остальным по
умолчанию попытка проиграть MP3 заканчивается щелчком из динамика, но не
падает (возможно так не для любого файла, но для тех, что у меня были
случилось именно так). Я решил переконвертировать из в OGG-формат. Но
после опять, щелчок и всё, благо у меня был один рабочий файл и я
увидел, что мои конвертированные — пожаты FLAC, а рабочий — Vorbis.
После этого я указал принудительно использовать нужный кодек (а не по
умолчанию) и Pygame стал всё отлично воспроизводить:&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;avconv -i файл.mp3 -codec:a libvorbis файл.ogg&lt;/strong&gt;&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 25 Apr 2014 17:35:01 +0300</pubDate><guid>tag:imdagger.github.io,2014-04-25:posts/2014/04/25/pygame-i-mp3/</guid><category>музыка</category><category>ubuntu</category><category>звук</category><category>pygame</category><category>vorbis</category><category>mp3</category><category>flac</category><category>ogg</category></item><item><title>atan2</title><link>http://imdagger.github.io/posts/2014/04/19/atan2/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Стоит быть внимательным с функцией atan2 и из Python (math.atan2) и
из Racket (да, и наверное везде так). Первый аргумент это Y, а второй X.
Но не наоборот.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 19 Apr 2014 16:22:37 +0300</pubDate><guid>tag:imdagger.github.io,2014-04-19:posts/2014/04/19/atan2/</guid><category>внимательность</category><category>аргументы</category><category>atan2</category><category>python</category><category>racket</category><category>параметры</category></item><item><title>Потокобезопасность</title><link>http://imdagger.github.io/posts/2014/04/15/potokobezopasnost/</link><description>&lt;p&gt;Похоже,
что&amp;nbsp;&lt;a class="reference external" href="http://license.scala.com/readme/ScriptingAutomation.html"&gt;ScalaPlayer&lt;/a&gt;
не дружит с попыткой дёргать его метод Log из разных нитей из Python.
Как-то это всё заканчивается плачевно — тихим падением. Поэтому лучше
завернуть ScalaPlayer.Log в родной python-овский обработчик из модуля
logging:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;logging&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;ScalaLogHandler&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;logging&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Handler&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;emit&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;record&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;ScalaPlayer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Log&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;record&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Т.к. logging.Handler потокобезопасный и весь модуль logging тоже.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 15 Apr 2014 03:53:22 +0300</pubDate><guid>tag:imdagger.github.io,2014-04-15:posts/2014/04/15/potokobezopasnost/</guid><category>блокировка</category><category>ScalaPlayer</category><category>scala</category><category>поток</category><category>python</category><category>безопасность</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/04/11/urn:ya.ru:post/22199227/1949/</link><description>&lt;p&gt;Купил новые батарейки для моего беспроводного грызуна. Вставил,
подключил, не работает. Мышь пролежала до этого где-то полгода без
использования. Пришлось разобрать, убрал все окисления, зачистил
контакты питания, убрал в нескольких местах КЗ на дорожках, собрал, ура!
снова работает. :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 11 Apr 2014 20:14:58 +0300</pubDate><guid>tag:imdagger.github.io,2014-04-11:posts/2014/04/11/urn:ya.ru:post/22199227/1949/</guid><category>починил</category><category>мышь</category><category>неисправность</category><category>беспроводная</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/04/11/urn:ya.ru:post/22199227/1948/</link><description>&lt;p&gt;Я расчитывал, что сборка числа в комплексное (достаточно дешёвая
операция) и последующее вычисление магнитуды будут быстрее, чем сумма
квадратов и извлечение корня, т.к. функция magnitude реализована в
математическом ядре Racket и написана на C. Но это не так,
JIT-оптимизированный код справляется с задачей быстрее, т.к. нет лишних
вызовов функций, чистая математика. А если подключить racket/flonums для
дробной арифметики, то скорость тогда ещё больше возрастает.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;magnitude&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;make-rectangular&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2020&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2013&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;20&lt;/span&gt;
&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;-&amp;gt;fl&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;magnitude&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;make-rectangular&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1280&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1279&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;48&lt;/span&gt;
&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;sqrt&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;984&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;980&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;8&lt;/span&gt;
&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;-&amp;gt;fl&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;flsqrt&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fl+&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fl*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fl*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;84&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;84&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Разница между первым и последним вариантом наглядна.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 11 Apr 2014 01:40:08 +0300</pubDate><guid>tag:imdagger.github.io,2014-04-11:posts/2014/04/11/urn:ya.ru:post/22199227/1948/</guid><category>magnitude</category><category>flonum</category><category>производительность</category><category>вычисление</category><category>расстояние</category><category>racket</category></item><item><title>Множители</title><link>http://imdagger.github.io/posts/2014/03/25/mnozhiteli/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Забавно, что первое такое N, что количество натуральных чисел с
нечётным числом простых множителей равно количеству с чётным числом
множителей на отрезке [2;N], является 906150257 и не какое-нибудь другое
меньшее.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 25 Mar 2014 13:28:27 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-25:posts/2014/03/25/mnozhiteli/</guid><category>простое</category><category>программирование</category><category>математика</category><category>вычисление</category></item><item><title>Регулярка и проверка на простоту?</title><link>http://imdagger.github.io/posts/2014/03/24/reguliarka-i-proverka-na-prostotu/</link><description>&lt;p&gt;Немного безумия и можно при помощи регулярного выражения проверить
простое ли число&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;re&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;is_complex&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;re&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;compile&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^1?$|^(11+?)\1+$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;check_prime&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;n&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;bool&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;is_complex&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;match&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt; &lt;span class="pgcss-n"&gt;n&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_83138896"data-toggle="collapse"&gt;Подробнее&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_83138896"&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(1)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(2)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(3)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(4)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(101)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(200)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(243)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(901)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(903)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(997)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Как работает это? is_complex проверяет есть ли у числа какие-либо
два множителя, т.е. при помощи регулярного аражения происходит
факторизация числа. Само число записывается как такое же количество
единиц равное значению.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Часть&lt;/em&gt; выражения:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
... ^(11+?)\1+ ...
&lt;/pre&gt;
&lt;p&gt;Означает, что строка состоит из двух или более единиц таких, что
встречаются два или более раза в ней. Т.е. получается, что проверка
регулярным выражением пытается выразить N единиц через A * B; если это
возможно, то число составное.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 24 Mar 2014 02:30:29 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-24:posts/2014/03/24/reguliarka-i-proverka-na-prostotu/</guid><category>ненормальное</category><category>программирование</category><category>число</category><category>простое</category></item><item><title>django-polymorphic и поле начинающееся с подчёркивания</title><link>http://imdagger.github.io/posts/2014/03/15/django-polymorphic-i-pole-nachinaiushcheesia-s-podchiorkivaniia/</link><description>&lt;p&gt;Если название поля начинается с одинарного продчёркивания, то в
некоторых случаях в вложенных запросах не получится его использовать,
polymorphic будет ругаться на модель. Почему? Потому, что в
django-polymorphic есть поддержка &amp;quot;_&lt;strong&gt;_&lt;/strong&gt;_&amp;quot; (тройного
подчёркивания), которое означает, что указана модель и её поле. Это всё
нужно, чтобы не писать
filter(writtingdocument_sellabledocument_traidingdocument_mymegafield),
а написать просто filter(TraidingDocument_&lt;strong&gt;_&lt;/strong&gt;_mymegafield), и
библиотека уже сама сгенерирует полный путь. Удобно, в доке описано, но
я как-то не обратил внимание, что там оно тройное и тогда не уловит
из-за этого суть. А наткнулся, когда попытался обратное поле фильтровать
_client_profile, получалось, что-то типа
filter(user_&lt;strong&gt;_&lt;/strong&gt;_client_profile), и от этого django-polymorphic
решал, что user никакое не название промежуточного поля, а название
модели. Быстрое решение? Не называть с “_” поля, если используешь
библиотеку полиморфных моделей.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 15 Mar 2014 03:31:49 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-15:posts/2014/03/15/django-polymorphic-i-pole-nachinaiushcheesia-s-podchiorkivaniia/</guid><category>django-polymorphic</category><category>запрос</category><category>программирование</category><category>подчёркивание</category><category>название</category><category>модель</category><category>поле</category><category>python</category><category>тройной</category><category>фильтрация</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/03/12/urn:ya.ru:post/22199227/1942/</link><description>&lt;p&gt;ни к чему чужое мнение, в моде самовыражение&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 12 Mar 2014 03:08:41 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-12:posts/2014/03/12/urn:ya.ru:post/22199227/1942/</guid></item><item><title>Синтаксическая параметризация</title><link>http://imdagger.github.io/posts/2014/03/12/sintaksicheskaia-parametrizatsiia/</link><description>&lt;p&gt;Если использовать обычный syntax-parameterize, то внутри него ни
объявить структуру, ни переменные. Но зато есть
&lt;a class="reference external" href="http://docs.racket-lang.org/reference/splicing.html?q=splicing-synax-parameterize&amp;amp;q=syntax-parameterize#%28form._%28%28lib._racket%2Fsplicing..rkt%29._splicing-syntax-parameterize%29%29"&gt;splicing-syntax-parameterize&lt;/a&gt;,
который как раз все объявления пробрасывает на уровень выше — в
родительскую конструкцию. Только обязательно следует импортировать
&lt;code class="code"&gt;
(require racket/splicing)&lt;/code&gt;
, т.к. конструкция описана в этом модуле и без
подключения может казаться, что сплайсинг не работает, а не то, что
идентификатор не объявлен.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 12 Mar 2014 03:06:10 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-12:posts/2014/03/12/sintaksicheskaia-parametrizatsiia/</guid><category>racket</category><category>splicing-syntax-parameterize</category><category>struct</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/03/12/urn:ya.ru:post/22199227/1940/</link><description>&lt;p&gt;Удобная штука декорирование в Racket для структур, правда я думал, что
оно реализовано на уровне библиотеки, а оказалось, что в самом рантайме.
Оно используется для контрактного программирования (есть и chaperone,
который для постусловий), но может быть полезна для перехвата, например,
момента, когда происходит установка поля в структуре и последующей
модификации.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;struct&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;y&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-kd"&gt;#:mutable&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some&lt;/span&gt; &lt;span class="pgcss-n"&gt;f&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;impersonate-struct&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                     &lt;span class="pgcss-n"&gt;set-x-y!&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;self&lt;/span&gt; &lt;span class="pgcss-n"&gt;new-v&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;f&lt;/span&gt; &lt;span class="pgcss-n"&gt;new-v&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;add1&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;sub1&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 1&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 1&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;set-x-y!&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;set-x-y!&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 4&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 12 Mar 2014 02:59:11 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-12:posts/2014/03/12/urn:ya.ru:post/22199227/1940/</guid><category>контракт</category><category>impersonate</category><category>racket</category><category>обработчик</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/03/09/urn:ya.ru:post/22199227/1939/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Для меня было довольно неожиданным увидеть в списке тех мест, где
соревнование Google Code Jam не распространяется провинцию Квебек
(Канада); это среди Северной Кореи, Судана, Кубы, Сирии и Саудовской
Аравии.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 09 Mar 2014 01:42:02 +0300</pubDate><guid>tag:imdagger.github.io,2014-03-09:posts/2014/03/09/urn:ya.ru:post/22199227/1939/</guid><category>соревнование</category><category>Квебек</category><category>google</category><category>codejam</category></item><item><title>Быстрая аппроксимация расстояния</title><link>http://imdagger.github.io/posts/2014/02/27/bystraia-approksimatsiia-rasstoianiia/</link><description>&lt;p&gt;Улучшенное Манхэттенское расстояние.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 27 Feb 2014 01:24:14 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-27:posts/2014/02/27/bystraia-approksimatsiia-rasstoianiia/</guid><category>расстояние</category><category>быстрый</category><category>функция</category><category>аппроксимация</category></item><item><title>Скрещивание ужа и ежа</title><link>http://imdagger.github.io/posts/2014/02/26/skreshchivanie-uzha-i-ezha/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Выложил на Github &lt;a class="reference external" href="https://gist.github.com/IMDagger/9220764"&gt;мой
переходник&lt;/a&gt;, который
пытается любыми правдами и неправдами транслировать зарегистрированные
модели из Django Admin в XAdmin. Для этого приходится собирать все
атрибуты, которые объявлены после базовой модели, строить над ними
обёртки, которые подсовывают requests параметр по необходимости (actions
не принимают этот параметр). И после этого приводится list_display поле
в перевариваемый вид для XAdmin, т.к. она не работает с полями в виде
функций, приходится их регистрировать в классе при чём так, чтобы
обёртка выглядела как то, что оборачивают — со всеми short_description.
Свойства пока не обслуживаются, всё равно они встречаются редко в
дескрипторах моделей для админки. Лучше конечно без него, но некоторые
библиотеки описывают свои модели для админки и хотелось бы их иметь
автоматически.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 26 Feb 2014 22:51:56 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-26:posts/2014/02/26/skreshchivanie-uzha-i-ezha/</guid><category>django-xadmin</category><category>Django</category><category>преобразование</category><category>XAdmin</category><category>трасляция</category><category>переходник</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/02/25/urn:ya.ru:post/22199227/1936/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Сделал переходник, который автоматом классы админки из django-admin
приводит к форме, которую понимает django-xadmin. Конечно полное решение
сделать не так и просто, поэтому я остановился на частичном, костыльном.
Всё из-за того, что xadmin не расширяет стандартный admin, а скорее
копирует функционал с огромным количеством своих несовместимых
изменений. Но в целом интерфейс на уровне кода у них похож при описании
обработчика для модели. Нужно привести немного в человеческий вид и
выложить на Gist, может кому будет полезно. Т.к. полно библиотек которые
регистрируют свои дополнения к админке, но xadmin их не может
подхватить.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 25 Feb 2014 01:43:20 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-25:posts/2014/02/25/urn:ya.ru:post/22199227/1936/</guid><category>django-xadmin</category><category>обработчик</category><category>модель</category><category>admin</category><category>совместимость</category><category>Django</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/02/20/urn:ya.ru:post/22199227/1935/</link><description>&lt;p&gt;Не нашёл я как в Django сделать так, чтобы в ModelForm можно было
уже &lt;strong&gt;ранее описанным&lt;/strong&gt; полям изменять их widget, и всё из-за того, что
поля инстанцируются ещё в метаклассе, что вызывает проблемы — заново
туда не подсунуть widget, label и другие аргументы. Поэтому пришлось
построить небольшой свой велосипед с квадратными колёсами. В котором
поля, которые перекрывают другие и при этом нуждаются в гибкости (чтобы
в наследниках можно было легко заменить некритичные участки),
объявляются как &lt;code class="code"&gt;
Meta.override _fields&lt;/code&gt;
:&lt;/p&gt;
&lt;p&gt;Он &lt;a class="reference external" href="https://gist.github.com/IMDagger/9102834"&gt;доступен на GitGub&lt;/a&gt;.&lt;/p&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_85626128"data-toggle="collapse"&gt;посмотреть мой велосипед&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85626128"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;forms&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.forms&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;widgets&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;ModelFormStyler&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;forms&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModelForm&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__metaclass__&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;    Allows to write such kind of forms:&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;    ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;    class Some(ModelFormStyler):&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;        class Meta:&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            model = ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            widgets = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: widgets.Textarea(attrs={&amp;#39;rows&amp;#39;: 5}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            },&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            override_fields = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: (forms.CharField, dict(label=..., ...)),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field2&amp;#39;: (MyCustomField, dict(widget=widgets.TextInput())),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            }&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;         ... methods here ...&lt;/span&gt;

&lt;span class="pgcss-sd"&gt;    class Some2(Some):&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;        class Meta:&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            model = ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            widgets = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: widgets.Textarea(attrs={&amp;#39;rows&amp;#39;: 100500}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field2&amp;#39;: widgets.Textarea(attrs={&amp;#39;rows&amp;#39;: 100500}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            },&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            labels = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: &amp;#39;another label&amp;#39;,&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            },&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            override_fields = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field2&amp;#39;: (MyCustomField2, {}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            }&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;         ... methods here again ...&lt;/span&gt;

&lt;span class="pgcss-sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="pgcss-n"&gt;__sections&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;widgets&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;widget&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# section name -&amp;gt; argument name&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;}&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;__new__&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;super_new&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;super&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModelFormStyler&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__new__&lt;/span&gt;

        &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_override_custom_widgets&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_class&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;super_new&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_class&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@classmethod&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;__replacement_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;opt_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;try&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# .widgets, .labels and etc&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;getattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Meta&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-n"&gt;opt_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;except&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;pass&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;base&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;try&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;getattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;base&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Meta&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;opt_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;except&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;pass&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@classmethod&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;__field_descr_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__replacement_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;field_overrides&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@classmethod&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;_override_custom_widgets&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;Meta&amp;#39;&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;entire_dirty&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;set&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;field_overrides&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__sections&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;keys&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# .field_overrides together with .widgets, .labels&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;dirty&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;getattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Meta&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;{})&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;entire_dirty&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;update&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;dirty&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;iterkeys&lt;/span&gt;&lt;span class="pgcss-p"&gt;())&lt;/span&gt;

            &lt;span class="pgcss-n"&gt;dirty_fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[]&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# it&amp;#39;s now without duplicates&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;entire_dirty&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;descr&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__field_descr_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;descr&lt;/span&gt; &lt;span class="pgcss-ow"&gt;is&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;dirty_fields&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;append&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;descr&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;

            &lt;span class="pgcss-c"&gt;# create fields for all dirty descriptors (local and parent)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ftype&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;dirty_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;options&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;dict&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# process&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;arg_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__sections&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;iteritems&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;arg_value&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__replacement_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;arg_value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;is&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                        &lt;span class="pgcss-n"&gt;options&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;arg_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;arg_value&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;ftype&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;options&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;ControlModelForm&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;forms&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModelForm&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;__metaclass__&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;ModelFormStyler&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 20 Feb 2014 01:45:09 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-20:posts/2014/02/20/urn:ya.ru:post/22199227/1935/</guid><category>Django</category><category>виджет</category><category>поле</category><category>перекрытие</category><category>перегрузка</category><category>modelform</category><category>форма</category><category>работа</category><category>программирование</category></item><item><title>Удаление строки</title><link>http://imdagger.github.io/posts/2014/02/18/udalenie-stroki/</link><description>&lt;p&gt;Функция удаление строки в Emacs без запоминания в kill ring буфер, а
то бывает нужно в своём плагине или конфиге удалить строчку, но не
запоминать её в буфер:&lt;/p&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_85042384"data-toggle="collapse"&gt;посмотреть код&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85042384"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;defun&lt;/span&gt; &lt;span class="pgcss-nv"&gt;delete-line&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;&amp;amp;optional&lt;/span&gt; &lt;span class="pgcss-nv"&gt;arg&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;interactive&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;P&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;flet&lt;/span&gt; &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nv"&gt;kill-region&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;begin&lt;/span&gt; &lt;span class="pgcss-nv"&gt;end&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                      &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;delete-region&lt;/span&gt; &lt;span class="pgcss-nv"&gt;begin&lt;/span&gt; &lt;span class="pgcss-nv"&gt;end&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;kill-line&lt;/span&gt; &lt;span class="pgcss-nv"&gt;arg&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 18 Feb 2014 03:28:08 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-18:posts/2014/02/18/udalenie-stroki/</guid><category>запоминание</category><category>функция</category><category>строка</category><category>emacs</category><category>ring</category><category>удаление</category></item><item><title>Проблема с удалением множества объектов в polymorphic</title><link>http://imdagger.github.io/posts/2014/02/13/problema-s-udaleniem-mnozhestva-obektov-v-polymorphic/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Если есть некоторый класс A и в нём поле b, которое может описывать
множество объектов класса C, у которого есть потомки D и E, то при
попытке удалить все эти объекты разом может возникнуть проблема (у меня
возникает в админке). И суть ещё заключается в том, что в Django при
сборе всех зависимых объектов &lt;a class="reference external" href="https://github.com/django/django/blob/stable/1.6.x/django/db/models/deletion.py#L170"&gt;берут первый из
списка&lt;/a&gt;,
его класс и остальные обрабатывают из расчёта на его поля, хотя в этом
множестве могут быть немного другие по поведению объекты. Придётся
какой-то обходной путь строить, иначе не получается удалять в админке
пользователей, т.к. те у меня тащат за собой созданные ими документы,
которые имеют небольшие различия, что сразу отправляет обработчик
запроса в 502.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 13 Feb 2014 23:56:19 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-13:posts/2014/02/13/problema-s-udaleniem-mnozhestva-obektov-v-polymorphic/</guid><category>ошибка</category><category>django-polymorphic</category><category>программирование</category><category>Django</category><category>запрос</category><category>удаление</category><category>работа</category><category>администрирование</category></item><item><title>Ваня и Тотошка</title><link>http://imdagger.github.io/posts/2014/02/11/vania-i-totoshka/</link><description>&lt;p&gt;Посмотрел, в целом понравилось, только бездомных со свалки стоило было
как-то получше загримировать, видно, что не спитые и кожа достаточно
чистая.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 11 Feb 2014 03:32:56 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-11:posts/2014/02/11/vania-i-totoshka/</guid><category>драма</category><category>фильм</category><category>жизнь</category><category>артхаус</category></item><item><title>Sentry для Scrapy</title><link>http://imdagger.github.io/posts/2014/02/10/sentry-dlia-scrapy/</link><description>&lt;p&gt;О, есть уже готовая связка для пауков на Scrapy с отправкой логов в
Sentry.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 10 Feb 2014 23:00:30 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-10:posts/2014/02/10/sentry-dlia-scrapy/</guid><category>sentry</category><category>логгирование</category><category>scrapy</category></item><item><title>Список продуктов питания</title><link>http://imdagger.github.io/posts/2014/02/09/spisok-produktov-pitaniia/</link><description>&lt;p&gt;Ого, огромный список продуктов, где к каждому можно посмотреть,
витамины, липиды, углеводы, воду, клетчатку и др.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 09 Feb 2014 03:11:48 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-09:posts/2014/02/09/spisok-produktov-pitaniia/</guid><category>база</category><category>продукты</category><category>информация</category><category>питание</category><category>список</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/02/06/urn:ya.ru:post/22199227/1925/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Сидел я как-то выбирал такую функцию, чтобы она в нуле была 0, а в 1
единица. А потом понял, что если формализовать то, что я хочу, решение
сразу само получается. Т.к. F(0) = 0, F(1) &amp;lt;&amp;gt; 0, G(x) = F(x)/F(1). И
сразу смог составить на основе арктангенса функцию, чтобы управлять
кривизной и пологостью. Разными коэффициентами можно задать линейную,
параболу и гиперболу, а также различные промежуточные комбинации. Я
выбирал такие функции, чтобы отображать [0; 1] в [0; 1].&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 06 Feb 2014 12:00:45 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-06:posts/2014/02/06/urn:ya.ru:post/22199227/1925/</guid><category>функция</category><category>отображение</category><category>отрезок</category><category>выбор</category></item><item><title>Пропорциональная сетка в gnuplot</title><link>http://imdagger.github.io/posts/2014/02/06/proportsionalnaia-setka-v-gnuplot/</link><description>&lt;p&gt;Всё время не доходили руки поискать, как заставить gnuplot отображать
квадратные ячейки в сетке при построении графиков, чтобы всё было
пропорционально.
set size square и вуаля.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 06 Feb 2014 11:36:33 +0300</pubDate><guid>tag:imdagger.github.io,2014-02-06:posts/2014/02/06/proportsionalnaia-setka-v-gnuplot/</guid><category>пропорция</category><category>построение</category><category>gnuplot</category><category>график</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/01/29/urn:ya.ru:post/22199227/1923/</link><description>&lt;p&gt;Вот так и доверяй «безопасности», которую «обеспечивают» PayPal и
GoDaddy для своих клиентов.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 29 Jan 2014 14:34:47 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-29:posts/2014/01/29/urn:ya.ru:post/22199227/1923/</guid><category>godaddy</category><category>paypal</category><category>безопасность</category></item><item><title>Celery, нити и обновление прогресса</title><link>http://imdagger.github.io/posts/2014/01/26/celery-niti-i-obnovlenie-progressa/</link><description>&lt;p&gt;Похоже, что celery.current_task.update_state не дружит с вызовом
из области другой нити. Если создать нити и обернуть вызов обновления
состояния в Lock, чтобы не было параллельного обращения, то всё равно
рабочий процесс от Celery останавливается и не больше отзывается и чтобы
сделать restart нужно сначала его сбить. Не изучал вопрос почему, но
скорее всего из-за того, что я использую Celery “в связке для ленивых”,
т.е. с MySQL; а вот уже его драйверу возможно и не нравится, когда я
дёргаю его из одной нити, а создавал в другой. Произвёл вызов обновления
состояния в основном потоке в цикле по ожиданию события (плюс по
истечению интервала времени) и всё заработало как хотелось, а прогресс
обновления стал передавать по событию от дочерних нитей.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 26 Jan 2014 23:50:23 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-26:posts/2014/01/26/celery-niti-i-obnovlenie-progressa/</guid><category>Celery</category><category>нить</category><category>обработка</category><category>обновление</category><category>дочерний</category><category>прогресс</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/01/23/urn:ya.ru:post/22199227/1921/</link><description>&lt;p&gt;Разобрался как в django-xadmin добавить свои кнопки к тем, что есть.
Придётся перекрывать шаблон &lt;code class="code"&gt;
includes/submit _line.html&lt;/code&gt;
, т.к. там зашиты
базовые кнопки. И нужно будет перехватывать &lt;code class="code"&gt;
post _response&lt;/code&gt;
 и производить
свой набор действий.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 23 Jan 2014 03:51:45 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-23:posts/2014/01/23/urn:ya.ru:post/22199227/1921/</guid><category>python</category><category>django-xadmin</category><category>кнопки</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/01/14/urn:ya.ru:post/22199227/1920/</link><description>&lt;p&gt;Нашёл
как&amp;nbsp;&lt;a class="reference external" href="http://orgmode.org/manual/Working-With-Source-Code.html#Working-With-Source-Code"&gt;управлять&lt;/a&gt;
режимом экспорта блоков кода в org-babel. Оказывается там много всего:
можно исполнить блок и отправить его результат на экспорт, можно
отправить сам блок, а можно
&lt;a class="reference external" href="http://orgmode.org/manual/Extracting-source-code.html"&gt;экспортировать&lt;/a&gt;
блок в отдельный файл или исключить его из этого процесса. В общем,
раздолье для литературного программирования (Дональд Кнут на этой
строчке радостно улыбается во сне) и всяких штук, где нужно иметь что-то
типа документации неотрывно от блоков кода и при этом, чтобы всё
управлялось как журнал, дневник, с таблицами и калькулятором.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 14 Jan 2014 02:55:13 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-14:posts/2014/01/14/urn:ya.ru:post/22199227/1920/</guid><category>экспорт</category><category>фильтрация</category><category>tangle</category><category>org-babel</category></item><item><title>Прошлогодний огонёк</title><link>http://imdagger.github.io/posts/2014/01/14/proshlogodnii-ogoniok/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/618553"&gt;&lt;img alt="ALIM3434.JPG" src="http://img-fotki.yandex.ru/get/9061/22199227.b/0_97039_39569d29_L" title="ALIM3434.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Версия собранная на плате.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 14 Jan 2014 01:40:19 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-14:posts/2014/01/14/proshlogodnii-ogoniok/</guid><category>напряжение</category><category>сборка</category><category>генератор</category><category>Маркс</category><category>электроника</category></item><item><title>Тюнинг конфига для моего редактора</title><link>http://imdagger.github.io/posts/2014/01/14/tiuning-konfiga-dlia-moego-redaktora/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В след за изменениями в основной ветке конфига, а точнее,
группировкой всех настроек в единый .org-файл с описанием и
иерархической структурой; я решил, что пора довести это всё дело до ума
и влить часть моих правок в &lt;a class="reference external" href="https://github.com/IMDagger/dot-emacs"&gt;русло основных
настроек&lt;/a&gt;. Естественно я
выключил evil mode, добавил tabbar, и безопасное закрытие фреймов.
Пришлось изменить часть настроек из-за того, что меня не устраивает TeX,
как второй язык по умолчанию, исправить некоторые опечатки и
усовершенствовать удаление строки для случая со скобками (об этом я
отписал автору оригинального конфига в его репозиторий).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Единственное, что меня пока немного удручает это скорость экспорта
из org-babel в настоящий конфиг для загрузки, но будет время (надеюсь не
опять во время болезни, как в этот раз) и я гляну, что там оно так часто
синхронизирует буфер с винчестером (удивительно было бы, если оно быстро
экспортировало бы да ещё и на обычный HDD с пониженными оборотами).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; А так я вообще приобрёр кучу всего: и geiser для racket с
автодополнением, и python с flycheck режимом и jedi сервером, хотя стоит
добавить какую-то фишку, чтобы можно было отключить часть настроек. Т.к.
мне не особо нужны настройки для Clojure, Scala, Ruby и Haskell. Но
Chris Barret они нужны, т.к. видимо это его сфера интересов. Хотя и я
просто выбрасывать не собираюсь эти настройки, просто пока не хочу
тратить время загрузки на них.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 14 Jan 2014 01:20:42 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-14:posts/2014/01/14/tiuning-konfiga-dlia-moego-redaktora/</guid><category>org-mode</category><category>emacs</category><category>жизнь</category><category>настройки</category><category>улучшение</category></item><item><title>Проверка SSL-отпечатка</title><link>http://imdagger.github.io/posts/2014/01/11/proverka-ssl-otpechatka/</link><description>&lt;p&gt;Что-то сертификат на xmpp.ya.ru:5223 поменялся, вот решил перепроверить
его fingerprint.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 11 Jan 2014 18:02:57 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-11:posts/2014/01/11/proverka-ssl-otpechatka/</guid><category>fingerprint</category><category>сертификат</category><category>проверка</category><category>отпечаток</category><category>ssl</category></item><item><title>Передвижка домов в Москве</title><link>http://imdagger.github.io/posts/2014/01/10/peredvizhka-domov-v-moskve/</link><description>&lt;p&gt;Интересные исторические события по перемещению домов в десятки тысяч
тонн с одного места в другое. Особенно меня удивляют/пугают случаи без
выселения жильцов в момент переезда.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 10 Jan 2014 01:05:30 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-10:posts/2014/01/10/peredvizhka-domov-v-moskve/</guid><category>дом</category><category>переезд</category><category>Москва</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/01/07/urn:ya.ru:post/22199227/1915/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/617919"&gt;&lt;img alt="ALIM3341.JPG" src="http://img-fotki.yandex.ru/get/9058/22199227.b/0_96dbf_85f580c2_L" title="ALIM3341.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Из неудачной версии генератора Маркса. Потом пришлось всё равно
перенести на плату.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 07 Jan 2014 02:19:14 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-07:posts/2014/01/07/urn:ya.ru:post/22199227/1915/</guid><category>конденсатор</category><category>жизнь</category><category>пайка</category></item><item><title>Куб Эшера</title><link>http://imdagger.github.io/posts/2014/01/05/kub-eshera/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/617783"&gt;&lt;img alt="Куб Эшера" src="http://img-fotki.yandex.ru/get/9257/22199227.b/0_96d37_68c8f266_L" title="Куб Эшера"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Моя проба смоделировать нереальную фигуру куб Эшера.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 05 Jan 2014 04:16:59 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-05:posts/2014/01/05/kub-eshera/</guid><category>нереальный</category><category>фигура</category><category>куб</category><category>Эшер</category><category>иллюзия</category></item><item><title></title><link>http://imdagger.github.io/posts/2014/01/03/urn:ya.ru:post/22199227/1911/</link><description>&lt;p&gt;всем лучей Бобра в 2014&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 03 Jan 2014 03:59:27 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-03:posts/2014/01/03/urn:ya.ru:post/22199227/1911/</guid></item><item><title>Менеджер по умолчанию и исключение в .save()</title><link>http://imdagger.github.io/posts/2014/01/03/menedzher-po-umolchaniiu-i-iskliuchenie-v-save/</link><description>&lt;p&gt;Если при использовании модели из django-polymorphic возникает ошибка
подобного вида при вызове &lt;code class="code"&gt;
.save&lt;/code&gt;
:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-x"&gt;(8 additional frame(s) were not displayed)&lt;/span&gt;
&lt;span class="pgcss-x"&gt;...&lt;/span&gt;
  File &lt;span class="pgcss-nb"&gt;&amp;quot;staff/views.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;236&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;edit_result&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;result&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;save&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
  File &lt;span class="pgcss-nb"&gt;&amp;quot;polymorphic/polymorphic_model.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;89&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;save&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;super&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;save&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-o"&gt;*&lt;/span&gt;&lt;span class="pgcss-n"&gt;args&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;


&lt;span class="pgcss-gr"&gt;IntegrityError&lt;/span&gt;: &lt;span class="pgcss-n"&gt;(1062, &amp;quot;Duplicate entry &amp;#39;72&amp;#39; for key &amp;#39;PRIMARY&amp;#39;&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Причём, после всех проверок видно, что дубликата, ну никак, не может
быть. То высока вероятность, что просто, пропущено явное указание
менеджера objects по умолчанию и подхватился какой-то другой из
менеджеров (конечно, если используется пропатченная версия
polymorphic-django). Тогда достаточно объявить недостающий обработчик:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-err"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;objects&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;CommonManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-c"&gt;# простая надстройка над PolymorphicManager&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;ready_articles&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;FinalsManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-c"&gt;# свой особенный менеджер&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 03 Jan 2014 03:58:41 +0300</pubDate><guid>tag:imdagger.github.io,2014-01-03:posts/2014/01/03/menedzher-po-umolchaniiu-i-iskliuchenie-v-save/</guid><category>django-polymorphic</category><category>IntegrityError</category><category>дубликат</category><category>исключение</category><category>модель</category><category>менеджер</category></item><item><title>django-polymorphic и bulk_create</title><link>http://imdagger.github.io/posts/2013/12/28/django-polymorphic-i-bulk_create/</link><description>&lt;p&gt;Если модель объявлена как полиморфная (к сожалению, не может быть
наследником другой полиморфной модели, на данный момент, из-за
накладываемых библиотекой ограничений), то django-polymorphic не очень
хорошо обходится с bulk_create запросом. Оно добавляет документы, но
при попытке их извлечь выбрасывает ошибку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  File &lt;span class="pgcss-nb"&gt;&amp;quot;.../site-packages/django/db/models/query.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;366&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;get&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;model&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_meta&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;object_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;DoesNotExist&lt;/span&gt;: &lt;span class="pgcss-n"&gt;ContentType matching query does not exist.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Всё из-за того, что в таблице polymorphic_ctype_id равен NULL. Мне
пришла идея в голову, как это обойти (скорее всего, есть более красивые
варианты, хотя бы просто сделать фикс для библиотеки и отправить в
мэйнстрим):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.contrib.contenttypes.models&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;ContentType&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;materials&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;models&lt;/span&gt; &lt;span class="pgcss-k"&gt;as&lt;/span&gt; &lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt; &lt;span class="pgcss-c"&gt;# мои модели&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;tag_ctype&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;ContentType&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;objects&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get_for_model&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;new_tag&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;polymorphic_ctype&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;tag_ctype&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
                                         &lt;span class="pgcss-n"&gt;document&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;final_doc&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;weight&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-mf"&gt;0.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Tag&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;objects&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;bulk_create&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;all_tags&lt;/span&gt; &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Самое важное, это получить tag_ctype объект типа контента для моего
полиморфного класса Tag. Django сохраняет это добро в таблицу
django_contenttypes. А затем для каждого объекта, предназначенного для
bulk_create, явно передать в качестве именованного параметра значение
tag_ctype.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 28 Dec 2013 02:39:49 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-28:posts/2013/12/28/django-polymorphic-i-bulk_create/</guid><category>django-polymorphic</category><category>тип</category><category>запрос</category><category>polymorphic_ctype</category><category>bulk_create</category><category>модель</category><category>особенность</category></item><item><title>ЛОР 2007</title><link>http://imdagger.github.io/posts/2013/12/27/lor-2007/</link><description>&lt;p&gt;Я тут случайно решил почитать свои комменты на ЛОРе … я какой-то
толстый тролль :D если бы не прочитал, что они принадлежат моему аккаунту,
то запросто мог бы подумать, что не моё. Я явно в тот момент был в
каком-то странном настроении, но в тантрум гарантированно не впадал!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 27 Dec 2013 01:59:20 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-27:posts/2013/12/27/lor-2007/</guid><category>жизнь</category><category>аккаунт</category><category>лор</category><category>комментарии</category><category>2007</category><category>бредни</category></item><item><title>Переносы слов, UTF-8 и XeLaTeX</title><link>http://imdagger.github.io/posts/2013/12/26/perenosy-slov-utf-8-i-xelatex/</link><description>&lt;p&gt;Заметка о том, как подружить babel с UTF-8 или использовать вместо него
polyglossia. Я выбрал второй вариант.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 26 Dec 2013 03:41:21 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-26:posts/2013/12/26/perenosy-slov-utf-8-i-xelatex/</guid><category>polyglossia</category><category>UTF-8</category><category>русский</category><category>babel</category><category>xelatex</category></item><item><title>Красота LaTeX</title><link>http://imdagger.github.io/posts/2013/12/26/krasota-latex/</link><description>&lt;p&gt;Красоту Лэйтэх можно увидеть в правильном кернинге, лигатурах и
начертаниях. Хотя для меня красота этого пакета заключается скорее в
том, что можно сделать один раз стилевой файл, а потом писать всё
остальное время только текст и не думать об отображении.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 26 Dec 2013 03:37:38 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-26:posts/2013/12/26/krasota-latex/</guid><category>красота</category><category>latex</category></item><item><title>django-polymorphic</title><link>http://imdagger.github.io/posts/2013/12/25/django-polymorphic/</link><description>&lt;p&gt;Обнаружилась проблема в библиотеке полиморфных моделей. При чём в
документации приведён пример, что всё должно быть хорошо, но на деле
выходит по-другому.
Даже&amp;nbsp;&lt;a class="reference external" href="https://github.com/chrisglass/django_polymorphic/issues/64"&gt;багрепорт&lt;/a&gt;
есть на GitHub, при чём свеженький. Проблема заключается в том, что код
пропускает менеджеры, которые являются в чистом виде экземплярами
PolymorphicManager, при чём &lt;a class="reference external" href="https://github.com/chrisglass/django_polymorphic/commit/78253bfe1238b5e46fed2597838427204666b5de#diff-dfb26a32320efe61614aaf8a602afd9bR152"&gt;так
задумано&lt;/a&gt;,
почему так? Точно не знаю. Ну да ладно, мы простых путей не ищем, и
объявляем наследника:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;TimeOrderedManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;CustomPolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;pass&lt;/span&gt;
&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;Project&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;objects&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;CustomPolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-c"&gt;# рассчитываем, что это менеджер по умолчанию&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;objects_ordered&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;TimeOrderedManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;       &lt;span class="pgcss-c"&gt;# а это дополнительный&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;После этого кажется, что всё работает как и требуется:
&lt;code class="code"&gt;
Project. _default _manager&lt;/code&gt;
 указывает на экземпляр
&lt;code class="code"&gt;
CustomPolymorphicManager&lt;/code&gt;
. Но достаточно унаследовать хотя бы одну модель
от Project и всё ломается:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-go"&gt;class ProjectChild(Project):&lt;/span&gt;
&lt;span class="pgcss-go"&gt;    pass&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;ProjectChild&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_default_manager&lt;/span&gt; &lt;span class="pgcss-c"&gt;# а вот это уже не порядок&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;lt;TimeOrderedManager object at 0x28d4990&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Получается, что в потомке менеджером по умолчанию стал другой
менеджер, не тот, что был в objects. Хотя ничего дополнительного не
объявлялось. И даже если снова указать принудительно objects в
ProjectChild — это &lt;strong&gt;не поможет&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;А всё вероятно потому, что в django-polymorphic есть баг с
обработкой менеджеров, которые пришли от потомка. Я обнаружил, что он их
сортирует опираясь на имя, что не хорошо без учёта &lt;code class="code"&gt;
creation _counter&lt;/code&gt;

параметра. После вот такой правки в base.py код выздоровел:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt;         &lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sorted&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;startswith&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]))&lt;/span&gt;
&lt;span class="pgcss-o"&gt;---&lt;/span&gt;
&lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt;         &lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sorted&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;startswith&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;creation_counter&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Попробую её продвинуть в мэйнстрим. Хотя может это и не полное
решение, но как мне кажется, необходимо при сортировке сначала отправить
в конец всё, что начинается с нижнего подчёркивания, ну а на следующем
уровне ориентироваться уже на индекс менеджера.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 25 Dec 2013 01:42:09 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-25:posts/2013/12/25/django-polymorphic/</guid><category>менеджер</category><category>ошибка</category><category>библиотека</category><category>django-polymorphic</category><category>модель</category></item><item><title>Дополнительное место на Я.Диске</title><link>http://imdagger.github.io/posts/2013/12/23/dopolnitelnoe-mesto-na-iadiske/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Неплохо, 7 лет почте и мне подарили 7ГБ на Яндекс.Диске. Теперь у
меня там побольше места, чтобы развернуться, а то я 90% успел заполнить
и синхронизировать туда документы средней важности. Важные я всё равно
сначала шифрую до синхронизации.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 23 Dec 2013 11:52:45 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-23:posts/2013/12/23/dopolnitelnoe-mesto-na-iadiske/</guid><category>место</category><category>почта</category><category>жизнь</category><category>я.диск</category><category>подарок</category></item><item><title>Моему ящику в Яндекс.Почте 7 лет ;)</title><link>http://imdagger.github.io/posts/2013/12/21/moemu-iashchiku-v-iandekspochte-7-let/</link><description>&lt;p&gt;О как время летит&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 21 Dec 2013 01:19:49 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-21:posts/2013/12/21/moemu-iashchiku-v-iandekspochte-7-let/</guid><category>почта</category><category>Яндекс</category><category>возраст</category></item><item><title>dict-set vs hash-set</title><link>http://imdagger.github.io/posts/2013/12/16/dict-set-vs-hash-set/</link><description>&lt;p&gt;Или я не умею варить generics структуры, которые надстроены над
базовыми типами или они не достаточно оптимально
написаны/оптимизируются. Т.к. разрыв по времени довольно большой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-o"&gt;#hash&lt;/span&gt;&lt;span class="pgcss-p"&gt;())&lt;/span&gt;

&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;dict-set&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;13728&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;13695&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;128&lt;/span&gt;

&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;hash-set&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;376&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;375&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Всё таки, различие почти 40x. И аналогичная ситуация для
мутабельного словаря. Я конечно понимаю, что dict-set никак не может
отработать также быстро как hash-set, ибо у него есть дополнительный
функционал и проверки связанные с его универсальностью, но всё же
отличие в 40 раз это для меня слишком, я бы спокойно отнёсся, если бы
было 375 и 500, но не 13695мс. Поэтому пока в критических местах, где
мне не нужна гибкость, буду использовать напрямую hash-set и др.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 16 Dec 2013 14:46:15 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-16:posts/2013/12/16/dict-set-vs-hash-set/</guid><category>hash</category><category>проблема</category><category>производительность</category><category>сравнение</category><category>dict</category><category>racket</category><category>generics</category><category>словарь</category></item><item><title>Обновление</title><link>http://imdagger.github.io/posts/2013/12/09/obnovlenie/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; С обновлением Racket с версии 5.3.5.1 до 6.0.0.1 полечилась проблема
с demod, который в старой версии сжирал ~4Гб оперативной памяти и за ним
приходил OOM-killer. Новая версия отъела 400-500Мб отработала минут 7 на
1 ядре и выдала монолитный модуль без деления, что и требовалось от
него.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 09 Dec 2013 02:18:57 +0300</pubDate><guid>tag:imdagger.github.io,2013-12-09:posts/2013/12/09/obnovlenie/</guid><category>ошибка</category><category>программирование</category><category>demodularize</category><category>racket</category><category>обновление</category><category>demod</category></item><item><title>struct*</title><link>http://imdagger.github.io/posts/2013/11/30/struct/</link><description>&lt;p&gt;Было приятно то, что в Racket в библиотеке пэттерн мэтчинга ко всему
множеству, что там есть, присутствует возможность задать шаблон
&lt;a class="reference external" href="http://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket/match..rkt%29._struct*%29%29"&gt;частичной
структурой&lt;/a&gt;,
т.е. не требуя от структуры наличия всех полей, а только тех, что
необходимы:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;struct&lt;/span&gt; &lt;span class="pgcss-n"&gt;s&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;a&lt;/span&gt; &lt;span class="pgcss-n"&gt;b&lt;/span&gt; &lt;span class="pgcss-n"&gt;c&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;data&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;list&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;s&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;match-define&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;list&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;struct*&lt;/span&gt; &lt;span class="pgcss-n"&gt;s&lt;/span&gt; &lt;span class="pgcss-p"&gt;{[&lt;/span&gt;&lt;span class="pgcss-n"&gt;a&lt;/span&gt; &lt;span class="pgcss-n"&gt;av&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;b&lt;/span&gt; &lt;span class="pgcss-n"&gt;bv&lt;/span&gt;&lt;span class="pgcss-p"&gt;]})&lt;/span&gt; &lt;span class="pgcss-k"&gt;_&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;data&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-c1"&gt;;; теперь в av и bv соответственно 1 и 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 30 Nov 2013 15:15:18 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-30:posts/2013/11/30/struct/</guid><category>struct*</category><category>pattern</category><category>программирование</category><category>matching</category><category>racket</category><category>структура</category><category>шаблон</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/11/27/urn:ya.ru:post/22199227/1889/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Зима на носу. Я смотрю по городу начали усерднее укладывать асфальт
и менять трубы с горячей водой. Ну что ж… всё верно, всё по фэн-шуй.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 27 Nov 2013 14:05:54 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-27:posts/2013/11/27/urn:ya.ru:post/22199227/1889/</guid><category>dura lex</category><category>жизнь</category><category>бредни</category></item><item><title>Из детства</title><link>http://imdagger.github.io/posts/2013/11/22/iz-detstva/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Смешно вспоминать, но когда-то, когда мне было 11 лет; не осилив в
книге по Pascal часть в ООП и Turbo Vision (да, та самая клёвая книжка
от Фаронова, у меня и вторая часть есть), я думал, что ООП это нечто,
что позволит мне отрисовывать быстрее графику на EC1842 через библиотеку
Graph. Ну да.. наивно, но что ж поделаешь, если там пример для ООП был
нескучный с графикой и отрисовкой НЛО. Это потом уже, после прочтения
второй книги стало ясно, что по-любому нужен прямой доступ к контроллеру
и управление VGA контроллером, чтобы добиться максимума скорости.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 22 Nov 2013 00:33:17 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-22:posts/2013/11/22/iz-detstva/</guid><category>воспоминание</category><category>жизнь</category><category>детство</category><category>ооп</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/11/19/urn:ya.ru:post/22199227/1887/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В следующий раз не буду тратить время на написание своего граббера,
а возьму сразу
&lt;a class="reference external" href="http://doc.scrapy.org/en/latest/intro/overview.html"&gt;Scrapy&lt;/a&gt;, т.к.
всё равно пришёл к нему. Ибо расширяется он легко, куча всяких опций и
рычагов управления, и свистелок из коробки.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 19 Nov 2013 02:57:23 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-19:posts/2013/11/19/urn:ya.ru:post/22199227/1887/</guid><category>python</category><category>краулер</category><category>программирование</category><category>сайт</category><category>scrapy</category></item><item><title>Посылка</title><link>http://imdagger.github.io/posts/2013/11/12/post-pi2/</link><description>&lt;p&gt;Наконец-то я вижу посылку в терминале PI 2. Почти целый месяц
пролежала в Бельгии на международном сортировочном центре.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 12 Nov 2013 00:38:41 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-12:posts/2013/11/12/post-pi2/</guid><category>радость</category><category>посылка</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/11/11/urn:ya.ru:post/22199227/1885/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Случайно увидел по телеку передачу «Куб», получил глубокое
повреждение мозга. Это что за треш, угар и содомия? Ну, просто, рука
лицо и ещё раз, рука лицо.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 11 Nov 2013 00:01:29 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-11:posts/2013/11/11/urn:ya.ru:post/22199227/1885/</guid><category>ужас</category><category>жизнь</category><category>бредни</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/11/07/urn:ya.ru:post/22199227/1883/</link><description>&lt;p&gt;Если Python 2.6 (хотя он уже двумя ногами покоится с миром, ибо 2.7
одной ногой там уже тоже, но всё же) выдаёт нечто вот такое &lt;code class="code"&gt;
KeyError:
' \x00'&lt;/code&gt;
 при &lt;code class="code"&gt;
pickle.loads&lt;/code&gt;
. То видимо в loads попала unicode строка,
например, если строка взята из результата запроса библиотеки requests.
Стоит тогда сконвертировать в str эту строку и всё будет хорошо, либо
сервису, который отдаёт данные стоит завернуть всё это дело в base64.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 07 Nov 2013 03:35:00 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-07:posts/2013/11/07/urn:ya.ru:post/22199227/1883/</guid><category>2.6</category><category>python</category><category>десереализация</category><category>pickle</category><category>ошибка</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/11/06/urn:ya.ru:post/22199227/1881/</link><description>&lt;p&gt;Забавно наблюдать, как моя посылка идёт из Китая через Бельгию Лишь бы
не потеряли.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 06 Nov 2013 03:41:11 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-06:posts/2013/11/06/urn:ya.ru:post/22199227/1881/</guid><category>почта</category><category>жизнь</category><category>посылка</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/11/01/urn:ya.ru:post/22199227/1880/</link><description>&lt;p&gt;Dwarf Fortress это сила!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 01 Nov 2013 13:17:54 +0300</pubDate><guid>tag:imdagger.github.io,2013-11-01:posts/2013/11/01/urn:ya.ru:post/22199227/1880/</guid></item><item><title>Сборка информации о КОП</title><link>http://imdagger.github.io/posts/2013/10/21/sborka-informatsii-o-kop/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; В частности в сфере гейм девелопмента.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 21 Oct 2013 00:22:44 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-21:posts/2013/10/21/sborka-informatsii-o-kop/</guid><category>компонента</category><category>ориентированный</category><category>программирование</category><category>метод</category><category>разработка</category></item><item><title>Авторизация для нескольких сайтов на Django</title><link>http://imdagger.github.io/posts/2013/10/20/avtorizatsiia-dlia-neskolkikh-saitov-na-django/</link><description>&lt;p&gt;Обдумав разные варианты общей авторизации для разрабатываемых и
поддерживаемых мной сервисов, я решил, что оптимальнее всего будет
использовать OAuth2 для этих целей. Ибо вариант с синхронизацией
пользователей для двух сервисом может и подходит, но когда их количество
увеличивается и будет увеличиваться, при чём разного формата, то
синхронизация начнёт приносить всё больше боли. И в течение нескольких
дней я воплотил общую авторизацию на основе OAuth2 в жизнь для двух
сервисов (благо для django есть и provider модуль и social auth модули).
При чём, старый способ авторизации для основного сервиса пока продолжает
работать, а новый в режиме испытания. Пришлось только немного пошаманить
над&amp;nbsp;&lt;a class="reference external" href="http://django-oauth2-provider.readthedocs.org/"&gt;django-oauth2-provider&lt;/a&gt;
и подсмотреть как сделать клиента на основе
&lt;a class="reference external" href="http://django-social-auth.readthedocs.org/"&gt;django-social-auth&lt;/a&gt;. Для
провайдера особых телодвижений не нужно, почти всё из коробки (только в
моём случае есть свои особенности связанные с поддоменами):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;req.txt:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;django&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;oauth2&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;provider&lt;/span&gt;
&lt;span class="pgcss-n"&gt;django&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;social&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;auth&lt;/span&gt; &lt;span class="pgcss-c"&gt;# если требуется связывать свою авторизацию со сторонней&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;settings.py:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;provider&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;provider.oauth2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;social_auth&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# а это для того, чтобы провайдер умел&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# подключать к своей авторизации другие сети (ВК, Я.ру&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# и Facebook и т.д.), всё из коробки и даже больше&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;mainauth/urls.py:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_85074384"data-toggle="collapse"&gt;исходник сниппета urls.py&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85074384"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;patterns&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;include&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;url&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.conf&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;settings&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-n"&gt;urlpatterns&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;patterns&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^accounts/profile/$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;mainauth.views.index&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;show_profile&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;django.contrib.auth.views.login&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;template_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;auth_service/login.html&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^logout/$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;django.contrib.auth.views.logout&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;next_page&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;logout&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;

    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^api/me$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;mainauth.views.describe_me&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;api_me&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^oauth2/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;include&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;provider.oauth2.urls&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;namespace&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;oauth2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)),&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;mainauth/views.py:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_72002448"data-toggle="collapse"&gt;исходник сниппета views.py&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_72002448"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;annoying.decorators&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;render_to&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;ajax_request&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.views.decorators.csrf&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;csrf_exempt&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;provider.oauth2&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;models&lt;/span&gt; &lt;span class="pgcss-k"&gt;as&lt;/span&gt; &lt;span class="pgcss-n"&gt;oauth_models&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-nd"&gt;@ajax_request&lt;/span&gt;
&lt;span class="pgcss-nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;describe_me&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;request&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;token_str&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;request&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;GET&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;oauth_token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;try&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;token&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;oauth_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;AccessToken&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;objects&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get_token&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;token_str&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;except&lt;/span&gt; &lt;span class="pgcss-n"&gt;oauth_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;AccessToken&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;DoesNotExist&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;rc&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;Wrong access token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;user&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;token&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;user&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;rc&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# естественно mydomain.com это просто пример&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# как и генерация уникального хеша для user.profile&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;urn:mydomain.com:{0}&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;profile&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;hashcode&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;username&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;first_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;last_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;email&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;staff&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;is_staff&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;super&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;is_superuser&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;}&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;В админке провайдера нужно будет создать экземпляр модели Client из
раздела OAuth2. Для каждого сайта свой, коллбэк (или URI
перенаправления) будет формата
&lt;a class="reference external" href="http://"&gt;http://&lt;/a&gt;&lt;em&gt;наш-домен&lt;/em&gt;/auth/complete/&lt;em&gt;mymegaconn&lt;/em&gt;/. Где &lt;em&gt;наш-домен&lt;/em&gt; и
&lt;em&gt;mymegaconn&lt;/em&gt; (про него будет понятно далее по тексту) нужно заменить на
своё.&lt;/p&gt;
&lt;p&gt;А для всех сервисов, которые будут использовать авторизацию
корневого сервиса, нужно также сделать классы для обработки OAuth2
новоиспечённого провайдера и получение данных через его API. В
настройках settings.py (или в компоненте настройки, если вдруг
используется
&lt;a class="reference external" href="https://github.com/2general/django-split-settings/"&gt;django-split-settings&lt;/a&gt;,
как делаю я) нужно указать параметры клиента (которые были сгенерированы
ранее в админке):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;social_auth&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# и не забыть добавить django-social-auth в зависимости&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;AUTHENTICATION_BACKENDS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;приложение.MyMegaConnAuthBackend&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# наш специальный класс для авторизации по OAuth2&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# конечно же MYMEGACONN нужно заменить на своё осмысленное&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;наш-домен&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_APP_ID&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;5bcdda....&amp;#39;&lt;/span&gt;                  &lt;span class="pgcss-c"&gt;# fill this in the local settings&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_API_SECRET&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;a3fef...&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_USERNAME_IS_FULL_EMAIL&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Чтобы URL-ы работали как требуется, не забываем добавить по views.py
приложения строку с включением из social_auth:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^auth/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;include&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;social_auth.urls&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)),&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ну и конечно же сам класс MyMegaConnAuthBackend и его помощники (по
образу и подобию social_auth.backends.contrib.yandex.YaruAuth):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;requests&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.conf&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;settings&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;social_auth&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;utils&lt;/span&gt; &lt;span class="pgcss-k"&gt;as&lt;/span&gt; &lt;span class="pgcss-n"&gt;auth_utils&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;social_auth&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;backends&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;MyMegaConnAuthBackend&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;backends&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;OAuthBackend&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;name&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;mymegaconn&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;EXTRA_DATA&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;expires&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;auth_utils&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;setting&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;SOCIAL_AUTH_EXPIRATION&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;expires&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;]&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;get_user_details&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;is_superuser&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;super&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;is_staff&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;staff&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;}&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;MyMegaConnAuth&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;backends&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;BaseOAuth2&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;AUTHORIZATION_URL&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;http://{0}/oauth2/authorize&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;ACCESS_TOKEN_URL&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;http://{0}/oauth2/access_token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;AUTH_BACKEND&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;MyMegaConnAuthBackend&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;SETTINGS_KEY_NAME&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;MYMEGACONN_APP_ID&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;SETTINGS_SECRET_NAME&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;MYMEGACONN_API_SECRET&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# довольно важный параметр&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;REDIRECT_STATE&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;False&lt;/span&gt; &lt;span class="pgcss-c"&gt;# т.к. наш oauth2 провайдер не ожидает дополнительных параметров&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@property&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;get_api_url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;http://{0}/api/me&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;user_data&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;access_token&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt;&lt;span class="pgcss-n"&gt;args&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;answer&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;post&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get_api_url&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;params&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;oauth_token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;access_token&lt;/span&gt;&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;json&lt;/span&gt;&lt;span class="pgcss-p"&gt;()[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;

&lt;span class="pgcss-n"&gt;BACKENDS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;mymegaconn&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;MyMegaConnAuth&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Чтобы использовать всё это счастье в шаблонах достаточно
воспользоваться стандарным набором, который предоставляет
django-social-auth. Т.к. только что был показан бэкенд для него и он
будет импортирован и зарегистрирован в social_auth под именем
&lt;em&gt;mymegacon&lt;/em&gt;. Ведь он был добавлен в settings.py в
AUTHENTICATION_BACKENDS. Библиотека рекомендует использовать вот такую
конструкцию для получения ссылки, по которой начнётся подключение,
используя OAuth2, с указанным в бэкенде сервером, по заданному адресу:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;некий.html:&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;нужный-тег его-аттрибут=&amp;quot;&lt;strong&gt;{% url 'socialauth_begin' 'mymegaconn' %}&lt;/strong&gt;&amp;quot; …&amp;gt;…&amp;lt;/нужный-тег&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Всё это довольно легко и работает на ура. На каждом сайте есть свой
User, который привязан к UserSocialAuth. Нужно только не забыть все
шаблоны, которые не устраивают и коробки (их вид, текст), переопределить
на свои. Информация с центрального сервера авторизации обновляется на
клиентах. Можно регулировать время выдачи тикетов, прав доступа, на
каждом сайте у пользователя доступны свои специфические профили.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 20 Oct 2013 01:02:48 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-20:posts/2013/10/20/avtorizatsiia-dlia-neskolkikh-saitov-na-django/</guid><category>сервис</category><category>Django</category><category>сайт</category><category>авторизация</category><category>python</category><category>разделение</category><category>django-oauth2-provider</category><category>django-social-auth</category><category>OAuth2</category><category>пользователь</category></item><item><title>Полёт тела вдоль двух окружностей и отрезка</title><link>http://imdagger.github.io/posts/2013/10/12/poliot-tela-vdol-dvukh-okruzhnostei-i-otrezka/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/607144"&gt;&lt;img alt="[0;0],110,[7;7],-30.png" src="http://img-fotki.yandex.ru/get/9516/22199227.b/0_943a8_5fee51e1_L" title="[0;0],110,[7;7],-30.png"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/607145"&gt;&lt;img alt="[0;0],240,[3;-5],260.png" src="http://img-fotki.yandex.ru/get/9349/22199227.b/0_943a9_6db0a451_L" title="[0;0],240,[3;-5],260.png"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/607146"&gt;&lt;img alt="[0;0],240,[9;-5],260.png" src="http://img-fotki.yandex.ru/get/6703/22199227.b/0_943aa_9d7878a1_L" title="[0;0],240,[9;-5],260.png"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Подправил ошибку в инвертировании диапазона в ranges.rkt. Теперь
вроде полёт стал вычисляться без проблем, по крайней мере для всех
комбинаций от 0° до 360° алгоритм находит хотя бы один путь (я проверил
это экспериментально). Использовать стандартный plot-file с parametric
рендером очень приятно :).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 12 Oct 2013 02:27:54 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-12:posts/2013/10/12/poliot-tela-vdol-dvukh-okruzhnostei-i-otrezka/</guid><category>программирование</category><category>окружность</category><category>вычисление</category><category>отрезок</category><category>путь</category><category>racket</category><category>полёт</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/10/11/urn:ya.ru:post/22199227/1875/</link><description>&lt;p&gt;один глаз на код один на хабр&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 11 Oct 2013 02:28:34 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-11:posts/2013/10/11/urn:ya.ru:post/22199227/1875/</guid></item><item><title></title><link>http://imdagger.github.io/posts/2013/10/11/urn:ya.ru:post/22199227/1874/</link><description>&lt;p&gt;Если есть по наследству Django 1.4 (как у меня), то лучше не забыть
и перепроверить, а указан ли параметр STORAGE_ENGINE для MySQL. Иначе
вдруг окажется, что работаем с MySQL версии 5.1 под CentOS (как в моём
случае) и там по умолчанию движок MyISAM, который не поддерживает
транзакции. Что может оказаться сюрпризом, когда &lt;code class="code"&gt;
with
transaction.commit _on _success()&lt;/code&gt;
 не срабатывает ожидаемым образом.
Поэтому пришлось прописать &lt;code class="code"&gt;
'STORAGE _ENGINE': 'INNODB'&lt;/code&gt;
 и сконвертировать
старые таблицы используя &lt;code class="code"&gt;
ALTER TABLE  `таблица ` ENGINE = InnoDB;&lt;/code&gt;
 Можно
было и настройки MySQL поменять, но лучше конечно же перестраховаться, и
в коде тоже выставить требование по движку базы.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 11 Oct 2013 02:27:09 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-11:posts/2013/10/11/urn:ya.ru:post/22199227/1874/</guid><category>проблема</category><category>Django</category><category>транзакция</category><category>1.4</category><category>MyISAM</category><category>python</category><category>MySQL</category><category>InnoDB</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/10/03/urn:ya.ru:post/22199227/1873/</link><description>&lt;p&gt;Наткнулся на криво настроенный сайт, но я думаю он не единственный
такой и с него мне тоже нужно тащить страницы. Он возвращает заголовок
Content-Encoding равный gzip, а сами данные не ужимает, а оставляет как
есть. Естественно библиотеке requests от этого сносит башню с ошибкой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  File &lt;span class="pgcss-nb"&gt;&amp;quot;.../requests/packages/urllib3/response.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;225&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;stream&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;data&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;read&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;amt&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;amt&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;decode_content&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;decode_content&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  File &lt;span class="pgcss-nb"&gt;&amp;quot;.../requests/packages/urllib3/response.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;193&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;read&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;e&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;requests.packages.urllib3.exceptions.DecodeError&lt;/span&gt;: &lt;span class="pgcss-n"&gt;(&amp;#39;Received response with&lt;/span&gt;
&lt;span class="pgcss-x"&gt;            content-encoding: , but failed to decode it.&amp;#39;, error(&amp;#39;Error -3&lt;/span&gt;
&lt;span class="pgcss-x"&gt;            while decompressing: incorrect header check&amp;#39;,))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но, т.к. я делаю обычный GET запрос и оставляю заговоловки на
усмотрение &lt;em&gt;requests&lt;/em&gt;, то он не требует от сайта принудительного
text/html. Поэтому я добавил принудительный Accept-Encoding, что дало
положительный результат. Забываю всё время про него, т.к. без параметра
headers короче писать запрос.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;page&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;resource&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;stream&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;True&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;User-Agent&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;Some bot&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;Accept-Encoding&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;Accept&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;text/*&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;С указанием identity стало полегче, но на всякий случай есть ещё
&lt;code class="code"&gt;
page.raw.stream(decode _content=False)&lt;/code&gt;
, для тех, кому вообще
декодирование противопоказанно и точно нужны сырые данные. Только в
таком случае &lt;code class="code"&gt;
stream=True&lt;/code&gt;
 для запроса обязателен.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 03 Oct 2013 04:34:59 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-03:posts/2013/10/03/urn:ya.ru:post/22199227/1873/</guid><category>encoding</category><category>сайт</category><category>gzip</category><category>identity</category><category>requests</category><category>HTTP</category><category>python</category><category>особенность</category></item><item><title>Бананы</title><link>http://imdagger.github.io/posts/2013/10/03/banany/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/605263"&gt;&lt;img alt="ALIM3247.JPG" src="http://img-fotki.yandex.ru/get/9499/22199227.b/0_93c4f_2b5827ec_L" title="ALIM3247.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Если это мама негра, то кто же папа? :/&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 03 Oct 2013 00:38:56 +0300</pubDate><guid>tag:imdagger.github.io,2013-10-03:posts/2013/10/03/banany/</guid><category>бананы</category><category>еда</category></item><item><title>Электроника</title><link>http://imdagger.github.io/posts/2013/09/28/elektronika/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Отличный продавец электроники и радиодеталей! Мне нравится покупать
у него детали, т.к. не сильно далеко и плюс он всегда всё распишет,
посчитает и каждый заказ упакует в пакетик, и каждый набор снова в свой
мелкий пакетик. И добавляет бонус к покупке в виде дополнительных
деталей.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 28 Sep 2013 13:54:01 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-28:posts/2013/09/28/elektronika/</guid><category>электроника</category><category>детали</category><category>продавец</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/09/27/urn:ya.ru:post/22199227/1870/</link><description>&lt;p&gt;При использовании чистого Gunicorn для работы с формой из тела
запроса не стоит забывать указывать отдельно параметр файлового
указателя данных &lt;code class="code"&gt;
env['wsgi.input']&lt;/code&gt;
, даже не смотря на то, что
переменные среды передаются в этот же класс. Т.к. по умолчанию параметр
fp равен sys.stdin, т.е. чтение из стандартного потока ввода (в моём
случае терминала).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;cgi&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;application&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;start_response&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;status&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;200 OK&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;cgi&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;FieldStorage&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fp&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;wsgi.input&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;output&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 27 Sep 2013 16:22:01 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-27:posts/2013/09/27/urn:ya.ru:post/22199227/1870/</guid><category>параметры</category><category>python</category><category>gunicorn</category><category>форма</category><category>CGI</category></item><item><title>Ошибка обработки фильтрации отправителя сигнала в Celery</title><link>http://imdagger.github.io/posts/2013/09/25/oshibka-obrabotki-filtratsii-otpravitelia-signala-v-celery/</link><description>&lt;p&gt;Похоже на то, что в обработчике сигналов в Celery есть проблемное
место. Код для сигналов &lt;code class="code"&gt;
celery.utils.dispatch.signals&lt;/code&gt;
 взят из Django,
но в Django в роли sender выступает обычно класс, при чём этот класс в
единственном экземпляре. Т.к. веб сервер довольно таки самодостаточный
процесс. А вот в Celery явно выделяется обработчик запроса и
отправитель. При чём это могут быть два разных процесса, которые
естественно не разделяют интерпретатор, память и могут быть на разных
узлах.&lt;/p&gt;
&lt;p&gt;Так вот обработчик для сигналов &lt;code class="code"&gt;
task _sent&lt;/code&gt;
 вызывается на стороне
отправителя, а некоторые другие сигналы на принимающей стороне. Видимо
это стало причиной, что &lt;em&gt;sender&lt;/em&gt; в Celery содержит строку — название
отправителя. Только вот две одинаковые строки не обязаны иметь
одинаковый &lt;strong&gt;id&lt;/strong&gt;, особенно если они из разных модулей или получены
разными путями, ведь это два разных объекта. Но в документации к Celery
есть смутное
&lt;a class="reference external" href="http://docs.celeryproject.org/en/latest/userguide/signals.html#basics"&gt;упоминание&lt;/a&gt;,
что можно включить фильтр по sender при регистрации обработчика сигнала,
что в принципе не работает:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some signals also have a sender which you can filter by. For example
the
&lt;a class="reference external" href="http://docs.celeryproject.org/en/latest/userguide/signals.html#std:signal-task_sent"&gt;task_sent&lt;/a&gt;
signal uses the task name as a sender, so you can connect your
handler to be called only when tasks with name “tasks.add” has been
sent by providing the sender argument to
&lt;a class="reference external" href="http://docs.celeryproject.org/en/latest/internals/reference/celery.utils.dispatch.signal.html#celery.utils.dispatch.signal.Signal.connect"&gt;connect&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nd"&gt;@task_sent.connect&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sender&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;tasks.add&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;task_sent_handler&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sender&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;task_id&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;task&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;args&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwds&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Got signal task_sent for task id &lt;/span&gt;&lt;span class="pgcss-si"&gt;%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;task_id&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;А не работает потому, что код диспетчера преобразует отправителя в
идентификатор, который затем и сравнивает:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;_make_id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;  &lt;span class="pgcss-c"&gt;# pragma: no cover&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;im_func&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;im_self&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-nb"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;im_func&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Эта функция используется для трансляции вида: отправитель →
уникальное число; только вот так нельзя делать из-за того, что для строк
это не очень работает. Для классов да, неплохо работает. Но Celery всё
же отправляет строку. Поэтому до решения проблемы лучше писать
обработчик вида:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nd"&gt;@task_success.connect&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-err"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;sender&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Или похакать модуль и добавить туда hash вместо id, но это только
если тип хешируемый.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 25 Sep 2013 23:38:34 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-25:posts/2013/09/25/oshibka-obrabotki-filtratsii-otpravitelia-signala-v-celery/</guid><category>Celery</category><category>ошибка</category><category>обработчик</category><category>отправка</category><category>python</category><category>сигнал</category></item><item><title>Хэнд мэйд пицца</title><link>http://imdagger.github.io/posts/2013/09/14/khend-meid-pitstsa/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/600801"&gt;&lt;img alt="Хэнд мэйд пицца" src="http://img-fotki.yandex.ru/get/9355/22199227.b/0_92ae1_324c5273_L" title="Хэнд мэйд пицца"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Точнее уже половина, вторую я съел. Моцарелла, оливки, чуть зелени и
кусочек огурца для меня, колбасы немножко. Тонкая, правда начинки
положил как для себя любимого :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 14 Sep 2013 02:22:49 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-14:posts/2013/09/14/khend-meid-pitstsa/</guid><category>готовлю</category><category>жизнь</category><category>еда</category><category>пицца</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/09/05/urn:ya.ru:post/22199227/1863/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Возможно ли совершить правильное разрезание арбуза такое, что все
косточки каждого куска окажутся на переферии одной стороны, позволяя их
удалить одним движением руки?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 05 Sep 2013 01:52:32 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-05:posts/2013/09/05/urn:ya.ru:post/22199227/1863/</guid><category>Я</category><category>жизнь</category><category>еда</category><category>мысль</category></item><item><title>Творожные завитушки</title><link>http://imdagger.github.io/posts/2013/09/04/tvorozhnye-zavitushki/</link><description>&lt;blockquote&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/sarachai/view/714095/"&gt;&lt;img alt="Завитушки" src="http://img-fotki.yandex.ru/get/9356/99673415.39/0_ae56f_69ae5840_L" title="Завитушки"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Понадобится:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;400 гр творога&lt;/li&gt;
&lt;li&gt;4 ст.л. сахара&lt;/li&gt;
&lt;li&gt;1 стакан муки (можно чуть больше )&lt;/li&gt;
&lt;li&gt;3/4 ч.л. соды&lt;/li&gt;
&lt;li&gt;4 желтка&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Творог растереть с желтками добавить соду (творог сам погасит её ) и оставить
на 5 минут. Добавить муку и сахар, замесить тесто. Убрать его в холодильник 1.5 часа.
Раскатать, свернуть в рулет, нарезать кружочками толщиной в 1 см. Выпекать при температуре
200 градусов 15-20 минут.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Выглядит аппетитно&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 04 Sep 2013 01:07:59 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-04:posts/2013/09/04/tvorozhnye-zavitushki/</guid><category>еда</category></item><item><title>Хочу..хочу..очень хочу себе такой горизонтальный ключ!</title><link>http://imdagger.github.io/posts/2013/09/03/khochukhochuochen-khochu-sebe-takoi-gorizontalnyi-kliuch/</link><description>&lt;div class="youtube" align="left"&gt;&lt;iframe width="450" height="370" src="https://www.youtube.com/embed/WClo1G962po" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Ностальгия, сильная ностальгия. У меня был простой советский ключ,
накатывает слеза, а этот ключ такой мимимими…!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 03 Sep 2013 01:38:07 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-03:posts/2013/09/03/khochukhochuochen-khochu-sebe-takoi-gorizontalnyi-kliuch/</guid><category>ключ</category><category>радиоспорт</category><category>морзе</category><category>передача</category><category>скоростная</category><category>телеграфия</category></item><item><title>Пауки возвращаются</title><link>http://imdagger.github.io/posts/2013/09/02/pauki-vozvrashchaiutsia/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/597606"&gt;&lt;img alt="Пауки возвращаются" src="http://img-fotki.yandex.ru/get/6715/22199227.b/0_91e66_f605a3c5_L" title="Пауки возвращаются"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/597607"&gt;&lt;img alt="Пауки возвращаются" src="http://img-fotki.yandex.ru/get/6718/22199227.b/0_91e67_d49d7d64_L" title="Пауки возвращаются"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;    В добавок к паукам-осам вернулись в деревне на наш участок старые
соседи пауки-крестовики.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 02 Sep 2013 17:02:56 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-02:posts/2013/09/02/pauki-vozvrashchaiutsia/</guid><category>арахниды</category><category>природа</category><category>крестовик</category><category>паук</category><category>деревня</category></item><item><title>Обслуживание</title><link>http://imdagger.github.io/posts/2013/09/02/obsluzhivanie/</link><description>&lt;p&gt;Ого… в центральном отделении (филиал №300, что на Фрунзе)
Беларусбанка оказывается… Автоматизированная очередь. А я колхозник чуть
в кабинку не зашёл по привычке :D Хорошо, что заподозрил неладное, ведь
другие люди сидят, а кабинки пустые. Через пару минут я услышал
роботизированный голос, который назвал номер билета и номер кабины, куда
отправился человек. После этого мне быстренько пришлось поискать, где же
они берут эти билеты. Клёво то, что их тоже выдаёт автомат. Вот бы везде
в городе так очереди обрабатывались.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 02 Sep 2013 15:28:20 +0300</pubDate><guid>tag:imdagger.github.io,2013-09-02:posts/2013/09/02/obsluzhivanie/</guid><category>жизнь</category><category>банк</category><category>радость</category><category>любопытно</category><category>обслуживание</category><category>автоматизация</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/29/urn:ya.ru:post/22199227/1856/</link><description>&lt;p&gt;Опять лето быстро улетело&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 29 Aug 2013 02:52:16 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-29:posts/2013/08/29/urn:ya.ru:post/22199227/1856/</guid></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/28/urn:ya.ru:post/22199227/1855/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Поставил Yandex-Disk консольную версию, просто и удобно
использовать. Можно будет билды синхронизировать в него и часть
некритических, но важных для меня документов. У меня и Dropbox есть, им
тоже пользуюсь, Яндекс.Диск пока пробую.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 28 Aug 2013 02:06:37 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-28:posts/2013/08/28/urn:ya.ru:post/22199227/1855/</guid><category>Яндекс</category><category>облако</category><category>linux</category><category>хранилище</category><category>клиент</category><category>диск</category><category>консоль</category></item><item><title>Покрытие БелТелеКом ??</title><link>http://imdagger.github.io/posts/2013/08/22/pokrytie-beltelekom/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Я думал, что у БелТелеКома покрытие только в областных городах
слабое. Но вот я в Минске, и истоптав ноги я не нашёл ничего
подходящего, чтобы можно было посидеть и использовать их соединение.
Приходится сидеть в подземке, где ловит их WiFi&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 22 Aug 2013 15:50:51 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-22:posts/2013/08/22/pokrytie-beltelekom/</guid><category>белтелеком</category><category>wifi</category><category>покрытие</category><category>плохо</category><category>грусть</category></item><item><title>Обновление Emacs до 24.3.50.2 и пакет melpa.el</title><link>http://imdagger.github.io/posts/2013/08/16/obnovlenie-emacs-do-243502-i-paket-melpael/</link><description>&lt;p&gt;Т.к. я пользуюсь development версией Emacs, то в ней появляются
самые свежие новинки постоянно, и они иногда ломают внутренний API так,
что плагины ещё к нему не готовы, ибо плагины ориентируются на
стабильную версию. Пакет melpa довольно давно не обновлялся и прекрасно
работал до версии Emacs 24.3.50.2, а вот уже в ней функцию
&lt;code class="code"&gt;
package-desc-vers&lt;/code&gt;
 разбили на &lt;code class="code"&gt;
package-desc-version&lt;/code&gt;
 и
&lt;code class="code"&gt;
package--ac-desc-version&lt;/code&gt;
 (до этого были только предупреждения от
редактора). И это вызвало ошибку при загрузке melpa, что повлекло ошибки
при попытке обновить пакеты. Поэтому пришлось немного подправить руками
код melpa, как
например&amp;nbsp;&lt;a class="reference external" href="https://github.com/LiaoPengyu/emacs.d/commit/fc7a6fedb5c496c613d6d19a4fcdab18b36a8d87"&gt;сделал&lt;/a&gt;
другой человек для своей функции:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;funcall&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;fboundp&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;package-desc-version&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-ss"&gt;&amp;#39;package--ac-desc-version&lt;/span&gt;
           &lt;span class="pgcss-ss"&gt;&amp;#39;package-desc-vers&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
         &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;cdr&lt;/span&gt; &lt;span class="pgcss-nc"&gt;package&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Если &lt;code class="code"&gt;
package-desc-version&lt;/code&gt;
 объявлена, то используем
&lt;code class="code"&gt;
package--ac-desc-version&lt;/code&gt;
 (т.к. это unstable версия Emacs), а если нет, то
по старинке.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 16 Aug 2013 02:27:16 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-16:posts/2013/08/16/obnovlenie-emacs-do-243502-i-paket-melpael/</guid><category>ошибка</category><category>emacs</category><category>melpa</category><category>новый</category><category>версия</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/15/urn:ya.ru:post/22199227/1849/</link><description>&lt;p&gt;Хм.. базовый комплект Avira подорожал на 4 евро, хотя ещё в мае был
15.95, а сейчас продают уже его по 19.95.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 15 Aug 2013 02:15:33 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-15:posts/2013/08/15/urn:ya.ru:post/22199227/1849/</guid><category>avira</category><category>лицензия</category><category>подорожание</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/12/urn:ya.ru:post/22199227/1848/</link><description>&lt;p&gt;Закончился ICFP Programming Contest 2013. В этот раз я даже смог
чего-то нарешать :) Только жалко, что ступил и не запустил мой решатель для
больших параметров, я боялся, что он по времени задачи крупные не
поднимет, а он всё же некоторые поднимал. Но я это поздно заметил. В
общем в этот раз я первый раз выступил так, что сам доволен :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 12 Aug 2013 03:04:53 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-12:posts/2013/08/12/urn:ya.ru:post/22199227/1848/</guid><category>соревнование</category><category>радость</category><category>программирование</category><category>icfpc</category></item><item><title>Закончился лайт раунд</title><link>http://imdagger.github.io/posts/2013/08/10/zakonchilsia-lait-raund/</link><description>&lt;p&gt;В принципе мысли у меня появились только спустя часов 16 от начала
контеста, поэтому я код быстренько набросал в Racket, и когда
почувствовал, что не влажу в лайт раунд, а прога у меня частично
работает, но требует ручного вмешательства, то я быстренько с ней
скооперировался и наклепал сколько смог очков для себя. Хотя бы буду не
последним в лайт раунде (надеюсь) :), а то вон есть ребята даже
спрашивают, и им не понятен tfold из условия, а там вроде всё достаточно
чётко сказано. С первого раза обратил на него внимание. Плохо только,
что у меня нет опыта работы с HTTP из Racket, но благо дока есть
встроенная.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 10 Aug 2013 03:12:31 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-10:posts/2013/08/10/zakonchilsia-lait-raund/</guid><category>программирование</category><category>соревнование</category><category>радость</category><category>racket</category><category>icfpc</category><category>Я</category><category>устал</category></item><item><title>Начало ICFPC 2013</title><link>http://imdagger.github.io/posts/2013/08/06/nachalo-icfpc-2013/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Осталось всего чуть-чуть до начала ICFP Programming Contest 2013. И
до конца регистрации тоже, но я уже давно зарегистрировался (надеюсь,
что я ничего не напутал при регистрации).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 06 Aug 2013 17:26:15 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-06:posts/2013/08/06/nachalo-icfpc-2013/</guid><category>программирование</category><category>соревнование</category><category>2013</category><category>фунциональный</category><category>icfpc</category><category>конкурс</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/05/urn:ya.ru:post/22199227/1845/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; С этими переименованиями в советское время так намудрили, что под
Гомелем, где ни плюнь, что-нибудь Красное. И приходится запоминать, что
Красный Богатырь это рядом с Красным, но совсем далеко от Красного
Маяка, хотя не очень далеко от Красного Октября. А ещё я вечно забываю,
Большевик он Красный или нет?! Нет, выходит большевик у нас простой. А
вот Красных Маяков аж целых два. Так и запутаться недолго.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 05 Aug 2013 01:22:42 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-05:posts/2013/08/05/urn:ya.ru:post/22199227/1845/</guid><category>город</category><category>район</category><category>название</category><category>переименование</category><category>Гомель</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/02/urn:ya.ru:post/22199227/1844/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Люблю небольшие отделения банков, где небольшой поток людей. Там и
персонал добрый и всё по-домашнему. Пошёл получать в этот раз свой
Virtuon в отделении на пр. Октября, в этот раз мне и позвонили заранее,
сказали про карточку и разъяснили, когда у них обед и выходные.
Обслужили быстро и без проблем. А вот, когда я в центральном на
Советской забирал, то позвонили только, когда уже прошёл месяц, так ещё
и оказалось, что платить нужно в одном месте, а получать в другом, а это
было два разных этажа.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; Буду теперь всё время забирать на пр. Октября, тут ближе (можно
пешком дойти от дома) и приятнее.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 02 Aug 2013 16:16:22 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-02:posts/2013/08/02/urn:ya.ru:post/22199227/1844/</guid><category>жизнь</category><category>банк</category><category>получение</category><category>карта</category><category>virtuon</category><category>visa</category></item><item><title>Падение Redis 2.4.10</title><link>http://imdagger.github.io/posts/2013/08/02/padenie-redis-2410/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Redis 2.4.10 почему-то стал просто умирать через некоторое время под
нагрузкой из Sentry. Я нашёл, что это возможно проблема при обработке
ключей и решил сильно много времени не тратить, а обновить уже до 2.6.13
его. Но т.к. на сервере стоит CentOS 5, то пришлось добавить репозиторий
Remi, чтобы установить версию посвежее. Пока полёт нормальный, посмотрим
дальше, т.к. раньше всё случалось где-то в момент когда база становилась
размером в 800-900 мегабайт.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 02 Aug 2013 16:07:57 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-02:posts/2013/08/02/padenie-redis-2410/</guid><category>redis</category><category>ошибка</category><category>sentry</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/08/01/urn:ya.ru:post/22199227/1842/</link><description>&lt;p&gt;Срок действия карты от БПС Сбербанка уже истёк, а он мне всё
продолжает присылать клиентские отчёты по почте… указывая, что у меня не
было никаких операций по карте, забавно :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 01 Aug 2013 03:01:00 +0300</pubDate><guid>tag:imdagger.github.io,2013-08-01:posts/2013/08/01/urn:ya.ru:post/22199227/1842/</guid><category>почта</category><category>карта</category><category>банк</category><category>отчёт</category></item><item><title>ASUS Eeepc 1215N в разобранном состоянии</title><link>http://imdagger.github.io/posts/2013/07/27/asus-eeepc-1215n-v-razobrannom-sostoianii/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/590543"&gt;&lt;img alt="ALIM3225.JPG" src="http://img-fotki.yandex.ru/get/9480/22199227.b/0_902cf_1c35827c_L" title="ALIM3225.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/590544"&gt;&lt;img alt="ALIM3226.JPG" src="http://img-fotki.yandex.ru/get/9554/22199227.b/0_902d0_6d691371_L" title="ALIM3226.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/590545"&gt;&lt;img alt="Заголовок" src="http://img-fotki.yandex.ru/get/6715/22199227.b/0_902d1_ff7cf429_L" title="Заголовок"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;    Не знаю как большой кусочек пыли смог попасть между экраном
(фильтром) и ЖК-матрицей, но чтобы его достать пришлось разобрать
множество деталей, чтобы снять дисплей, разобрать его камеру и отделить
поверхностный фильтр от собственно ЖК-дисплея. Только снимать
алюминиевую нужно оправу нужно осторожно, а не как я, что чуть не
разорвал алюминиевый корпус, соединяющий матрицу и фильтр. Да, вот “то
серое” и есть ЖК-матрица, а не “то, что чёрное”.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 27 Jul 2013 15:27:20 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-27:posts/2013/07/27/asus-eeepc-1215n-v-razobrannom-sostoianii/</guid><category>чистка</category><category>asus</category><category>разбор</category><category>eeepc</category></item><item><title>mate-maximus</title><link>http://imdagger.github.io/posts/2013/07/26/mate-maximus/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; О, оказывает mate-maximus всё же настраивается. Только делать нужно
это через dconf-editor. А то мне не всегда удобно, что все окна
автоматически разворачиваются по максимуму, я привык их сам по
необходимости увеличивать. При этом я не хотел бы лишаться возможности,
чтобы заголовок окна пропадал, т.к. у на нетбуке это очень полезная
возможность. Есть опция &lt;strong&gt;org.mate.maximus.no-maximize&lt;/strong&gt;, её нужно
включить. Тогда заголовок будет пропадать у окон только при
максимизации, там же есть ещё несколько полезных параметров.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 26 Jul 2013 01:17:50 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-26:posts/2013/07/26/mate-maximus/</guid><category>mate</category><category>удобство</category><category>окно</category><category>mate-maximus</category></item><item><title>Bootstrap кнопка ON/OFF</title><link>http://imdagger.github.io/posts/2013/07/24/bootstrap-knopka-onoff/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Настраиваемый слайдер с двумя состояниями, основан на Bootstrap,
удобный, расширяемый.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 25 Jul 2013 22:18:15 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-24:posts/2013/07/24/bootstrap-knopka-onoff/</guid><category>кнопка</category><category>слайдер</category><category>переключатель</category><category>bootstrap</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/07/19/urn:ya.ru:post/22199227/1835/</link><description>&lt;p&gt;Мёртвый Анархист&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 19 Jul 2013 23:23:36 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-19:posts/2013/07/19/urn:ya.ru:post/22199227/1835/</guid></item><item><title></title><link>http://imdagger.github.io/posts/2013/07/19/urn:ya.ru:post/22199227/1834/</link><description>&lt;p&gt;При попытке установить из Marmalade (в MELPA репозитории его не
было) репозитория пакет ido-yes-or-no столкнулся с проблемой, что он в
Emacs 24.3.50.2 отказался почему-то нормально установится. Высказав мне
своё фи, плагин лишь отписал про то, что ему нужен пакет ido-0, но Emacs
такой не знает и я такой не знаю, а знаю лишь только пакет ido без
версии (по-умолчанию).&lt;/p&gt;
&lt;p&gt;Пришлось
скачать&amp;nbsp;&lt;a class="reference external" href="http://marmalade-repo.org/packages/ido-yes-or-no-1.1.el"&gt;файл&lt;/a&gt;
вручную из
&lt;a class="reference external" href="http://marmalade-repo.org/packages/ido-yes-or-no"&gt;репозитория&lt;/a&gt;. И
там была прописана зависимость: &lt;code class="code"&gt;
((ido &amp;quot;0&amp;quot;))&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;Я решил, что ничего страшного не случится, если я уберу её, т.к. на
ido-yes-or-no у меня опирается часть конфига и зависит от него через
use-package (а сам ido-yes-or-no достаточно маленький и безобидный).
Затем я просто установил пакет из файла при помощи &lt;kbd class="kbd"&gt;
M-x
package-install-file&lt;/kbd&gt;
. Десять минут, полёт нормальный.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 19 Jul 2013 01:57:52 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-19:posts/2013/07/19/urn:ya.ru:post/22199227/1834/</guid><category>проблема</category><category>emacs</category><category>установка</category><category>ido</category><category>ido-yes-or-no</category><category>пакет</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/07/16/urn:ya.ru:post/22199227/1833/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Проверил почти 500 разнородных сайтов с Apache и PHP, нигде нет
доступа на запись в корень для веб сервера. Это хорошо…&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 16 Jul 2013 03:28:58 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-16:posts/2013/07/16/urn:ya.ru:post/22199227/1833/</guid><category>apache</category><category>запись</category><category>права</category><category>корень</category></item><item><title>Новый конфиг</title><link>http://imdagger.github.io/posts/2013/07/10/novyi-konfig/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Решил побороть лень и за 6,5 лет всё же переделать конфиг в Emacs.
Вроде всё работает как надо, но и от некоторых новых плюшек я не
отказался бы, да и 24-ая версия позволяет намного более гибко
производить загрузку дополнений. Я взял за основу один уже готовый
&lt;a class="reference external" href="https://github.com/IMDagger/dot-emacs"&gt;конфиг&lt;/a&gt;, который постепенно
переработаю под себя. Он неплохо обслуживает Python и Scheme, как раз
то, что мне нужно. Нужно будет там ещё сделать возможность деления
настроек по машинам, т.к. мне было бы удобно чтобы он сразу работал на
всех моих компьютерах.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 10 Jul 2013 03:23:29 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-10:posts/2013/07/10/novyi-konfig/</guid><category>emacs</category><category>конфигурация</category><category>настройки</category><category>улучшение</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/07/08/urn:ya.ru:post/22199227/1831/</link><description>&lt;p&gt;скоро отдых&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 08 Jul 2013 01:40:19 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-08:posts/2013/07/08/urn:ya.ru:post/22199227/1831/</guid></item><item><title>Прибывшая посылка</title><link>http://imdagger.github.io/posts/2013/07/08/pribyvshaia-posylka/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/588284"&gt;&lt;img alt="ALIM3213.JPG" src="http://img-fotki.yandex.ru/get/9168/22199227.b/0_8f9fc_e3a908d5_L" title="ALIM3213.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/588285"&gt;&lt;img alt="Прибывшая посылка" src="http://img-fotki.yandex.ru/get/6716/22199227.b/0_8f9fd_aeed3a85_L" title="Прибывшая посылка"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/588286"&gt;&lt;img alt="Прибывшая посылка" src="http://img-fotki.yandex.ru/get/9066/22199227.b/0_8f9fe_af777a0a_L" title="Прибывшая посылка"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;    Прибыл на прошлой неделе мой USB-фонарик. Работает хорошо, пока
провод держится жёстко, только правда в моём USB он немного проседает,
поэтому я подкладываю что-нибудь под фонарик, чтобы не брал порт на
излом. Во время доставки он выжил Не пострадал, китайцы постарались
запаковать, хотя видно по коробке, что он месяц морем и поездами шёл.
Хорошо, что БелПочта поддерживает трекинг.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 08 Jul 2013 01:39:01 +0300</pubDate><guid>tag:imdagger.github.io,2013-07-08:posts/2013/07/08/pribyvshaia-posylka/</guid><category>почта</category><category>USB</category><category>китай</category><category>посылка</category><category>фонарик</category><category>радость</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/06/30/urn:ya.ru:post/22199227/1829/</link><description>&lt;p&gt;неужели?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 30 Jun 2013 03:05:35 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-30:posts/2013/06/30/urn:ya.ru:post/22199227/1829/</guid></item><item><title>Переход из точки в точку</title><link>http://imdagger.github.io/posts/2013/06/30/perekhod-iz-tochki-v-tochku/</link><description>&lt;p&gt;Если задано две точки (p&lt;sub&gt;1x&lt;/sub&gt;; p&lt;sub&gt;1y&lt;/sub&gt;) с начальным
единичным вектором (t&lt;sub&gt;1x&lt;/sub&gt;; t&lt;sub&gt;1y&lt;/sub&gt;) и конечная точка
(p&lt;sub&gt;2x&lt;/sub&gt;; p&lt;sub&gt;2y&lt;/sub&gt;) с единичным вектором (t&lt;sub&gt;2x&lt;/sub&gt;;
t&lt;sub&gt;2y&lt;/sub&gt;), то возможен набор переходов при помощи двух окружностей и
отрезка из начальной точки в конечную. Отрезок расположен коллинеарно
конечному единичному вектору и заканчивается в точке (p&lt;sub&gt;2x&lt;/sub&gt;;
p&lt;sub&gt;2y&lt;/sub&gt;). Нужно вычислить его длину и ограничения для радиусов
окружностей R&lt;sub&gt;1&lt;/sub&gt; и R&lt;sub&gt;2&lt;/sub&gt; таких, что единичные вектора в
заданных точках касаются полученных окружностей. Касание может
происходить слева от вектора и справа, поэтому есть два параметра
k&lt;sub&gt;1&lt;/sub&gt; и k&lt;sub&gt;2&lt;/sub&gt;, которые могут принимать значения k&lt;sub&gt;i&lt;/sub&gt;
∈ {-1, 1}. В Maxima я смог свести поиск и решение уравнения к такой
последовательности:&lt;/p&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_82986384"data-toggle="collapse"&gt;Можно увидеть всю формулу, но не просите потом развидеть её&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_82986384"&gt;
&lt;pre class="literal-block"&gt;
(%i1) p1: [p1x, p1y];
(%o1)                             [p1x, p1y]
(%i2) p2: [p2x, p2y];
(%o2)                             [p2x, p2y]
(%i3) t1: [t1x, t1y];
(%o3)                             [t1x, t1y]
(%i4) t2: [t2x, t2y];
(%o4)                             [t2x, t2y]
(%i5) load(&amp;quot;vect&amp;quot;);

(%o5)           /usr/share/maxima/5.24.0/share/vector/vect.mac
(%i6)
Tt1: [-t1y, t1x];
(%o6)                            [- t1y, t1x]
(%i7) Tt2: [-t2y, t2x];
(%o7)                            [- t2y, t2x]
(%i8)
f: p2 - delta * t1 + k1 * R2 * Tt2 - p1 - k2 * R1 * Tt1;
(%o8) [- k1 t2y R2 + k2 t1y R1 - delta t1x + p2x - p1x,
                                 k1 t2x R2 - k2 t1x R1 - delta t1y + p2y - p1y]
(%i9) res: solve([(f . f) = (R1 + R2)^2], R2), ratsimp;
                        2     2   2    2     2
(%o9) [R2 = - (sqrt(((k1  - k1  k2  t1x ) t2y
        2   2                                     2     2   2    2     2
 + (2 k1  k2  t1x t1y t2x + 2 k1 k2 t1y) t2y + (k1  - k1  k2  t1y ) t2x
                       2    2     2    2    2
 + 2 k1 k2 t1x t2x + k2  t1y  + k2  t1x ) R1
          2              2                         2                2
 + (((2 k1  k2 p2y - 2 k1  k2 p1y) t1x - 2 delta k1  k2 t1x t1y) t2y
               2       2        2              2
 + ((2 delta k1  k2 t1y  + (2 k1  k2 p1y - 2 k1  k2 p2y) t1y
             2       2        2              2
 - 2 delta k1  k2 t1x  + (2 k1  k2 p2x - 2 k1  k2 p1x) t1x) t2x
 - 2 delta k1 t1x + 2 k1 p2x - 2 k1 p1x) t2y
              2              2              2                2
 + (2 delta k1  k2 t1x - 2 k1  k2 p2x + 2 k1  k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2   2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  k1  t1y
              2                 2              2    2       2
 + (2 delta k1  p2y - 2 delta k1  p1y) t1y - k1  p2y  + 2 k1  p1y p2y
     2    2     2              2   2                 2                 2
 - k1  p1y ) t2y  + ((- 2 delta  k1  t1x + 2 delta k1  p2x - 2 delta k1  p1x)
                  2                 2                 2           2
 t1y + (2 delta k1  p2y - 2 delta k1  p1y) t1x + (2 k1  p1x - 2 k1  p2x) p2y
       2               2
 + 2 k1  p1y p2x - 2 k1  p1x p1y) t2x t2y
           2   2    2              2                 2              2    2
 + (- delta  k1  t1x  + (2 delta k1  p2x - 2 delta k1  p1x) t1x - k1  p2x
       2             2    2     2        2    2
 + 2 k1  p1x p2x - k1  p1x ) t2x  + delta  t1y
                                          2    2
 + (2 delta p1y - 2 delta p2y) t1y + delta  t1x
                                        2                  2                  2
 + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x  - 2 p1x p2x + p1y
      2
 + p1x ) + (- k1 k2 t1y t2y - k1 k2 t1x t2x - 1) R1
 + (delta k1 t1x - k1 p2x + k1 p1x) t2y
                                              2    2     2    2
 + (- delta k1 t1y + k1 p2y - k1 p1y) t2x)/(k1  t2y  + k1  t2x  - 1),
               2     2   2    2     2        2   2
R2 = (sqrt(((k1  - k1  k2  t1x ) t2y  + (2 k1  k2  t1x t1y t2x + 2 k1 k2 t1y)
          2     2   2    2     2                       2    2     2    2    2
 t2y + (k1  - k1  k2  t1y ) t2x  + 2 k1 k2 t1x t2x + k2  t1y  + k2  t1x ) R1
          2              2                         2                2
 + (((2 k1  k2 p2y - 2 k1  k2 p1y) t1x - 2 delta k1  k2 t1x t1y) t2y
               2       2        2              2
 + ((2 delta k1  k2 t1y  + (2 k1  k2 p1y - 2 k1  k2 p2y) t1y
             2       2        2              2
 - 2 delta k1  k2 t1x  + (2 k1  k2 p2x - 2 k1  k2 p1x) t1x) t2x
 - 2 delta k1 t1x + 2 k1 p2x - 2 k1 p1x) t2y
              2              2              2                2
 + (2 delta k1  k2 t1x - 2 k1  k2 p2x + 2 k1  k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2   2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  k1  t1y
              2                 2              2    2       2
 + (2 delta k1  p2y - 2 delta k1  p1y) t1y - k1  p2y  + 2 k1  p1y p2y
     2    2     2              2   2                 2                 2
 - k1  p1y ) t2y  + ((- 2 delta  k1  t1x + 2 delta k1  p2x - 2 delta k1  p1x)
                  2                 2                 2           2
 t1y + (2 delta k1  p2y - 2 delta k1  p1y) t1x + (2 k1  p1x - 2 k1  p2x) p2y
       2               2
 + 2 k1  p1y p2x - 2 k1  p1x p1y) t2x t2y
           2   2    2              2                 2              2    2
 + (- delta  k1  t1x  + (2 delta k1  p2x - 2 delta k1  p1x) t1x - k1  p2x
       2             2    2     2        2    2
 + 2 k1  p1x p2x - k1  p1x ) t2x  + delta  t1y
                                          2    2
 + (2 delta p1y - 2 delta p2y) t1y + delta  t1x
                                        2                  2                  2
 + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x  - 2 p1x p2x + p1y
      2
 + p1x ) + (k1 k2 t1y t2y + k1 k2 t1x t2x + 1) R1
 + (- delta k1 t1x + k1 p2x - k1 p1x) t2y
                                            2    2     2    2
 + (delta k1 t1y - k1 p2y + k1 p1y) t2x)/(k1  t2y  + k1  t2x  - 1)]
(%i10) factor(ev(res, [k1^2=1, k2^2=1, 1 - t1x^2 = t1y^2,
 1 - t1y^2 = t1x^2, 1 - t2x^2=t2y^2, 1 - t2y^2 = t2x^2,
 t1y^2 + t1x^2 = 1, t2y^2 + t2x^2 = 1]));
                         2    2                                          2    2
(%o10) [R2 = - (sqrt((t1y  t2y  + (2 t1x t1y t2x + 2 k1 k2 t1y) t2y + t1x  t2x
                        2      2    2
 + 2 k1 k2 t1x t2x + t1y  + t1x ) R1  + (((2 k2 p2y - 2 k2 p1y) t1x
                          2                   2
 - 2 delta k2 t1x t1y) t2y  + ((2 delta k2 t1y  + (2 k2 p1y - 2 k2 p2y) t1y
                 2
 - 2 delta k2 t1x  + (2 k2 p2x - 2 k2 p1x) t1x) t2x - 2 delta k1 t1x + 2 k1 p2x
                                                                 2
 - 2 k1 p1x) t2y + (2 delta k2 t1x - 2 k2 p2x + 2 k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  t1y
                                        2                  2     2
 + (2 delta p2y - 2 delta p1y) t1y - p2y  + 2 p1y p2y - p1y ) t2y
              2
 + ((- 2 delta  t1x + 2 delta p2x - 2 delta p1x) t1y
 + (2 delta p2y - 2 delta p1y) t1x + (2 p1x - 2 p2x) p2y + 2 p1y p2x
                                2    2                                        2
 - 2 p1x p1y) t2x t2y + (- delta  t1x  + (2 delta p2x - 2 delta p1x) t1x - p2x
                  2     2        2    2
 + 2 p1x p2x - p1x ) t2x  + delta  t1y  + (2 delta p1y - 2 delta p2y) t1y
        2    2                                        2                  2
 + delta  t1x  + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x
                  2      2
 - 2 p1x p2x + p1y  + p1x ) - k1 k2 t1y t2y R1 - k1 k2 t1x t2x R1 - R1
 + delta k1 t1x t2y - k1 p2x t2y + k1 p1x t2y - delta k1 t1y t2x + k1 p2y t2x
                   2      2
 - k1 p1y t2x)/(t2y  + t2x  - 1), R2 =
          2    2                                          2    2
(sqrt((t1y  t2y  + (2 t1x t1y t2x + 2 k1 k2 t1y) t2y + t1x  t2x
                        2      2    2
 + 2 k1 k2 t1x t2x + t1y  + t1x ) R1  + (((2 k2 p2y - 2 k2 p1y) t1x
                          2                   2
 - 2 delta k2 t1x t1y) t2y  + ((2 delta k2 t1y  + (2 k2 p1y - 2 k2 p2y) t1y
                 2
 - 2 delta k2 t1x  + (2 k2 p2x - 2 k2 p1x) t1x) t2x - 2 delta k1 t1x + 2 k1 p2x
                                                                 2
 - 2 k1 p1x) t2y + (2 delta k2 t1x - 2 k2 p2x + 2 k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  t1y
                                        2                  2     2
 + (2 delta p2y - 2 delta p1y) t1y - p2y  + 2 p1y p2y - p1y ) t2y
              2
 + ((- 2 delta  t1x + 2 delta p2x - 2 delta p1x) t1y
 + (2 delta p2y - 2 delta p1y) t1x + (2 p1x - 2 p2x) p2y + 2 p1y p2x
                                2    2                                        2
 - 2 p1x p1y) t2x t2y + (- delta  t1x  + (2 delta p2x - 2 delta p1x) t1x - p2x
                  2     2        2    2
 + 2 p1x p2x - p1x ) t2x  + delta  t1y  + (2 delta p1y - 2 delta p2y) t1y
        2    2                                        2                  2
 + delta  t1x  + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x
                  2      2
 - 2 p1x p2x + p1y  + p1x ) + k1 k2 t1y t2y R1 + k1 k2 t1x t2x R1 + R1
 - delta k1 t1x t2y + k1 p2x t2y - k1 p1x t2y + delta k1 t1y t2x - k1 p2y t2x
                   2      2
 + k1 p1y t2x)/(t2y  + t2x  - 1)]
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Затем я немного пошаманил руками и смог упростить уравнения до
скалярных и векторных произведений и других более удобноваримых
операций, чем работа с векторами в сыром виде:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;St: t1y * t2y + t1x * t2x;&lt;/div&gt;
&lt;div class="line"&gt;Vt: t1x * t2y-t1y * t2x;&lt;/div&gt;
&lt;div class="line"&gt;Vpt: (p2x - p1x) * t1y - (p2y - p1y) * t1x;&lt;/div&gt;
&lt;div class="line"&gt;Spt: (p2y - p1y) * t1y + (p2x - p1x) * t1x;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;L: (1 - St^2) * R2^2 + 2 * R2 * (R1 * (k1 * k2 * St + 1) + k1 * Vpt * St) -2 *k2 * Vpt * R1 - Vpt^2;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;delta1: sqrt(L) + k1 * R2 * Vt + Spt;&lt;/div&gt;
&lt;div class="line"&gt;delta2: k1 * R2 * Vt + Spt - sqrt(L);&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Кажется всё посчитано верно (два варианта решения delta1 и delta2),
я исхожу из того, что к начальной точке можно подвести одну окружность
некоторого заданного радиуса R1, а затем уже нужно построить другую
радиуса R2 так, чтобы касалась она луча исходящего в противонаправленно
конечному вектору.&lt;/p&gt;
&lt;p&gt;Я смогу вывести ограничения на R1, R2, но об этом уже потом.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 30 Jun 2013 03:03:37 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-30:posts/2013/06/30/perekhod-iz-tochki-v-tochku/</guid><category>окружность</category><category>вычисление</category><category>би-дуги</category><category>переход</category><category>точка</category><category>математика</category></item><item><title>USB-фонарик с dx.com</title><link>http://imdagger.github.io/posts/2013/06/25/usb-fonarik-s-dxcom/</link><description>&lt;p&gt;Наконец-то мой фонарик добрался из Гонконга до Минска. 23 числа
поступил в почтовое «MINSK PI 2» отделение и скоро будет проходить
таможенный контроль. А то я уже разволновался, т.к. заказал его ещё 1
числа, а отправился он на корабле 7 числа. А потом ни слуху ни духу.
Теперь главное – дождаться его в Гомеле :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 25 Jun 2013 00:45:42 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-25:posts/2013/06/25/usb-fonarik-s-dxcom/</guid><category>dx.com</category><category>USB</category><category>покупка</category><category>фонарик</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/06/21/urn:ya.ru:post/22199227/1821/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Кажется, что любую статью о собеседовании в Google можно превратить
в срач лишь упомянув крышку люка.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 21 Jun 2013 02:29:29 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-21:posts/2013/06/21/urn:ya.ru:post/22199227/1821/</guid><category>собеседование</category><category>мысли</category><category>жизнь</category><category>google</category></item><item><title>Маленькая пантера :)</title><link>http://imdagger.github.io/posts/2013/06/19/malenkaia-pantera/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/586132"&gt;&lt;img alt="ALIM3180.JPG" src="http://img-fotki.yandex.ru/get/9228/22199227.b/0_8f194_926161c4_L" title="ALIM3180.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 19 Jun 2013 17:05:51 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-19:posts/2013/06/19/malenkaia-pantera/</guid><category>трава</category><category>природа</category><category>котёнок</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/06/18/urn:ya.ru:post/22199227/1817/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/585939"&gt;&lt;img alt="ALIM3194.JPG" src="http://img-fotki.yandex.ru/get/9311/22199227.b/0_8f0d3_caae2b36_L" title="ALIM3194.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 18 Jun 2013 17:54:14 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-18:posts/2013/06/18/urn:ya.ru:post/22199227/1817/</guid><category>Гомель</category><category>здание</category><category>озеро</category><category>конюшни</category><category>небо</category><category>старый</category></item><item><title>Noty</title><link>http://imdagger.github.io/posts/2013/06/14/noty/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Отличный плагин для jQuery для показа всплывающих сообщений.
Приятно, что легко расширяется, и часто используемый функционал сразу
вынесен в опции: т.е. всякие таймауты, обработчики по показу, закрытию,
способ закрытия сообщения, показ в своём контейнере, кнопки и многое
другое.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 14 Jun 2013 14:40:32 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-14:posts/2013/06/14/noty/</guid><category>jquery</category><category>сообщение</category><category>noty</category><category>всплывающий</category><category>javascript</category><category>показ</category><category>плагин</category></item><item><title>Генератор названий планет: возвращение</title><link>http://imdagger.github.io/posts/2013/06/12/generator-nazvanii-planet-vozvrashchenie/</link><description>&lt;p&gt;В этот раз я решил немного переписать &lt;a class="reference external" href="http://imdagger.github.io/posts/2010/09/05/generator-nazvanii/"&gt;мой старый
генератор&lt;/a&gt; названий
планет (который написан на Python, заодно я нашёл там небольшую ошибку и
исправил). На этот раз генератор &lt;strong&gt;не требует ничего кроме&lt;/strong&gt; браузера,
т.к. написан на JavaScript. И в этот раз я даже
его &lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809"&gt;положил&lt;/a&gt; на GitHub
Gist, чтобы было удобнее править и загружать.
Вот &lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809/download"&gt;тут&lt;/a&gt; можно
его скачать. Достаточно загрузить архив, распаковать, открыть вложенный
HTML и понажимать кнопку “Сгенерировать новую!”. Получаются забавные
варианты:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Kut&lt;/div&gt;
&lt;div class="line"&gt;Perr&lt;/div&gt;
&lt;div class="line"&gt;Koai L3&lt;/div&gt;
&lt;div class="line"&gt;Vet&lt;/div&gt;
&lt;div class="line"&gt;Baonda&lt;/div&gt;
&lt;div class="line"&gt;Kee&lt;/div&gt;
&lt;div class="line"&gt;Pea&lt;/div&gt;
&lt;div class="line"&gt;Cris&lt;/div&gt;
&lt;div class="line"&gt;Cenyal&lt;/div&gt;
&lt;div class="line"&gt;Koaolia&lt;/div&gt;
&lt;div class="line"&gt;Melanal&lt;/div&gt;
&lt;div class="line"&gt;Vaviet K4&lt;/div&gt;
&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" data-toggle="collapse" href="#cut_85183376"&gt;хочу ещё&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85183376"&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Badabana K&lt;/div&gt;
&lt;div class="line"&gt;Beboha 1I&lt;/div&gt;
&lt;div class="line"&gt;Keate IV&lt;/div&gt;
&lt;div class="line"&gt;Oniian&lt;/div&gt;
&lt;div class="line"&gt;Bebancolia&lt;/div&gt;
&lt;div class="line"&gt;Fractirion&lt;/div&gt;
&lt;div class="line"&gt;Gaean&lt;/div&gt;
&lt;div class="line"&gt;Bebomvian&lt;/div&gt;
&lt;div class="line"&gt;Monera KI&lt;/div&gt;
&lt;div class="line"&gt;Jacoanet AR7&lt;/div&gt;
&lt;div class="line"&gt;Eacomodate&lt;/div&gt;
&lt;div class="line"&gt;Luiic&lt;/div&gt;
&lt;div class="line"&gt;Oniancolia VII&lt;/div&gt;
&lt;div class="line"&gt;Crematoth&lt;/div&gt;
&lt;div class="line"&gt;Odvolar K&lt;/div&gt;
&lt;div class="line"&gt;Kon&lt;/div&gt;
&lt;div class="line"&gt;Onivilon VIIILA&lt;/div&gt;
&lt;div class="line"&gt;Colar&lt;/div&gt;
&lt;div class="line"&gt;Cremcumber X&lt;/div&gt;
&lt;div class="line"&gt;Deat Crypto&lt;/div&gt;
&lt;div class="line"&gt;Cucun&lt;/div&gt;
&lt;div class="line"&gt;Vive VIII&lt;/div&gt;
&lt;div class="line"&gt;Crematooro&lt;/div&gt;
&lt;div class="line"&gt;Bic III&lt;/div&gt;
&lt;div class="line"&gt;Vivcytal L3&lt;/div&gt;
&lt;div class="line"&gt;Beh IVP&lt;/div&gt;
&lt;div class="line"&gt;Cucut K4&lt;/div&gt;
&lt;div class="line"&gt;Asesar IIII&lt;/div&gt;
&lt;div class="line"&gt;Yaer X&lt;/div&gt;
&lt;div class="line"&gt;Con&lt;/div&gt;
&lt;div class="line"&gt;Fracek&lt;/div&gt;
&lt;div class="line"&gt;Aca&lt;/div&gt;
&lt;div class="line"&gt;Centut&lt;/div&gt;
&lt;div class="line"&gt;Odactal&lt;/div&gt;
&lt;div class="line"&gt;Oolia&lt;/div&gt;
&lt;div class="line"&gt;Venera 7&lt;/div&gt;
&lt;div class="line"&gt;Ortyh&lt;/div&gt;
&lt;div class="line"&gt;Embarrala VII&lt;/div&gt;
&lt;div class="line"&gt;Jacal&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809/download"&gt;скачать&lt;/a&gt;&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809/download"&gt;&lt;img alt="Код генератора" src="http://img-fotki.yandex.ru/get/9155/22199227.b/0_8e033_e8d9bd5d_L" title="Код генератора"/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 12 Jun 2013 02:45:52 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-12:posts/2013/06/12/generator-nazvanii-planet-vozvrashchenie/</guid><category>браузер</category><category>новый</category><category>планета</category><category>название</category><category>javascript</category><category>скрипт</category><category>генератор</category><category>пример</category></item><item><title>Аппроксимация би-дугами</title><link>http://imdagger.github.io/posts/2013/06/11/approksimatsiia-bi-dugami/</link><description>&lt;p&gt;Формула и реализация построение дуги между двумя точками, из которых
выходит два вектора задающих касательные к дуге.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 11 Jun 2013 02:05:08 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-11:posts/2013/06/11/approksimatsiia-bi-dugami/</guid><category>дуга</category><category>би-дуги</category><category>дву-дуги</category><category>biarc</category><category>аппроксимация</category></item><item><title>What's the difference between "under", "below", "beneath", and "underneath"?</title><link>http://imdagger.github.io/posts/2013/06/10/whats-the-difference-between-under-below-beneath-and-underneath/</link><description>&lt;p&gt;Отличие under от below, beneath и underneath.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 10 Jun 2013 02:42:09 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-10:posts/2013/06/10/whats-the-difference-between-under-below-beneath-and-underneath/</guid><category>слова</category><category>английский</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/06/09/urn:ya.ru:post/22199227/1811/</link><description>&lt;p&gt;Нашёл как попросить FFI загрузить таблицу из текущего процесса.
Достаточно просто передать #f вместо названия библиотеки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;libc&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ffi-lib&lt;/span&gt; &lt;span class="pgcss-no"&gt;#f&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 09 Jun 2013 02:59:14 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-09:posts/2013/06/09/urn:ya.ru:post/22199227/1811/</guid><category>racket</category><category>процесс</category><category>ffi</category><category>текущий</category></item><item><title>Шпаргалка по дисциплине "Пластическая анатомия"</title><link>http://imdagger.github.io/posts/2013/06/06/shpargalka-po-distsipline-plasticheskaia-anatomiia/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Может кому-то пригодится. Собирал информацию из разных источников,
вопросы к билетам в архиве (картинкой). Внутри архива шпаргалка в 3-ёх
форматах: OpenDocument, DOC и PDF. Пластическая анатомия для художников.
Можно использовать на свой страх и риск.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 06 Jun 2013 03:33:38 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-06:posts/2013/06/06/shpargalka-po-distsipline-plasticheskaia-anatomiia/</guid><category>пластическая</category><category>анатомия</category><category>шпаргалка</category><category>ответ</category><category>экзамен</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/06/03/urn:ya.ru:post/22199227/1809/</link><description>&lt;p&gt;Нужно было тут распознать пачку текстов в изображениях с 300 DPI.
Качество картинок неплохое, хоть кое-где и встречается пыль в сканах.
Мне нужны были только куски из текста. Сначала я подумал набрать руками,
но проделав так пяток раз, я передумал. И стал вспоминать, что у меня
есть. А оказалось, что я уже ставил себе раньше: gocr и tesseract.
Первый русский текст естественно у меня не понял. А вот второй подхватил
всё на ура (только я поставил его пакет с поддержкой русского языка из
репозитория) и распознал тексты с минимумом проблем. Только пришлось в
мануал заглянуть, как указать язык этой консольной утилите:&lt;/p&gt;
&lt;blockquote&gt;
tesseract -l rus имя_файла.jpg файл_для_текста # оно само добавит
расширение .txt по умолчанию&lt;/blockquote&gt;
&lt;p&gt;Значит я его не зря ставил когда-то с учётом перспективы :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 03 Jun 2013 04:26:12 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-03:posts/2013/06/03/urn:ya.ru:post/22199227/1809/</guid><category>текст</category><category>сканирование</category><category>tesseract</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/06/02/urn:ya.ru:post/22199227/1808/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 02 Jun 2013 01:30:27 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-02:posts/2013/06/02/urn:ya.ru:post/22199227/1808/</guid></item><item><title>JIRA и автостарт</title><link>http://imdagger.github.io/posts/2013/06/02/jira-i-avtostart/</link><description>&lt;p&gt;Добавил в скрипт для запуска JIRA зависимости от MySQL и Nginx. Т.к.
похоже, что у меня JIRA сервис часто успевает запуститься раньше, чем
база данных и от этого просто драйвер БД не может подключиться и вся
трэкинговая система тихо валится при загрузке:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# Provides:          jira&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# Required-Start:    $local_fs $remote_fs $network $syslog nginx mysql&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# Required-Stop:     $local_fs $remote_fs $network $syslog nginx mysql&lt;/span&gt;
…
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Надеюсь, что копаю в правильном направлении :/&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 02 Jun 2013 01:25:36 +0300</pubDate><guid>tag:imdagger.github.io,2013-06-02:posts/2013/06/02/jira-i-avtostart/</guid><category>linux</category><category>скрипт</category><category>старт</category><category>запуск</category><category>MySQL</category><category>jira</category><category>автозагрузка</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/30/urn:ya.ru:post/22199227/1806/</link><description>&lt;p&gt;4 года микроблогу. Нынче я пишу уже не так часто отчасти из-за того, что
работа сильно выжимает, а с другой стороны нельзя писать про
внутренности того, над чем работаю, иначе нарушу конфиденциальность
проекта. А так как работа отнимает как минимум треть всего времени (а
мне ещё и спать нужно), то поэтому новостей в месяц от меня стало
намного меньше, чем раньше.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 30 May 2013 01:54:06 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-30:posts/2013/05/30/urn:ya.ru:post/22199227/1806/</guid><category>блог</category><category>радость</category><category>юбилей</category><category>жизнь</category><category>грусть</category></item><item><title>Android, SDL2 и Racket</title><link>http://imdagger.github.io/posts/2013/05/28/android-sdl2-i-racket/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Получилось вывести изображение через SDL2 из Racket, который запущен
из JNI. Работает шустро, правда пока загрузка модулей идёт не быстро,
т.к. я их храню для удобства на SD-карте, а Racket грузит все свои
зависимости файл за файлом, а модулей у него много. У меня на PC выдаёт,
что он выполнил несколько тысяч IO-операций (для проверки файла с
исходником, для проверки скомпиленой версии и тд), что естественно
замедляет всё.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; А так вообще забавно подключаться через Geiser прямо в рабочий
процесс Racket на телефоне и управлять поведением прямо находу.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 28 May 2013 03:59:27 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-28:posts/2013/05/28/android-sdl2-i-racket/</guid><category>Scheme</category><category>geiser</category><category>Android</category><category>racket</category><category>радость</category><category>SDL</category></item><item><title>Весеннее настроение</title><link>http://imdagger.github.io/posts/2013/05/27/vesennee-nastroenie/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/578495"&gt;&lt;img alt="Весеннее настроение" src="http://img-fotki.yandex.ru/get/9231/22199227.b/0_8d3bf_339f6acc_L" title="Весеннее настроение"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/578496"&gt;&lt;img alt="Весеннее настроение" src="http://img-fotki.yandex.ru/get/9225/22199227.b/0_8d3c0_dfbff33e_L" title="Весеннее настроение"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/578497"&gt;&lt;img alt="Весеннее настроение" src="http://img-fotki.yandex.ru/get/9224/22199227.b/0_8d3c1_fe02e89b_L" title="Весеннее настроение"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Что-то похолодало, но я выложу немножечко этой весны, правда, больше
похожей на жаркое лето.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 27 May 2013 02:07:02 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-27:posts/2013/05/27/vesennee-nastroenie/</guid><category>цветы</category><category>красота</category><category>радость</category><category>одуванчик</category><category>дерево</category><category>весна</category></item><item><title>Недочёт в обёртке для DAWG библиотеки</title><link>http://imdagger.github.io/posts/2013/05/25/nedochiot-v-obiortke-dlia-dawg-biblioteki/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Отправил&amp;nbsp;&lt;a class="reference external" href="https://github.com/kmike/DAWG/pull/10"&gt;pull-запрос&lt;/a&gt; с
исправлением небольшой неточности при открытии файлов в библиотеке DAWG
для Python. Сначала естественно написал и закоммитил тест, а потом уже
проверил свои мысли и исправления на нём. Заодно немного почитал про
Cython, т.к. не понял сходу почему он не принял мой bool (а оказалось,
что их два вида и нужно импортировать необходимый). Заодно и из курса по
C++ освежил в памяти, как проверять поток на ошибки, что есть флаги,
есть ещё удобные методы для проверки флагов: .fail(), .bad(), .good().
Вот и добавил, перед попыткой прочитать данные из потока при помощи
внутренней библиотеки, проверку на состояние с выбросом исключения.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 25 May 2013 03:37:32 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-25:posts/2013/05/25/nedochiot-v-obiortke-dlia-dawg-biblioteki/</guid><category>ошибка</category><category>исправление</category><category>библиотека</category><category>python</category><category>обёртка</category><category>DAWG</category><category>cython</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/22/urn:ya.ru:post/22199227/1800/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Смог запустить приложение с использованием SDL2 и одновременно
обращаться к нему через Geiser прямо с доступом в телефон. Правда пока
какие-то проблемы с выводом самих изображений, но это я решу попозже.
Смог ещё сделать так, чтобы Racket и SDL2 писали все свои ошибки в
лог-файл, просто при помощи dup2 перенаправил stderr в открытый файл.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 22 May 2013 03:06:34 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-22:posts/2013/05/22/urn:ya.ru:post/22199227/1800/</guid><category>вывод</category><category>SDL</category><category>geiser</category><category>перенаправление</category><category>racket</category><category>SDL2</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/20/urn:ya.ru:post/22199227/1799/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Поставил на сервачке nginx-extras. Т.к. мне потребуется
&lt;a class="reference external" href="http://wiki.nginx.org/HttpLuaModule"&gt;HttpLuaModule&lt;/a&gt;, чтобы разобрать
по частям User-Agent и на его основании отдавать определённые файлы или
отдавать некоторое значение по умолчанию. Можно и простыми регулярными
выражениями такое сделать в nginx, но придётся делать очень много..
ооочень много их, т.к. параметры в User-Agent могут прийти разные, в
разном порядке и их комбинации могут требовать разных принимаемых
решений по отдаваемому контенту.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 20 May 2013 23:14:15 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-20:posts/2013/05/20/urn:ya.ru:post/22199227/1799/</guid><category>обработка</category><category>lua</category><category>модуль</category><category>nginx</category><category>ubuntu</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/18/urn:ya.ru:post/22199227/1798/</link><description>&lt;p&gt;пора вернуть нормальный график сна обратно&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 18 May 2013 02:12:34 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-18:posts/2013/05/18/urn:ya.ru:post/22199227/1798/</guid></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/18/urn:ya.ru:post/22199227/1797/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/577219"&gt;&lt;img alt="ALIM3027.JPG" src="http://img-fotki.yandex.ru/get/6802/22199227.b/0_8cec3_a7c8e5be_L" title="ALIM3027.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 18 May 2013 02:11:07 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-18:posts/2013/05/18/urn:ya.ru:post/22199227/1797/</guid><category>солнце</category><category>чай</category><category>свет</category><category>лимон</category><category>ложка</category></item><item><title>Ubuntu и wl.ko</title><link>http://imdagger.github.io/posts/2013/05/09/ubuntu-i-wlko/</link><description>&lt;p&gt;Появилось время разобраться почему на ядре 3.2.0-41 у меня не
подхватился Broadcom WiFi. Плюс ещё на младшей версии ядра не возможно
было подключить NVidia из-за того, что я обновлялся и драйверы
поставились под последнюю версию ядра. Но это было всё не столь
критично, скорее меня тревожил более сильный выдув куллера на 3.2.0-39
(видимо тоже из-за какого-то частичного обновления). Я сравнил вывод
lsmod при запуске на обоих ядрах, и естественно была видна разница на
глаз. Не хватало 3-ёх мегабайтного блоба от Broadcom (тьфу-тьфу на них)
под названием &lt;strong&gt;wl&lt;/strong&gt; (модуль wl.ko). Во всех версиях до 41 у себя я
обнаружил в &lt;code class="code"&gt;
/lib/modules/3.2.0-xx-generic/updates/dkms/&lt;/code&gt;
 модуль
&lt;strong&gt;wl.ko&lt;/strong&gt;. А вот в &lt;code class="code"&gt;
/lib/modules/3.2.0-41-generic/updates/dkms/&lt;/code&gt;
 его не
было.&lt;/p&gt;
&lt;p&gt;Но благо я помню про то, что такое DKMS и с чем его едят. Он
оказался даже собран у меня, видимо не поставился от того, что когда я
обновлялся я делал тяжеловесные задачи и инсталлятор просто немного
прибило по памяти. Поэтому:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;imdagger@thug-machine:~$&lt;/span&gt; sudo dkms build -m bcmwl -v 6.20.155.1+bdcom
&lt;span class="pgcss-go"&gt;Module bcmwl/6.20.155.1+bdcom already built for kernel 3.2.0-41-generic/4&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;imdagger@thug-machine:~$&lt;/span&gt; sudo dkms install -m bcmwl -v 6.20.155.1+bdcom

&lt;span class="pgcss-go"&gt;wl:&lt;/span&gt;
&lt;span class="pgcss-go"&gt;Running module version sanity check.&lt;/span&gt;

&lt;span class="pgcss-go"&gt;Good news! Module version  for wl.ko&lt;/span&gt;
&lt;span class="pgcss-go"&gt;exactly matches what is already found in kernel 3.2.0-41-generic.&lt;/span&gt;
&lt;span class="pgcss-go"&gt;DKMS will not replace this module.&lt;/span&gt;
&lt;span class="pgcss-go"&gt;You may override by specifying --force.&lt;/span&gt;

&lt;span class="pgcss-go"&gt;depmod...........&lt;/span&gt;

&lt;span class="pgcss-go"&gt;DKMS: install completed.&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;imdagger@thug-machine:~$&lt;/span&gt; sudo modprobe wl
&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; Счастье. Сразу подхватился и подключился мгновенно WiFi после этой строчки.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;У утилиты dkms опция -m это указание названия модуля, а -v его
версия. Т.к. я собирал из исходников, которые есть прямо в директории
/var/lib/dkms, то ничего скачивать не пришлось, ибо у меня уже стоит
пакет bcmwl-kernel-source.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 09 May 2013 23:41:51 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-09:posts/2013/05/09/ubuntu-i-wlko/</guid><category>сеть</category><category>ошибка</category><category>беспроводная</category><category>ubuntu</category><category>broadcom</category><category>модуль</category><category>linux</category><category>DKMS</category><category>wl.ko</category></item><item><title>Лучи радости</title><link>http://imdagger.github.io/posts/2013/05/09/luchi-radosti/</link><description>&lt;p&gt;Сколько лет пользуюсь server-mode, а чувства всё теже, что я обожаю
серверный режим Emacs, что позволяет открывать сколько угодно окон
редактора (а держать только одну копию в фоновом режиме) и даже на
других компьютерах, а буфферы все общие. Можно редактировать текст хоть
в 4-ом, хотя обычно я держу его только для себя :) И главное, что всё из
коробки, просто нужно запустить редактор с опцией --daemon специальной.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 09 May 2013 16:00:44 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-09:posts/2013/05/09/luchi-radosti/</guid><category>радость</category><category>emacs</category><category>server</category><category>жизнь</category><category>сервер</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/05/urn:ya.ru:post/22199227/1790/</link><description>&lt;p&gt;Что-то последнее обновление сломало WiFi для Broadcom чипов (хотя
драйверы броадкомовцы ещё те глюкавые пишут, так что может это просто
драйверу изменения не понравились, но… увы какой стоит):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; lspci
&lt;span class="pgcss-go"&gt;...&lt;/span&gt;
&lt;span class="pgcss-go"&gt;03:00.0 Network controller: Broadcom Corporation BCM4313 802.11b/g/n Wireless LAN Controller (rev 01)&lt;/span&gt;
&lt;span class="pgcss-go"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Пришлось при загрузке вызвать GRUB и выбрать более старое ядро (с
предыдущего обновления, благо Ubuntu их всех оставляет):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;$&lt;/span&gt; cat /proc/version
&lt;span class="pgcss-go"&gt;Linux version 3.2.0-38-generic (buildd@akateko) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #61-Ubuntu SMP Tue Feb 19 12:18:21 UTC 2013&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;На 3.2.0-38 всё работает отлично, на 39 вроде тоже, а вот на сборке
3.2.0-40 что-то не так с WiFi. Попробую разобраться попозже, если это
имеет смысл :) Т.к. может придёт скоро новое обновление, ведь 3.2.x это уже
довольно старая ветка.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 05 May 2013 23:05:15 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-05:posts/2013/05/05/urn:ya.ru:post/22199227/1790/</guid><category>broadcom</category><category>wifi</category><category>проблема</category><category>ubuntu</category><category>linux</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/05/05/urn:ya.ru:post/22199227/1789/</link><description>&lt;p&gt;сборка завершена&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 05 May 2013 03:09:59 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-05:posts/2013/05/05/urn:ya.ru:post/22199227/1789/</guid></item><item><title>Взаимодействие Racket и JVM</title><link>http://imdagger.github.io/posts/2013/05/05/vzaimodeistvie-racket-i-jvm/</link><description>&lt;p&gt;При сборке Racket в качестве расширения через интерфейс JNI лучше
всего на данный момент в sconfig. выключить опцию
LINUX_FIND_STACK_BASE для Linux/Android (если расширение будет
создано в отдельном потоке). Т.к. это создаёт проблему неверного
определения нижней границы стека, попытки Racket вызвать stack overflow
обработчик и естественно ошибку, т.к. переполнения в реальности не было
и структуры для переполнения не заготовлены. А всё из-за того, что для
Linux используется вызов функции adjust_stack_base, которая считывает
/proc/self/maps и ищет [stack] строку вида:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;beeb5000-beed6000 rw-p 00000000 00:00 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [stack]&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Но в случае с JNI стек основной части приложения будет отличаться от
стека native части кода, если тот создан в отдельной нити. Можно
попробовать определить границы стека через pthread, но возникает
проблема, что делать, если человек хочет собрать библиотеку без
pthreads, … хотя может для случая без pthreads можно идти как и раньше,
используя procfs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 05 May 2013 03:08:58 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-05:posts/2013/05/05/vzaimodeistvie-racket-i-jvm/</guid><category>JVM</category><category>racket</category><category>procfs</category><category>JNI</category><category>стек</category><category>pthreads</category><category>нить</category></item><item><title>Живые бабочки</title><link>http://imdagger.github.io/posts/2013/05/04/zhivye-babochki/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/573732"&gt;&lt;img alt="Живые бабочки" src="http://img-fotki.yandex.ru/get/6426/22199227.a/0_8c124_fef7a_L" title="Живые бабочки"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/573733"&gt;&lt;img alt="Живые бабочки" src="http://img-fotki.yandex.ru/get/5647/22199227.b/0_8c125_444e86b9_L" title="Живые бабочки"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/573734"&gt;&lt;img alt="Живые бабочки" src="http://img-fotki.yandex.ru/get/6439/22199227.b/0_8c126_1a19cf6f_L" title="Живые бабочки"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Пару фоток с выставки живых бабочек, которую сегодня посещали. Бабочки
достаточно большие, заморские Они прямо там едят, живут и размножаются.
Если повезёт, то можно прямо увидеть как бабочка рождается из куколки
или кокона.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 04 May 2013 23:41:05 +0300</pubDate><guid>tag:imdagger.github.io,2013-05-04:posts/2013/05/04/zhivye-babochki/</guid><category>красота</category><category>бабочка</category><category>живой</category><category>живность</category></item><item><title>ВТ3</title><link>http://imdagger.github.io/posts/2013/04/28/vt3/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp; Смог разобрать маркировку с гильзы. Это ВТ3 толи 36, толи 38.
Оказывается это стреляная гильза от югославского патрона для маузера,
ВТ3 означает &lt;strong&gt;Воjнотех. Завод Крагуjевац.&lt;/strong&gt; 7.92 x 57mm. Вот на
этом&amp;nbsp;&lt;a class="reference external" href="http://www.municion.org"&gt;сайте&lt;/a&gt; смог найти по маркировке
производителя.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 28 Apr 2013 01:12:38 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-28:posts/2013/04/28/vt3/</guid><category>находка</category><category>гильза</category></item><item><title>Пару находок</title><link>http://imdagger.github.io/posts/2013/04/27/paru-nakhodok/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/571574"&gt;&lt;img alt="Пару находок" src="http://img-fotki.yandex.ru/get/5645/22199227.a/0_8b8b6_535a73fc_L" title="Пару находок"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/571575"&gt;&lt;img alt="Пару находок" src="http://img-fotki.yandex.ru/get/5627/22199227.a/0_8b8b7_26281209_L" title="Пару находок"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Такого добра на огороде валом, просто это уже почти последнее, что
осталось, большую часть за годы вычистили.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 27 Apr 2013 23:21:24 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-27:posts/2013/04/27/paru-nakhodok/</guid><category>кости</category><category>жизнь</category><category>огород</category><category>деревня</category></item><item><title>Миндальное печенье</title><link>http://imdagger.github.io/posts/2013/04/25/mindalnoe-pechene/</link><description>&lt;blockquote&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/foxycook/view/808106/"&gt;&lt;img alt="Печенье" src="http://img-fotki.yandex.ru/get/5638/175843626.3/0_c54aa_b9b6862a_L" title="Печенье"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Миндальное печенье очень популярно в разных странах. Замечательное сопровождение к утренней чашечке кофе.
Аромат миндаля придает печенью необычайный вкус. В составе печенья совсем нет привычной
муки — только миндальная или молотый миндаль. Молочных продуктов в нем тоже нет,
как и глютена.&lt;/p&gt;
&lt;p&gt;Состав продуктов:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Миндальная мука — 200 г&lt;/li&gt;
&lt;li&gt;Сахар коричневый — полстакана&lt;/li&gt;
&lt;li&gt;Сахар ванильный — 10 г&lt;/li&gt;
&lt;li&gt;Яйцо — 1-2 штуки&lt;/li&gt;
&lt;li&gt;Миндаль для украшения&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Приготовление кратко:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Смешать все компоненты&lt;/li&gt;
&lt;li&gt;Вымесить тесто&lt;/li&gt;
&lt;li&gt;Сформировать печенье&lt;/li&gt;
&lt;li&gt;Украсить миндалем&lt;/li&gt;
&lt;li&gt;Выпекать на промасленной бумаге&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://edalegko.ru/izbrannoe/mindalnoe-pechene/"&gt;подробное приготовление по шагам с фото&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Выглядит вкусно! Нужно будет попробовать сделать миндальную муку и таких
достаточно диетических печенок.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 25 Apr 2013 03:18:06 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-25:posts/2013/04/25/mindalnoe-pechene/</guid><category>печенье</category><category>миндаль</category><category>еда</category></item><item><title>Geiser и Emacs</title><link>http://imdagger.github.io/posts/2013/04/25/geiser-i-emacs/</link><description>&lt;p&gt;Наткнулся сегодня случайно
на&amp;nbsp;&lt;a class="reference external" href="http://www.nongnu.org/geiser/"&gt;Geiser&lt;/a&gt;
(&lt;a class="reference external" href="https://github.com/jaor/geiser/"&gt;репозиторий&lt;/a&gt; на GitHub) из-под
которого удобно работать с Racket и Guile. Мне в принципе только работа
с Racket интересовала. Очень понравился режим &lt;kbd class="kbd"&gt;
geiser-connect&lt;/kbd&gt;
, где можно
указать куда подключиться по TCP к Geiser серверу. В своём приложении
достаточно добавить &lt;code class="code"&gt;
(require geiser/server)&lt;/code&gt;
 и где-нибудь сделать
&lt;code class="code"&gt;
(start-geiser)&lt;/code&gt;
 и будет счастье. Можно сразу писать программу и вызывать
горячую заменю рабочего кода модулей или получить доступ прямо в
работающее приложение, чтобы поправить что-нибудь или посмотреть. Так
ещё оно в Emacs в REPL режиме умеет показывать картинки для объектов
графиков и изображений (прямо как DrRacket). Крутая штука, очень
понравилось.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 25 Apr 2013 03:01:13 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-25:posts/2013/04/25/geiser-i-emacs/</guid><category>сервер</category><category>TCP</category><category>emacs</category><category>racket</category><category>remote</category><category>geiser</category><category>удалённый</category></item><item><title>ICFP Programming Contest 2013</title><link>http://imdagger.github.io/posts/2013/04/23/icfp-programming-contest-2013/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Если сайт Microsoft Research не обманывает, то соревнование будет с
8 августа (видимо в ночь с 8 на 9, т.к. соревнование всегда проходит 3
дня: пт, сб, вс) по 11 августа.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 23 Apr 2013 01:40:39 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-23:posts/2013/04/23/icfp-programming-contest-2013/</guid><category>соревнование</category><category>радость</category><category>2013</category><category>программирование</category><category>icfpc</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/04/23/urn:ya.ru:post/22199227/1777/</link><description>&lt;p&gt;Забавно, что дворовую игру на догонялки в восточной части Беларуси
называют: кэн, кич, а в западной части: бэрик, бэрак. Я обычно
использовал два варианта: играть в бэрика и в кича. Хотя всегда было не
понятно происхождение названия “кэн”. С бэриком и кичом всё понятно,
т.к. первое связано с нашим родным языком и является синонимом слову
ловить, а второе, наверное, от слова кичить (хотя не ясно как они
связаны). Но вот кэн, почему именно кэн? :/&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 23 Apr 2013 00:58:50 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-23:posts/2013/04/23/urn:ya.ru:post/22199227/1777/</guid><category>мысли</category><category>жизнь</category><category>кич</category><category>кэн</category><category>бэрик</category><category>игра</category></item><item><title>Racket и Android NDK r8e</title><link>http://imdagger.github.io/posts/2013/04/18/racket-i-android-ndk-r8e/</link><description>&lt;p&gt;Удалось собрать динамическую (dynamic) версию Racket при помощи
arm-linux-androideabi из поставки Android NDK. Заодно увидел, что
оказывается есть Android и под MIPS, как-то я пропустил эту новость в
прошлом году, только по набору компиляторов обнаружил. Предыдущий
вариант со статической (static) сборкой работал, но т.к. он был собран с
библиотеками из GNU, то возникла проблема с libdl, которая в NDK
отличается. Из-за чего статическая версия не могла нормально обработать
ffi загрузку .so библиотеки и падала с SIGSEGV.&lt;/p&gt;
&lt;p&gt;Над сборкой из поставки NDK пришлось поколдовать немного, т.к.
CGC-сборщик не хотел компилироваться в нескольких местах. Сначала я
пытался собрать Racket с улучшенным точным (precise) сборщиком мусора,
но эта версия падала с ошибкой, которую мне не удалось отладить. Тогда я
попробовал такой вариант (перед этим конечно при помощи
build/tools/make-standalone-toolchain.sh создал все необходимые
директории для сборки):&lt;/p&gt;
&lt;blockquote&gt;
./configure --host=arm-linux-androideabi
--target=arm-linux-androideabi --enable-cgcdefault&lt;/blockquote&gt;
&lt;p&gt;И (ура!!) он заработал как надо без падения при вызове ffi-lib (хотя
я опустил описание того, как долго я искал разные пути и решения, с
ручной линковкой и прописыванием линкера, с попыткой совместить NDK и
GNU и много другое):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="mailto:shell&amp;#64;android"&gt;shell&amp;#64;android&lt;/a&gt;:/data/data/**.****.**** $ ./racket -I racket/base
--collects=/sdcard/racket/.racket/5.3.4.3/collects/&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;Welcome to Racket v5.3.4.3 [cgc].&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt; (require ffi/unsafe)&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt; (ffi-lib “libGLESv2”)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;#&amp;lt;ffi-lib&amp;gt;&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Коллекции я поместил на SD-карту (всё как в прошлый раз, когда
собирал статическую версию). Забыл только сказать, что возникла
небольшая проблема с тем, что в busybox в android shell не установлена
никакая локаль, поэтому пришлось исправить вот этот кусок с ошибкой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gh"&gt;diff --git a/src/racket/src/string.c b/src/racket/src/string.c&lt;/span&gt;
&lt;span class="pgcss-gh"&gt;index 63b5898..dc27372 100644&lt;/span&gt;
&lt;span class="pgcss-gd"&gt;--- a/src/racket/src/string.c&lt;/span&gt;
&lt;span class="pgcss-gi"&gt;+++ b/src/racket/src/string.c&lt;/span&gt;
&lt;span class="pgcss-gu"&gt;@@ -3841,7 +3841,7 @@ char *scheme_push_c_numeric_locale()&lt;/span&gt;
 #ifndef DONT_USE_LOCALE
   GC_CAN_IGNORE char *prev;
   prev = setlocale(LC_NUMERIC, NULL);
&lt;span class="pgcss-gd"&gt;-  if (!strcmp(prev, &amp;quot;C&amp;quot;))&lt;/span&gt;
&lt;span class="pgcss-gi"&gt;+  if (prev &amp;amp;&amp;amp; !strcmp(prev, &amp;quot;C&amp;quot;))&lt;/span&gt;
     return NULL;
   else
     return setlocale(LC_NUMERIC, &amp;quot;C&amp;quot;);
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 18 Apr 2013 04:03:37 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-18:posts/2013/04/18/racket-i-android-ndk-r8e/</guid><category>libdl</category><category>arm-linux-androideabi</category><category>NDK</category><category>ARM</category><category>ffi</category><category>CGC</category><category>dynamic</category><category>racket</category><category>Android</category></item><item><title>Chain assignment</title><link>http://imdagger.github.io/posts/2013/04/16/chain-assignment/</link><description>&lt;p&gt;Попался на одном месте в Python, хотя быстро нашёл. Я почему-то на
автомате написал выражение для множественного присваивания исходя из
мысли, что присваивание будет идти справа-налево:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;a = {}&lt;/div&gt;
&lt;div class="line"&gt;x = 7&lt;/div&gt;
&lt;div class="line"&gt;x = a[x] = 3&lt;/div&gt;
&lt;div class="line"&gt;# увы, тут a это &lt;strong&gt;{3: 3}&lt;/strong&gt;, а не {7: 3} как могло показаться, если
глянуть мельком&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ибо присваивание цепочки происходит слева-направо (да это
документировано, да и вообще есть ли в Python что-то что выполняется
справа-налево?), сначала вычисляется самое правое выражение, а затем
распространяется по очереди в выражения начиная слева:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;# вот так выглядит a = b = c = 7 в инструкциях VM&lt;/div&gt;
&lt;div class="line"&gt;LOAD_CONST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 (7)&lt;/div&gt;
&lt;div class="line"&gt;DUP_TOP&lt;/div&gt;
&lt;div class="line"&gt;STORE_FAST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 (&lt;strong&gt;a&lt;/strong&gt;)&lt;/div&gt;
&lt;div class="line"&gt;DUP_TOP&lt;/div&gt;
&lt;div class="line"&gt;STORE_FAST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 (&lt;strong&gt;b&lt;/strong&gt;)&lt;/div&gt;
&lt;div class="line"&gt;STORE_FAST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2 (&lt;strong&gt;c&lt;/strong&gt;)&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Думаю тут порядок сохранения в переменных пояснять не нужно и так
видно глазом.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 16 Apr 2013 00:32:40 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-16:posts/2013/04/16/chain-assignment/</guid><category>программирование</category><category>знания</category><category>присваивание</category><category>хитрость</category><category>python</category><category>стандарт</category><category>особенность</category><category>пробел</category></item><item><title>Racket на Android</title><link>http://imdagger.github.io/posts/2013/04/14/racket-na-android/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Я тоже смог произвести кросс-компиляцию (просто ради интереса)
Racket Scheme, прочитав, что делал человек по ссылке. Только я делал
чуть по-другому, т.к. у меня уже установлен racket в системе. Если
собрать .zo файлы и выставить на них правильное время, то стартует
достаточно быстро, а работает racket вообще быстро (собирал с jit).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 14 Apr 2013 04:30:28 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-14:posts/2013/04/14/racket-na-android/</guid><category>racket</category><category>Android</category><category>компиляция</category></item><item><title>Небольшая проблема с MyPaint</title><link>http://imdagger.github.io/posts/2013/04/12/nebolshaia-problema-s-mypaint/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Если в последней master сборке в MyPaint 1.1.0 выбрать отладку
устройства ввода, чтобы посмотреть, например, степень нажатия кисти, то
после возврата на канвас с этим устройством приключится беда. Линия за
пером будет выводится с большой задержкой, даже если перо вести
медленно, что не даст вообще никак нормально работать. Поэтому лучше
отдельно отладить перо, затем перезапустить программу и можно продолжить
рисовать уже без проблем. Не знаю как себя ведут в таком случае другие
сборки и другие планшеты.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 12 Apr 2013 05:20:12 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-12:posts/2013/04/12/nebolshaia-problema-s-mypaint/</guid><category>отладка</category><category>master</category><category>mypaint</category><category>отставание</category></item><item><title>Genius EasyPen M406XE</title><link>http://imdagger.github.io/posts/2013/04/12/genius-easypen-m406xe/</link><description>&lt;p&gt;Теперь у меня есть чем рисовать и делать наброски. Достаточно
компактный планшет, мне нравится. Думаю в большем я не нуждаюсь, т.к.
мои навыки рисования очень далеки от идеала. Чтобы завести данный девайс
под Ubuntu Linux 12.04 пришлось немного полазать в интернете, а вот,
чтобы заставить не на самом топовом ядре обрабатывать силу нажатия
пришлось хорошо поискать решение. Но на ЛОРе много чего полезного и вот
этот&amp;nbsp;&lt;a class="reference external" href="http://www.linux.org.ru/forum/linux-hardware/6929804#comment-7624274"&gt;комментарий&lt;/a&gt;
решил все вопросы. Только нужно не забыть установить перед этим драйвер
&lt;a class="reference external" href="https://launchpad.net/wizardpen"&gt;Wizardpen&lt;/a&gt;.
Утилиту&amp;nbsp;&lt;a class="reference external" href="https://github.com/Marisa-Chan/init-tablet"&gt;init-tablet&lt;/a&gt;
пришлось чуть подправить, чтобы она собралась без проблем, но зато её
магическая последовательность байт &lt;code class="code"&gt;
0x5,0x12,0x10,0x11,0x12,0,0,0&lt;/code&gt;

отправленная в устройство планшета сразу же включает отправку силы
нажатия:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;$ xinput list&lt;/div&gt;
&lt;div class="line"&gt;⎡ Virtual core pointer&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=2&amp;nbsp;&amp;nbsp;&amp;nbsp; [master&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (3)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ Virtual core XTEST pointer&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=4&amp;nbsp;&amp;nbsp;&amp;nbsp; [slave&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ A4Tech PS/2+USB Mouse&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=11&amp;nbsp;&amp;nbsp;&amp;nbsp; [slave&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ SynPS/2 Synaptics TouchPad&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=15&amp;nbsp;&amp;nbsp;&amp;nbsp; [slave&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ &lt;strong&gt;Genius Tablet&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=16&lt;/div&gt;
&lt;div class="line"&gt;[slave&amp;nbsp; pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;$ xinput test ‘Genius Tablet’&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;motion a[0]=6439 a[1]=4816 &lt;strong&gt;a[2]=905&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;$ lsusb&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;Bus 006 Device 003: ID 0458:5019 KYE Systems Corp. (Mouse Systems)&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Потребовалось ещё создать
&lt;strong&gt;/usr/share/X11/xorg.conf.d/70-wizardpen.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Section “InputClass”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Identifier “wizardpen”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchIsTablet “on”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchDevicePath “/dev/input/event*”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchProduct “KYE Systems|Genius|M460XE”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Driver “wizardpen”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TopX”&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“0”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TopY”&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“0”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“BottomX”&amp;nbsp;&amp;nbsp; &amp;nbsp;“15360” # нужно откалибровать при&lt;/div&gt;
&lt;div class="line"&gt;помощи &lt;strong&gt;wizardpen-calibrate&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“BottomY”&amp;nbsp;&amp;nbsp; &amp;nbsp;“10240”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TopZ”&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“1”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“BottomZ”&amp;nbsp;&amp;nbsp; &amp;nbsp;“400” # можно прописать и 1023&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TPCButton”&amp;nbsp;&amp;nbsp; &amp;nbsp;“off” # даже если не касаться&lt;/div&gt;
&lt;div class="line"&gt;планшета, то работают кнопки на пере&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; #Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“DebugLevel”&amp;nbsp;&amp;nbsp; &amp;nbsp;“10”&lt;/div&gt;
&lt;div class="line"&gt;EndSection&lt;/div&gt;
&lt;div class="line"&gt;Section “InputClass”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Identifier “wizardpen ignore mouse dev”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchIsTablet “on”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchDevicePath “/dev/input/mouse*”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchProduct “KYE Systems|Genius|M460XE”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Driver “”&lt;/div&gt;
&lt;div class="line"&gt;EndSection&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;И для udevd я добавил ещё автоматический запуск инициализации
планшета, чтобы глубина всегда работала после подключения (в созданном
файле /etc/udev/rules.d/68-xorg-wizardpen.rules):&lt;/p&gt;
&lt;blockquote&gt;
ENV{ID_VENDOR_ID}==“0458”,&amp;nbsp; ENV{ID_MODEL_ID}==“5019”,
RUN+=“/usr/local/bin/init-tablets”&lt;/blockquote&gt;
&lt;p&gt;А в /etc/udev/rules.d/67-xorg-wizardpen.rules ещё добавил:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;# KYE Systems Corp (Genius M406XE)&lt;/div&gt;
&lt;div class="line"&gt;ENV{ID_VENDOR_ID}==“0458”,&amp;nbsp; ENV{ID_MODEL_ID}==“5019”,
ENV{x11_driver}=“wizardpen”&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Но это всё общеизвестная информация. В основном много сил ушло на
определение силы нажатия.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 12 Apr 2013 05:05:03 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-12:posts/2013/04/12/genius-easypen-m406xe/</guid><category>графика</category><category>сила</category><category>перо</category><category>udev</category><category>genius</category><category>нажатие</category><category>планшет</category><category>m406xe</category><category>Xorg</category><category>давление</category></item><item><title>Сюрприз с replace</title><link>http://imdagger.github.io/posts/2013/04/10/siurpriz-s-replace/</link><description>&lt;p&gt;После семи лет Python я на автомате сделал и в JavaScript (я не
силён в азах js) замену строки через .replace, но обнаружил, что оно
ведёт себя не так как я ожидал. Т.е. 'test text test'.replace('test',
'text') даст результат: 'text text &lt;strong&gt;test&lt;/strong&gt;'. Т.е. заменило оно не
всё. Оказывается оно так и задумано, а если я хочу заменить всё, то в
JavaScript я не нашёл другого человеческого решения указать флаг
глобальности, кроме как явно прописать регулярное выражение
&lt;strong&gt;/test/g&lt;/strong&gt;. И вроде Интернет со мной согласен. Хотя меня такое
решение вопроса немного коробит. Я всё же привык, что если в replace
передал строку, то оно не пробует её автоматом преобразовать в regexp.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 10 Apr 2013 04:23:36 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-10:posts/2013/04/10/siurpriz-s-replace/</guid><category>проблема</category><category>замена</category><category>строка</category><category>javascript</category><category>python</category><category>регулярное</category><category>выражение</category><category>replace</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/04/04/urn:ya.ru:post/22199227/1770/</link><description>&lt;p&gt;реверс-инжиниринг бумажной пластики&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 04 Apr 2013 22:37:10 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-04:posts/2013/04/04/urn:ya.ru:post/22199227/1770/</guid></item><item><title></title><link>http://imdagger.github.io/posts/2013/04/02/urn:ya.ru:post/22199227/1769/</link><description>&lt;p&gt;Добавили
мой &lt;a class="reference external" href="http://demotivators.to/p/750214/magazin-dlya-odinokih-lyudej.htm"&gt;демотиватор&lt;/a&gt;
:) Сделал фотку у нас в городе. Забавное название у магазина.&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="http://demotivators.to/p/750214/magazin-dlya-odinokih-lyudej.htm"&gt;&lt;img alt="image0" src="http://img-fotki.yandex.ru/get/6437/22199227.a/0_8a37d_715a5afc_L" title="image0"/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 02 Apr 2013 14:00:46 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-02:posts/2013/04/02/urn:ya.ru:post/22199227/1769/</guid><category>демотиватор</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/04/01/urn:ya.ru:post/22199227/1764/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Ну когда?! Когда уже назначат даты ICFP Programming Contest 2013? Я
уже с нетерпением жду этого мероприятия и не хочу прозевать.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 01 Apr 2013 01:05:00 +0300</pubDate><guid>tag:imdagger.github.io,2013-04-01:posts/2013/04/01/urn:ya.ru:post/22199227/1764/</guid><category>соревнование</category><category>программирование</category></item><item><title>КПК</title><link>http://imdagger.github.io/posts/2013/03/31/kpk/</link><description>&lt;p&gt;Неделю назад продал почти непользованный КПК в отличном состоянии.
Отправлял обычным наложенным платежом по Беларуси. Без каких-либо особых
пометок. Был приятно удивлён, что почта из Гомеля в Минск дошла всего
где-то за 1,5 дня. Я думал, что будет как в России: 1 день идти, а потом
две недели лежать на сортировке :) Но всё же у нас работает почта на
порядок лучше.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 31 Mar 2013 15:13:03 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-31:posts/2013/03/31/kpk/</guid><category>почта</category><category>платёж</category><category>наложенный</category><category>посылка</category><category>радость</category><category>кпк</category><category>hp</category><category>отправление</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/03/30/urn:ya.ru:post/22199227/1762/</link><description>&lt;p&gt;Попробовал пакет
&lt;a class="reference external" href="https://github.com/rfk/django-supervisor"&gt;django-supervisor&lt;/a&gt;. Мне
понравилось то, что можно в конфигурацию Supervisor вставлять &lt;code class="code"&gt;
{{
переменные }}&lt;/code&gt;
 из настроек проекта, а также &lt;code class="code"&gt;
{% использовать %}&lt;/code&gt;
 все
конструкции шаблонов Django прямо в файле конфиругации Supervisor. Одно
только не знаю: как себя поведёт данный пакет, если в конфигурационном
файле используется include. Теперь достаточно легко запустить и
задеплоить всю необходимую связку сервисов для проекта:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-go"&gt;./manage.py supervisor -d&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; и Supervisord запущен
&lt;span class="pgcss-go"&gt;./manage.py supervisor shell&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; и мы уже в консоли управление supervisor-процессами
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Запуск консоли по управлению процессами я добавил в fabric, теперь я
могу просто сделать локально “fab processes” и попадаю в консоль на
удалённом сервере и могу управлять его сервисами, т.к. это fabric, то
если потребуется, то я смогу легко провернуть такую же схему даже для N
серверов. Просто добавлю пару команд, которые будут рассылаться в
управляющие элементы Supervisor. А вообще мой fabric.py сейчас выглядит
вот так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;fabric.api&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;fabric.colors&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt;

&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;hosts&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;myhost:12345&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;directory&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;/service/path&amp;#39;&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;command&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;with&lt;/span&gt; &lt;span class="pgcss-n"&gt;cd&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;directory&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;sudo&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;source /service/path/virtualenv/bin/activate&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39; &amp;amp;&amp;amp; &amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;command&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;processes&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;./manage.py supervisor shell&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;restart&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;yellow&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Reloading ...&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;sudo&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;touch /etc/uwsgi.d/project.ini&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;   &lt;span class="pgcss-c"&gt;# reload uwsgi as root&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;deps&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;pip install -r req.txt&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;push&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;should_restart&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;update_deps&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;green&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Pushing live ...&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;local&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;git push origin master&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;with&lt;/span&gt; &lt;span class="pgcss-n"&gt;cd&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;directory&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;with&lt;/span&gt; &lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sudo_user&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;sudo&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;git pull&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;update_deps&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;deps&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;./manage.py syncdb&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;should_restart&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;restart&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Под надзор супервизора я отдал небольшой (который будет большим
попозже) RPC-сервис на основе фреймворка
&lt;a class="reference external" href="https://github.com/tomerfiliba/rpyc"&gt;rpyc&lt;/a&gt;. Хорошая, простая,
достаточно безопасная библиотека RPC с бинарным протоколом. Всё отлично
передаётся, по умолчанию разрешены только методы, атрибуты и классы с
префиксом &lt;code class="code"&gt;
exposed_&lt;/code&gt;
, но есть возможность указать в конфигурации
соединения, что разрешены все public поля. Указывается отдельно как для
сервера, так и для клиента. Всё передаётся на клиент прозрачно, создать
объект соединяющийся с сервером легко. Есть возможность авторизации по
SSL-ключу. Я использую не режим по умолчанию, а режим с запуском с
указанием конкретного класса в качестве сервиса.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 30 Mar 2013 01:48:29 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-30:posts/2013/03/30/urn:ya.ru:post/22199227/1762/</guid><category>supervisor</category><category>сервис</category><category>django-supervisor</category><category>RPC</category><category>supervisord</category><category>rpyc</category><category>fabric</category><category>запуск</category></item><item><title>Баг в Spyne</title><link>http://imdagger.github.io/posts/2013/03/29/bag-v-spyne/</link><description>&lt;p&gt;Нашёл неприятную ошибку в последней версии
&lt;a class="reference external" href="https://github.com/arskom/spyne"&gt;spyne&lt;/a&gt;, из-за которой все протоколы
опирающиеся на HierDictDocument класс, а это: JSON, YAML, MessagePack
неправильно трактуют как десериализовать результат выполнения функции,
если использовать внутренний клиентский модуль из пакета spryne:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;spyne.client.http&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;services&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;main&lt;/span&gt;
&lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;spyne&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;client&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;http&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;HttpClient&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;http://localhost:7789&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;main&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;server&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;service&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;say_hello&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Word&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;5&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-c"&gt;# ...&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# где main.server это объект приложения с описанием сервисов:&lt;/span&gt;

&lt;span class="pgcss-n"&gt;server&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;Application&lt;/span&gt;&lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;HelloServiceClass&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;tns&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;example.hello&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;in_protocol&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;JSONDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;validator&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;soft&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;out_protocol&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;JSONDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В случае JSON print выведет просто None, хотя должен был вывести
объект генератора. А всё потому, что библиотека пробует десериализовать
свой собственный ответ тем же способом, что и входящие сообщения
разбирает, а это не совсем корректно или там не дописан код. А вот
протокол XMLDocument опирается на другой класс и не имеет такой
проблемы. Поэтому пока буду использовать его, а позже попробую исправить
ошибки библиотеки.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 29 Mar 2013 03:23:48 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-29:posts/2013/03/29/bag-v-spyne/</guid><category>python</category><category>spyne</category><category>JSON</category><category>работа</category><category>ошибка</category></item><item><title>Закат</title><link>http://imdagger.github.io/posts/2013/03/26/sundown-prudok/</link><description>&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/565206"&gt;&lt;img alt="ALIM2646.JPG" src="http://img-fotki.yandex.ru/get/4135/22199227.a/0_89fd6_89978746_L" title="ALIM2646.JPG"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class="row photo-item"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/565209"&gt;&lt;img alt="Заголовок" src="http://img-fotki.yandex.ru/get/6433/22199227.a/0_89fd9_74dff457_L" title="Заголовок"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Вид в сторону старинных конюшен и заводов.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 26 Mar 2013 20:39:28 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-26:posts/2013/03/26/sundown-prudok/</guid><category>солнце</category><category>панорама</category><category>закат</category><category>небо</category><category>Гомель</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/03/22/urn:ya.ru:post/22199227/1759/</link><description>&lt;p&gt;коворкинг на кухне&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 22 Mar 2013 00:06:06 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-22:posts/2013/03/22/urn:ya.ru:post/22199227/1759/</guid></item><item><title>Нередактируемое содержимое</title><link>http://imdagger.github.io/posts/2013/03/20/neredaktiruemoe-soderzhimoe/</link><description>&lt;p&gt;Всё же нашёл как можно сделать нормально блокировку редактирования в
TinyMCE. И так, чтобы можно было включать/выключать такой режим для
редактора:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-c1"&gt;// включаем блокировку, some_var_editor -- переменная содержащая TinyMCE-объект редактора&lt;/span&gt;
&lt;span class="pgcss-nx"&gt;some_var_editor&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;getBody&lt;/span&gt;&lt;span class="pgcss-p"&gt;().&lt;/span&gt;&lt;span class="pgcss-nx"&gt;setAttribute&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s1"&gt;&amp;#39;contenteditable&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-kc"&gt;true&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;span class="pgcss-c1"&gt;// выключаем&lt;/span&gt;
&lt;span class="pgcss-nx"&gt;some_var_editor&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;getBody&lt;/span&gt;&lt;span class="pgcss-p"&gt;().&lt;/span&gt;&lt;span class="pgcss-nx"&gt;setAttribute&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s1"&gt;&amp;#39;contenteditable&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-kc"&gt;true&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 20 Mar 2013 01:42:43 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-20:posts/2013/03/20/neredaktiruemoe-soderzhimoe/</guid><category>редактор</category><category>чтение</category><category>режим</category><category>переключение</category><category>только</category><category>редактирование</category><category>tinymce</category></item><item><title>Восстановление операций по матрице Левенштейна</title><link>http://imdagger.github.io/posts/2013/03/14/vosstanovlenie-operatsii-po-matritse-levenshteina/</link><description>&lt;p&gt;Хорошо с примером разъяснено в ответе по ссылке, как это сделать.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 14 Mar 2013 16:41:04 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-14:posts/2013/03/14/vosstanovlenie-operatsii-po-matritse-levenshteina/</guid><category>последовательность</category><category>дистанция</category><category>Левеншнейн</category><category>преобразование</category><category>операции</category><category>модификация</category></item><item><title>Расширение базовых классов в CPython</title><link>http://imdagger.github.io/posts/2013/03/13/rasshirenie-bazovykh-klassov-v-cpython/</link><description>&lt;p&gt;В Python, в классической реализации CPython не предусмотрено расширение
базовых классов типа: &lt;code class="code"&gt;
type&lt;/code&gt;
, &lt;code class="code"&gt;
int&lt;/code&gt;
, &lt;code class="code"&gt;
str&lt;/code&gt;
, &lt;code class="code"&gt;
dict&lt;/code&gt;
 и т.д., из соображений
производительности и засорения базовых классов. Но если очень хочется,
то пару хаков и можно за счёт модификации структуры в рабочем
python-процессе разрешить такой функционал (так сделал хакер Lincoln de
Sousa &lt;a class="reference external" href="https://github.com/clarete/"&gt;https://github.com/clarete/&lt;/a&gt; ), достаточно посредством ctypes, и
доступного pythonapi в нём, вызвать внутренний метод и пропатчить
базовый класс налету. И тогда можно делать такие штуки (пример из
библиотеки &lt;a class="reference external" href="https://github.com/gabrielfalcao/sure"&gt;https://github.com/gabrielfalcao/sure&lt;/a&gt; для тестов):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;}&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;does&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;have&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;being&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;with_value&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;equal&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вообще такое расширение будет работать на страх и риск того, кто
использует. Не знаю как на такие трюки отреарировал бы gevent, uwsgi или
ещё какие библиотеки, которые работают непосредственно с интерпретатором
на низком уровне.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 13 Mar 2013 02:36:22 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-13:posts/2013/03/13/rasshirenie-bazovykh-klassov-v-cpython/</guid><category>патч</category><category>type</category><category>python</category><category>класс</category><category>int</category><category>базовый</category><category>str</category><category>модификация</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/03/12/urn:ya.ru:post/22199227/1753/</link><description>&lt;p&gt;новый ритм&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 12 Mar 2013 01:57:54 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-12:posts/2013/03/12/urn:ya.ru:post/22199227/1753/</guid></item><item><title>Множество файлов в Zip архиве</title><link>http://imdagger.github.io/posts/2013/03/12/mnozhestvo-failov-v-zip-arkhive/</link><description>&lt;p&gt;Как скопировать 100, 200, 500 файлов из небольшого архива (и
заархивировать нужные) не секрет, можно распаковать, выбрать файлы,
например, по расширению, а затем запаковать выбранные.&lt;/p&gt;
&lt;p&gt;А что если у нас 400000 мелких файлов? Хотя это &lt;strong&gt;тоже не секрет&lt;/strong&gt;,
в стандартном мануале по утилите zip есть и для этого решение:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; выбираем только html файлы в старом и копируем их в новый архив
&lt;span class="pgcss-gp"&gt;imdagger@thug-machine$&lt;/span&gt; zip БольшойФайл.zip &lt;span class="pgcss-s2"&gt;&amp;quot;*.html&amp;quot;&lt;/span&gt; --copy --out ТолькоВыбранные.zip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;На моём нетбуке копирование файлов и архива в 1,5GiB заняло не
дольше нескольких минут, а их там было сотни тысяч.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 12 Mar 2013 01:56:35 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-12:posts/2013/03/12/mnozhestvo-failov-v-zip-arkhive/</guid><category>много</category><category>zip</category><category>архив</category><category>файлы</category><category>копирование</category></item><item><title>Game Closure DevKit</title><link>http://imdagger.github.io/posts/2013/03/09/game-closure-devkit/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Интересная штука, и на JavaScript + HTML5, на компе бегает шустро,
на телефоне не пробовал, но говорят, что тоже будет быстро. И в примере
их собственная игра на Android имеет порядка 7 тыс. отличных оценок и
сотни тысяч закачек, видимо не лагает. Хотя для меня немного
удивительно, т.к. я опирался в своих ожиданиях на статистику поддержки
WebGL в мобильных устройствах на 2012 год.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 09 Mar 2013 23:56:26 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-09:posts/2013/03/09/game-closure-devkit/</guid><category>программирование</category><category>javascript</category><category>создание</category><category>HTML5</category><category>игры</category><category>движок</category></item><item><title>Провозился с nginx</title><link>http://imdagger.github.io/posts/2013/03/07/provozilsia-s-nginx/</link><description>&lt;p&gt;Хотя провозился это мягко сказано, плясал как мог, пытался понять
почему загрузка файлов не идёт дальше ~1.7 мегабайт, причём Firefox
отрапортовал, что он 2 раза пытался что-то загрузить (даже байты
передавал), но потом соединение пропало. Вот curl благо прояснил
ситуацию, там на самом деле была просто ошибка 413, а браузеры на ней
тупят. А она гласила, что я лью слишком большой файл.&lt;/p&gt;
&lt;p&gt;И тут поехали, я прописываю всякие опции, и max_client_body_size и
время соединений поднимаю. А нет, не прокатывает ничего. Обновил nginx
до 1.2.7, ситуация повторяется, но… потом я решил глянуть, что на этот
раз curl ответил детальнее, а там nginx 1.0.15.&lt;/p&gt;
&lt;p&gt;А тут я вспоминаю, что я в openvz контейнере и надо мной ещё один
nginx проксирует :) И доступа у меня туда нет. Нужно было сразу подумать
над этим вариантом, но я его почему-то отметал, а он самый очевидный, и
потратил часа 4,5 на всё про всё.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 07 Mar 2013 01:47:12 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-07:posts/2013/03/07/provozilsia-s-nginx/</guid><category>проблема</category><category>невнимательность</category><category>файл</category><category>заливка</category><category>Я</category><category>nginx</category></item><item><title>Бюджетный VPS</title><link>http://imdagger.github.io/posts/2013/03/03/biudzhetnyi-vps/</link><description>&lt;p&gt;Обзавёлся тут для своих целей машинкой с 128Mib RAM всего за $15 в год.
Там можно взять и 1Gib за $5 месяц, что неплохо, если требуется держать
несколько средних сервисов для внутренних нужд.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 03 Mar 2013 02:42:04 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-03:posts/2013/03/03/biudzhetnyi-vps/</guid><category>дёшево</category><category>vps</category></item><item><title>Запуск celery для нескольких очередей</title><link>http://imdagger.github.io/posts/2013/03/01/zapusk-celery-dlia-neskolkikh-ocheredei/</link><description>&lt;p&gt;Оказывается можно запустить удобным способом различные celery узлы
всего одной командой и с указанием очередей и конкуренции воркеров для
этой очереди:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;celeryd_multi start &lt;strong&gt;global&lt;/strong&gt; &lt;strong&gt;single&lt;/strong&gt; -Q:&lt;strong&gt;global&lt;/strong&gt; default
-Q:&lt;strong&gt;single&lt;/strong&gt; import -c:&lt;strong&gt;single&lt;/strong&gt; 1 --loglevel=INFO
--pidfile=/var/run/celery/${USER}-%n.pid
--logfile=/var/log/celery/${USER}-%n.log&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;и вариант для Django:&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;./manage.py&lt;/strong&gt; celeryd_multi start global single -Q:global default
-Q:single import -c:single 1 --loglevel=INFO
--pidfile=/var/run/celery/${USER}-%n.pid
--logfile=/var/log/celery/${USER}-%n.log&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;start global single указывает, что мне нужны два узла Celery с
именами &lt;em&gt;global&lt;/em&gt; и &lt;em&gt;single&lt;/em&gt; (Celery сам добавит доменную часть, эти
имена лишь поддомены). Затем &lt;em&gt;-Q:global default&lt;/em&gt; указывает, что global
узел будет обрабатывать все события по умолчанию (т.е. для которых не
была указана очередь явно). А вот для узла &lt;em&gt;single&lt;/em&gt; прописано &lt;em&gt;-Q:single
import -c:single 1&lt;/em&gt;, и это значит, что очередь будет для него
специфическая (у меня она называется &lt;em&gt;import&lt;/em&gt;, но можно любое имя
использовать) и что самое важное: уровень конкуренции для этого узла
всего 1, т.е. никакие 2 комманды не будут выполняться параллельно, что
мне и требовалось для заданий импорта в базу данных.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Всё честно взято и адаптировано под мои нужды
&lt;a class="reference external" href="http://stackoverflow.com/a/5477095"&gt;отсюда&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 01 Mar 2013 03:57:59 +0300</pubDate><guid>tag:imdagger.github.io,2013-03-01:posts/2013/03/01/zapusk-celery-dlia-neskolkikh-ocheredei/</guid><category>Celery</category><category>удобство</category><category>запуск</category><category>один</category><category>конкуренция</category><category>очереди</category></item><item><title>djkombu и MySQL</title><link>http://imdagger.github.io/posts/2013/02/27/djkombu-i-mysql/</link><description>&lt;p&gt;Чтобы Celery нормально обрабатывал задачи из MySQL (да я знаю, что
лучше использовать другой брокер для этой задачи и держать, например, их
хотя бы в Redis) пришлось добавить пару строчек для инициализации MySQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;DATABASES&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-err"&gt;…&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;init_command&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# for the Celery&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;},&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;После этого он стал получать задачи как положено, а не только после
каждого перезапуска worker’а.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 27 Feb 2013 01:56:21 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-27:posts/2013/02/27/djkombu-i-mysql/</guid><category>Celery</category><category>python</category><category>задача</category><category>djkombu</category><category>зависает</category><category>MySQL</category><category>не работает</category><category>брокер</category></item><item><title>Pip и установка из git-репозитория</title><link>http://imdagger.github.io/posts/2013/02/27/pip-i-ustanovka-iz-git-repozitoriia/</link><description>&lt;p&gt;Утилита pip позволяет легко установить конкретную ревизию из
git-репозитория, достаточно добавить к ссылке &amp;#64;sha1-номер-коммита:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-go"&gt;pip install git+git://github.com/jtauber/django-mailer.git@840d25bb9db9fbc80&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 27 Feb 2013 01:48:54 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-27:posts/2013/02/27/pip-i-ustanovka-iz-git-repozitoriia/</guid><category>pip</category><category>python</category><category>ревизия</category><category>установка</category><category>git</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/02/27/urn:ya.ru:post/22199227/1744/</link><description>&lt;p&gt;нездоровится что-то :/&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 27 Feb 2013 01:45:34 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-27:posts/2013/02/27/urn:ya.ru:post/22199227/1744/</guid></item><item><title>Разбиение текста на слова</title><link>http://imdagger.github.io/posts/2013/02/22/razbienie-teksta-na-slova/</link><description>&lt;p&gt;Сначала я реализовал черновой вариант с использованием стандартной
библиотеки unicodedata и прохода по символам текста:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;unicodedata&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;clean_and_split&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;stop_words&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;words&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;u&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;lower&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;cname&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;unicodedata&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;category&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;letter&lt;/span&gt;&lt;span class="pgcss-p"&gt;)[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;cname&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-o"&gt;!=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;words&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;])&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;words&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;append&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;u&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;elif&lt;/span&gt; &lt;span class="pgcss-n"&gt;cname&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# don&amp;#39;t distinguish letter E and E-with-dots&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;u&amp;#39;ё&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;u&amp;#39;е&amp;#39;&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;words&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но профайлер показывал, что это вторая функция по ресурсам после
базы данных в коде. Поэтому пришлось подумать и переделать это всё в
более короткий алгоритм. Я чувствовал, что всё это стоит записать
каким-нибудь регулярным выражением, т.к. регулярные выражения
преобразуются в конечный автомат, который будет работать быстро.
Оказалось, что стандартная библиотека &lt;strong&gt;re&lt;/strong&gt; дружит с Unicode, но
немного не тем боком, что мне нужно. Т.к. я хочу выделить в тексте
только слова из букв (с запасом того, что мне может потребоваться
расширить это условие), выбросив все знаки препинания, цифры и т.д.
Оказалось, что библиотека regex из PyPi как раз то, что нужно:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;regex&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# minimal word length is 3 (last letter of word can&amp;#39;t be dash)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;SPLITTER&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;regex&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;compile&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;ur&amp;#39;[\p{L}-]{2,}[\p{L}]&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;clean_and_split&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;stop_words&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# тут ещё не хватает проверки stop_words, но добавить её не сложно&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;SPLITTER&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;findall&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;lower&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;replace&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;u&amp;#39;ё&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;u&amp;#39;е&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Главное не забыть указать префиксы строки &lt;strong&gt;ur&lt;/strong&gt; для регулярного
выражения. Т.е. важно не забыть прописать перфикс юникода, иначе \p{…}
не будет работать как следует. В результате этот участок кода ускорился
от 8 до 10 раз.&lt;/p&gt;
&lt;p&gt;Потом мне ещё потребовалось узнать в каких позициях стояли слова, но
это было уже без особых проблем, достаточно использовать finditer метод
объекта скомпилированного регулярного выражения:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;match&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;SPLITTER&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;finditer&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some_text&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;match&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;group&lt;/span&gt;&lt;span class="pgcss-p"&gt;(),&lt;/span&gt; &lt;span class="pgcss-n"&gt;match&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;start&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вообще это всё нужно, чтобы разделить текст, выбросить лишние слова
и затем можно уже строить шинглы по нему.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 22 Feb 2013 03:59:40 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-22:posts/2013/02/22/razbienie-teksta-na-slova/</guid><category>программирование</category><category>текст</category><category>слово</category><category>python</category><category>разбиение</category><category>русский</category><category>unicode</category><category>regex</category><category>шинглы</category></item><item><title>Steam и Linux</title><link>http://imdagger.github.io/posts/2013/02/17/steam-i-linux/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Пришлось для сабжа даже WebMoney завести, т.к. мой PayPal прописан
на другую страну, а Visa Virtuon почему-то отказывался Steam принимать.
Обзавёлся я World of Goo и Counter-Strike: Source, последний правда с
моим пингом немного подлагивал на том сервере куда я подключился и
настройки графики ещё пришлось чуть снизить, т.к. мой Ion всё же не
такой монстр (это же нетбук для работы, а не шпилить днями). Завелось
всё замечательно, спасибо Valve. Убрал Ironhide и поставил Bumblebee +
primus. Из-за Ironhide я думал, что Steam-у нужно положить симлинк на
32-битную графическую библиотеку GL, но оказалось, что он только мешал +
Steam думал, что у меня OpenGL только 1.4 и карточка Intel. А уже после
старта “primusrun steam” и обновления дравера NVidia до 304, у Steam
сомнения отпали и он признал мою вторую видеокарту.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Особо я не играю, но World of Goo игра клёвая и мне хотелось
поддержать их, а CS это всё же какая-никакая дань моим воспоминаниям из
прошлого. Заодно и самой Valve помог, тем что повёлся установить их
систему цифровой дистрибуции.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 17 Feb 2013 03:13:56 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-17:posts/2013/02/17/steam-i-linux/</guid><category>primus</category><category>steam</category><category>linux</category><category>optimus</category><category>радость</category><category>игры</category></item><item><title>Странное поведение lxml.html</title><link>http://imdagger.github.io/posts/2013/02/09/strannoe-povedenie-lxmlhtml/</link><description>&lt;p&gt;Столкнулся с тем, что не очень валидные с точки зрения стандарта и
логики кусочек HTML обрабатывается неоднозначно при помощи lxml.html.
Браузеры без проблем его переваривают, BeautifulSoup тоже, и некоторые
другие парсеры:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;lxml.html&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;lxml.html.soupparser&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;tostring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt; \
&lt;span class="pgcss-go"&gt;                         &amp;#39;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;))&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;tostring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;soupparser&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;#39;&lt;/span&gt; \
&lt;span class="pgcss-go"&gt;           &amp;#39;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;))&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Сразу видно, что lxml.html отделил &amp;lt;table&amp;gt; от &amp;lt;a&amp;gt;, оно то конечно и
правильно, если бы я не столкнулся с такой разметкой на одном реальном
сайте + для других похожих ситуаций оно себя тоже ведёт немного странно.
Всё бы ничего, в DTD же прописано, что в &amp;lt;a&amp;gt; не стоит пихать &amp;lt;table&amp;gt;, но
туда и &amp;lt;div&amp;gt; пихать не стоит, но:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;tostring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;#39;&lt;/span&gt; \
&lt;span class="pgcss-go"&gt;            &amp;#39;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;div&amp;gt;Text&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;))&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;div&amp;gt;Text&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Всё же что-то не так, т.к. библиотеке нужно определиться: либо всё
выносить из тега ссылки, что не является разрешённым, либо обрабатывать
случай &lt;code class="code"&gt;
&amp;lt;table&amp;gt;&lt;/code&gt;
. Но не вести себя по разному.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 09 Feb 2013 01:58:20 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-09:posts/2013/02/09/strannoe-povedenie-lxmlhtml/</guid><category>странное поведение</category><category>HTML</category><category>поведение</category><category>python</category><category>отклонение</category><category>lxml</category></item><item><title>Бесконечная блокировка</title><link>http://imdagger.github.io/posts/2013/02/05/beskonechnaia-blokirovka/</link><description>&lt;p&gt;Как получить ситуацию, что gevent выдаст исключение о бесконечно
блокирующейся операции? Сделать бесконечный цикл? Нет. Достаточно, чтобы
операция сама себя ожидала, но как это сделать неявным образом, чтобы
пример не был высосан из пальца и был похож на настоящую ситуацию.
Достаточно просто.&lt;/p&gt;
&lt;p&gt;Допустим есть потребность выполнять какую-то операцию (например
краулинг и парсинг страниц) в ограниченном количестве параллельных
потоком. Мы берём для этого пул с ограниченным размером. Затем для
каждой страницы мы хотим порождать отдельный поток (т.к. микропотоки
достаточно дешёвые), мы пишем что-то типа такого:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;p&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;gevent&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;pool&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Pool&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;10&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;_&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;5&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;      &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;spawn&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;task&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;&lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;join&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Затем реализуем задачу task, в ней будут выполняться какие-то
операции над полученными данными, например, извлекаться новые ссылки, и
будет происходить порождение новых микропотоков. Но мы же хотим, чтобы
конкуренция не разрасталась, поэтому решаем складывать задачи единый
пул.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;sub_task&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-go"&gt;        p.spawn(lambda: i)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;task&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;_&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;        &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;spawn&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sub_task&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Таким образом каждый task создаёт ещё по 4 sub_task. Когда
структура программы не такая простая и голая, а напичкана различной
дополнительной логикой, то кажется, что всё хорошо. Но увы программа
начинает себя странно вести от раза к разу. И поведение меняется от
количества операция и размера пула.&lt;/p&gt;
&lt;p&gt;В версии gevent 0.13.8 всё просто замолкает, зависает и крутится в
цикле. Но благо 1.0dev умеет определять эту проблемную точку и выдавать
исключение:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gt"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;test.py&amp;quot;, line 14, in&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    p.join()&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;/home/imdagger/Projects/bj-project/virtualenv/pg/local/lib/python2.7/site-packages/gevent/pool.py&amp;quot;, line 100, in join&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    self._empty_event.wait(timeout=timeout)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;/home/imdagger/Projects/bj-project/virtualenv/pg/local/lib/python2.7/site-packages/gevent/event.py&amp;quot;, line 77, in wait&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    result = self.hub.switch()&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;/home/imdagger/Projects/bj-project/virtualenv/pg/local/lib/python2.7/site-packages/gevent/hub.py&amp;quot;, line 331, in switch&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    return greenlet.switch(self)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;gevent.hub.LoopExit&lt;/span&gt;: &lt;span class="pgcss-n"&gt;This operation would block forever&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;А всё потому, что некоторая задача task нуждается в добавлении в пул
подзадачи sub_task, которая тоже нуждается в пуле, а сам пул нуждается
в завершении задачи task, т.к. он достиг размера 10 и переполнен. и с
другими задачами аналогично, т.е. пул переполнен и ждёт освобождения, а
задачи, чтобы завершится пытаются в него затолкнуть ещё больше подзадач.&lt;/p&gt;
&lt;p&gt;Поэтому для выхода из такой ситуации лучше обойтись либо только task
без вызова ещё одной поздадачи со spawn, а лучше вообще закидывать
подзадачи в очередь, а другой поток (или несколько), будут забирать их,
обрабатывать данные и укладывать в пул.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Tue, 05 Feb 2013 23:43:08 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-05:posts/2013/02/05/beskonechnaia-blokirovka/</guid><category>пул</category><category>неявный</category><category>pool</category><category>блокировка</category><category>gevent</category><category>python</category></item><item><title>Странности MongoEngine</title><link>http://imdagger.github.io/posts/2013/02/01/strannosti-mongoengine/</link><description>&lt;p&gt;Странно, но в Mongoengine MapField внутри другого MapField ведёт
себя немного неожиданно. Не знаю, так задумано или это ошибка (спрошу у
них попозже), но если сделать вот так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;EmbeddedDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;num&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;IntField&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Document&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;my_field&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;MapField&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;MapField&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;EmbeddedDocumentField&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;SomeSubModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;То всё будет работать, но как только мы захотим получить документ и
произвести правку в поле num начнётся самое интересное:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;object&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;my_field&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;][&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;num&lt;/span&gt;
&lt;span class="pgcss-go"&gt;9&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;my_field&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;][&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;num&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;10&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;save&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;span class="pgcss-go"&gt;# и снова&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;object&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;my_field&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;][&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;num&lt;/span&gt;
&lt;span class="pgcss-go"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;И он ни в какую не хочет сохранять. Хотя можно провернуть трюк с
update, но это только для такой простой модели, а если там ещё уровень
вложенности, то уже и update не помогает. А всё почему?&lt;/p&gt;
&lt;p&gt;А потому, что это заложено в поведение &lt;code class="code"&gt;
 _get _changed _fields&lt;/code&gt;
 в
base.BaseDocument у библиотеки, ошибка это или нет, но:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
         &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;field_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;field_list&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;

            &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_db_field_map&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;field_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;key&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;.&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;field&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_data&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;id&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-k"&gt;continue&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;add&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;isinstance&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;EmbeddedDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;DynamicEmbeddedDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
               &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                 &lt;span class="pgcss-c"&gt;# Find all embedded fields that have been changed&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_get_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;elif&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;isinstance&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;list&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;tuple&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;dict&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# Loop list / dict fields as they contain documents&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# Determine the iterator to use&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;items&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;iterator&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;enumerate&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;else&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;iterator&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;iteritems&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;index&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;iterator&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;value&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;_get_changed_fields&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                        &lt;span class="pgcss-k"&gt;continue&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;list_key&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;.&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;index&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;value&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_get_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;list_key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;list_key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                                        &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Так вот в том месте, где метод проверяет являются ли данные
связанные с полем словарём или списком, есть некоторая неточность в
поведении. Для нашего случае получается словарь в словаре, если бы это
был просто встроенных документ в словаре, то всё было бы хорошо. Но нет,
у нас словарь в словаре, в котором документ, поэтому оно проверяет наш
словарик на наличие специального метода (именно такого, в котором мы
находимся):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;value&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;_get_changed_fields&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Естественно он его не находит, это же простой словарь! И
соответственно не подхватывает изменения из вложенного документа. Выход?
Переработать структуру и сделать поля фиксированные, а не два словаря,
или поправить код, чтобы он переварил такой случай и углублялся в
словарь или ещё один вариант: попробовать сделать имя полю
комбинированное через точку (вида 'key1.key2'). Хотя mongoengine стоило
бы предупредить про такие странности.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 01 Feb 2013 00:27:47 +0300</pubDate><guid>tag:imdagger.github.io,2013-02-01:posts/2013/02/01/strannosti-mongoengine/</guid><category>ошибка</category><category>уровень</category><category>словарь</category><category>странное поведение</category><category>MongoEngine</category><category>документ</category><category>вложенный</category><category>поведение</category><category>поле</category><category>python</category><category>программирование</category></item><item><title>Bootstrap кнопка отправки</title><link>http://imdagger.github.io/posts/2013/01/18/bootstrap-knopka-otpravki/</link><description>&lt;p&gt;Как сделать кнопку отправки формы с использованием Bootstrap,
которая не позволит сработать ей дважды во время самой отправки? Можно
воспользоваться data-loading-text аттрибутом, и не стоит забывать про
&lt;code class="code"&gt;
autocomplete=&amp;quot;off&amp;quot;&lt;/code&gt;
, чтобы Firefox не запоминал состояние кнопки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="pgcss-na"&gt;type=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;class=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;btn btn-success&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;name=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;data-loading-text=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;Выполнение...&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;onclick=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;$(this).button(&amp;#39;loading&amp;#39;); return true;&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;autocomplete=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class="pgcss-nt"&gt;&amp;gt;&lt;/span&gt;
        Подключить!
&lt;span class="pgcss-nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В обработчике onclick происходит переключение кнопки в состояние
loading, которое берёт текст из &lt;code class="code"&gt;
data-loading-text&lt;/code&gt;
 атрибута. Атрибуты с
префиксом &lt;code class="code"&gt;
data-&lt;/code&gt;
 современными браузерами (ибо положено по стандарту) не
считаются неправильными, а большинство старый браузеров должно их просто
проигнорировать и не выдавать ошибок.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 18 Jan 2013 23:23:02 +0300</pubDate><guid>tag:imdagger.github.io,2013-01-18:posts/2013/01/18/bootstrap-knopka-otpravki/</guid><category>загрузка</category><category>HTML</category><category>программирование</category><category>отправка</category><category>кнопка</category><category>bootstrap</category><category>блокировка</category></item><item><title>Удобная надстройка (и замена) для urllib2</title><link>http://imdagger.github.io/posts/2013/01/17/udobnaia-nadstroika-i-zamena-dlia-urllib2/</link><description>&lt;p&gt;Если использовать библиотеку urllib2, то можно открыть соединение,
проверить заголовки, а затем начать считывать содержимое, которое
возвращает сервер. Но urllib2 не настолько удобная и наглядная как
библиотека requests:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;requests&lt;/span&gt;
&lt;span class="pgcss-n"&gt;answer&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;http://some...url&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cookies&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;mycookie&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;x-additional-header&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но как, допустим, проверить тип содержимого и если он не подходящий
сразу закрыть соединение? Достаточно передать параметр &lt;code class="code"&gt;
stream=True&lt;/code&gt;
:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;requests&lt;/span&gt;
&lt;span class="pgcss-n"&gt;answer&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;http://some...url&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cookies&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;mycookie&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;stream&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;True&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;x-additional-header&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;startswith&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
   &lt;span class="pgcss-k"&gt;pass&lt;/span&gt; &lt;span class="pgcss-c"&gt;# в этот момент ещё не началось получение данных самой страницы&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# а вот тут уже, после обращения к text, содержимое будет готово&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# .text обращается к .content, который производит считывание только 1 раз,&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# так что всё хорошо даже второй раз&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 17 Jan 2013 03:11:51 +0300</pubDate><guid>tag:imdagger.github.io,2013-01-17:posts/2013/01/17/udobnaia-nadstroika-i-zamena-dlia-urllib2/</guid><category>программирование</category><category>чтение</category><category>библиотека</category><category>requests</category><category>HTTP</category><category>python</category></item><item><title>Поиск ссылок на странице</title><link>http://imdagger.github.io/posts/2013/01/16/poisk-ssylok-na-stranitse/</link><description>&lt;p&gt;Выбрать все ссылки со страницы можно, например, вот так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;lxml.html&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;SomeClass&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;object&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;_parse_urls&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;content&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;document&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;content&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;document&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;xpath&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;//meta[@content=&amp;quot;noindex&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# don&amp;#39;t parse links from this page&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt;

        &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;atag&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;document&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;xpath&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;//a[not(starts-with(@href, &amp;quot;#&amp;quot;))]&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;rel&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;atag&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;rel&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;all&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attr_value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;rel&lt;/span&gt; &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;attr_value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;noindex&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;nofollow&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]):&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;yield&lt;/span&gt; &lt;span class="pgcss-n"&gt;atag&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Выражение &lt;code class="code"&gt;
//meta[&amp;#64;content=&amp;quot;noindex&amp;quot;]&lt;/code&gt;
 выбирает все теги meta, у
которых атрибут content указывает, что индексация страницы нежелательна
(равен строке noindex). Можно было указать, что meta находится в head в
html, но мне было лениво .&lt;/p&gt;
&lt;p&gt;А вот &lt;a class="reference external" href="http://ru.wikipedia.org/wiki/XPath"&gt;XPath&lt;/a&gt;-выражение
&lt;code class="code"&gt;
//a[not(starts-with(&amp;#64;href, &amp;quot;#&amp;quot;))]&lt;/code&gt;
 использует функции not и starts-with;
и выбирает только теги &lt;code class="code"&gt;
&amp;lt;a&amp;gt;&lt;/code&gt;
, у которых атрибут href не начинается на #.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 16 Jan 2013 03:41:03 +0300</pubDate><guid>tag:imdagger.github.io,2013-01-16:posts/2013/01/16/poisk-ssylok-na-stranitse/</guid><category>ссылки</category><category>HTML</category><category>XPath</category><category>программирование</category><category>страницы</category><category>разбор</category></item><item><title>Венский завтрак</title><link>http://imdagger.github.io/posts/2013/01/12/venskii-zavtrak/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Купил недавно попробовать этот творожный
&lt;a class="reference external" href="http://www.belmilk.by/trademark/venskii_zavtrak"&gt;десерт&lt;/a&gt;. На вид
упаковка такая… не сильно яркая, но внутри просто чудесный вкус,
понравился даже больше чем аэро (хм.. давно его не встречал, куда он
подевался?). Особенно понравился вариант с грушей и шоколадом. У меня
теперь даже пластиковая ложка всегда с собой в кармане Жалко только, что
баночки не такие большие как хотелось бы.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 12 Jan 2013 02:50:19 +0300</pubDate><guid>tag:imdagger.github.io,2013-01-12:posts/2013/01/12/venskii-zavtrak/</guid><category>мысли</category><category>десерт</category><category>еда</category></item><item><title></title><link>http://imdagger.github.io/posts/2013/01/07/urn:ya.ru:post/22199227/1729/</link><description>&lt;p&gt;старая техника тоже достойна жизни, если решает основные потребности&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 07 Jan 2013 01:41:05 +0300</pubDate><guid>tag:imdagger.github.io,2013-01-07:posts/2013/01/07/urn:ya.ru:post/22199227/1729/</guid></item><item><title>Эмуляция мышки</title><link>http://imdagger.github.io/posts/2013/01/07/emuliatsiia-myshki/</link><description>&lt;p&gt;У старого компа уже давно накрылось несколько мышек, последняя
вообще таинственно пропала (sic сбежала, наверное). А беспроводную не
всегда есть возможность подключить, т.к. она нужна на нетбуке. Поэтому
на случай, когда я оставил нетбук в одном месте с мышкой, но не дома (а
сегодня как раз такой случай), я решил вспомнить, как заставить X-ы
эмулировать мышь. Оказалось, что в последних сборках ArchLinux эту
возможность по умолчанию отключили и мне пришлось поискать и Интернет.
Минут 5 поисков (благо я не один такой), вуаля решение уже готово:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=904880#p904880"&gt;Вариант&lt;/a&gt;
с правкой настроек&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Там же
другой &lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=1045229#p1045229"&gt;вариант&lt;/a&gt;
(сиюминутный и без перезагрузки X-ов и глобальной какой-то правки)&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;$ # вариант 2&lt;/div&gt;
&lt;div class="line"&gt;$ setxkbmap -option keypad:pointerkeys&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Второй вариант хорош, когда просто нужно проверить как оно рабтоает
вцелом. Жмём &lt;kbd class="kbd"&gt;
Shift+NumLock&lt;/kbd&gt;
 и наслаждаемся управлением мышкой через &lt;strong&gt;1,
2, 3, 4, 6, 7, 8, 9&lt;/strong&gt; стрелки и &lt;strong&gt;/ * -&lt;/strong&gt; переключение кнопок мыши, а
&lt;strong&gt;5&lt;/strong&gt; специальная, означающая нажатие выбранной кнопки.&lt;/p&gt;
&lt;p&gt;Если нужно выделить текст в браузере, чтобы скопировать, то жмём в
начале текста Shift, затем 5, затем двигаемся в другое место в тексте и
снова жмём 5, отпускаем Shift.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 07 Jan 2013 01:39:04 +0300</pubDate><guid>tag:imdagger.github.io,2013-01-07:posts/2013/01/07/emuliatsiia-myshki/</guid><category>клавиатура</category><category>мышь</category><category>Xorg</category><category>keypad</category><category>эмуляция</category></item><item><title>Новый фильм</title><link>http://imdagger.github.io/posts/2012/12/29/novyi-film/</link><description>&lt;p&gt;Качаю Minecraft: The Story of Mojang. Купил за $8 на
&lt;a class="reference external" href="http://redux.com/minecraft-movie"&gt;redux.com&lt;/a&gt;. Надеюсь будет классный
фильм, люблю смотреть фильмы про indie-разработку и жизнь других
разработчиков. Правда, чтобы купить пришлось повозиться, т.к. они
принимают только PayPal, но благо есть onliner.by и очень
полезная&amp;nbsp;&lt;a class="reference external" href="http://forum.onliner.by/viewtopic.php?t=2891475&amp;amp;start=24000"&gt;ветка&lt;/a&gt;
(спасибо автору этой ветки и всему народу там). У меня есть Visa Virtuon
от БПС и Белинвест, первую я запорол ещё когда-то (хотел самостоятельно
пройти верификацию), а вот со второй прокатило, т.к. я прочитал как
нужно правильно пройти все круги ада; пришлось внимательно читать, чтобы
и её не запороть. И спасибо Яндексу, который предоставляет разные домены
для одного и того же ящика :) и &amp;#64;yandex.by и &amp;#64;narod.ru и &amp;#64;ya.ru. Ибо
пришлось регать новый аккаунт в PayPal (не знаю: на долго ли он, может и
заблочат, деньги там держать не буду), а очень не хотелось заводить
левый ящик из-за этого.&lt;/p&gt;
&lt;p&gt;Жалко, что нельзя было оплатить Google Wallet за фильм, т.к. к нему
обе карты подключаются без каких-либо проблем, с полпинка, лишь бы $1 на
карте был.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 29 Dec 2012 02:33:11 +0300</pubDate><guid>tag:imdagger.github.io,2012-12-29:posts/2012/12/29/novyi-film/</guid><category>фильм</category><category>minecraft</category><category>paypal</category><category>visa</category><category>indie</category><category>купил</category><category>оплата</category></item><item><title>Получение информации о приложении</title><link>http://imdagger.github.io/posts/2012/12/28/poluchenie-informatsii-o-prilozhenii/</link><description>&lt;p&gt;&amp;nbsp; &amp;nbsp; Как получить информацию о Facebook-приложении по user access_token?
Достаточно отправить запрос вида:
&lt;a class="reference external" href="https://graph.facebook.com/app/?access_token=[user_access_token]"&gt;https://graph.facebook.com/app/?access_token=[user_access_token]&lt;/a&gt;
&amp;nbsp; &amp;nbsp; А затем по id из словаря можно убедится, что токен принадлежит
нашему приложению, а из /me можно узнать какому пользователю конкретно.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 28 Dec 2012 20:23:13 +0300</pubDate><guid>tag:imdagger.github.io,2012-12-28:posts/2012/12/28/poluchenie-informatsii-o-prilozhenii/</guid><category>token</category><category>facebook</category><category>приложение</category></item><item><title></title><link>http://imdagger.github.io/posts/2012/12/27/urn:ya.ru:post/22199227/1724/</link><description>&lt;p&gt;Чтобы при создание Unit-тестов и использовании стандартной
библиотеки unittests не возникало странных ситуаций при работе с
MongoDB, когда появляются внезапно провалившиеся тесты на ровном месте,
следует во время создания соединения через pymongo указать &lt;code class="code"&gt;
safe=True&lt;/code&gt;
,
чтобы каждое изменение разблокировало контекст только после ответа об
успешно применённой операции.&lt;/p&gt;
&lt;blockquote&gt;
pymongo.connection.Connection(port=config.contentserv.port,
&lt;strong&gt;safe=True&lt;/strong&gt;)&lt;/blockquote&gt;
&lt;p&gt;Иначе по-умолчанию изменения отправляются сразу в БД, и клиент не
ожидает подтверждения, что всё хорошо. Что может приводить к неполной
или несвоевременной очистке коллекций между разными тестами.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Thu, 27 Dec 2012 00:59:33 +0300</pubDate><guid>tag:imdagger.github.io,2012-12-27:posts/2012/12/27/urn:ya.ru:post/22199227/1724/</guid><category>pymongo</category><category>unittests</category><category>safe</category></item><item><title>Яркость экрана на моём нетбуке</title><link>http://imdagger.github.io/posts/2012/12/24/iarkost-ekrana-na-moiom-netbuke/</link><description>&lt;p&gt;После спящего режима экран не захотел возвращаться к максимальной
яркости на моём нетбуке. Я подумал, что накрылась подсветка. Но благо,
достаточно было сделать:&lt;/p&gt;
&lt;blockquote&gt;
sudo setpci -s 00:02.0 F4.B=99&lt;/blockquote&gt;
&lt;p&gt;Где 99 это коффициент максимальной яркости.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Mon, 24 Dec 2012 22:29:43 +0300</pubDate><guid>tag:imdagger.github.io,2012-12-24:posts/2012/12/24/iarkost-ekrana-na-moiom-netbuke/</guid><category>setpci</category><category>яркость</category><category>экран</category><category>нетбук</category></item><item><title></title><link>http://imdagger.github.io/posts/2012/12/12/urn:ya.ru:post/22199227/1720/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Поставил и на домашней и на рабочей машинке bash-completion, чтобы
быть счастливым человеком.&lt;/p&gt;
&lt;blockquote&gt;
sudo pacman -Sy &amp;amp;&amp;amp; sudo pacman -S bash-completion&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Теперь и аргументы и параметры многих команд дополняются по TAB.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 12 Dec 2012 15:01:32 +0300</pubDate><guid>tag:imdagger.github.io,2012-12-12:posts/2012/12/12/urn:ya.ru:post/22199227/1720/</guid><category>дополнение</category><category>радость</category><category>bash</category></item><item><title>Бот ботаня</title><link>http://imdagger.github.io/posts/2012/11/30/bot-botania/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Подготовил бота для игры, которую мы скоро релизнем. Можно будет
произвести рассылку от компании, что игра готова и некоторое количество
пользователей откликнется. Вот для них я и подготовил бота для игры в
специфическую версию морского боя, играет он достаточно не плохо, по
поведению похож на человека, что мне и требовалось. Это позволит
удержать на 5-10 пришедшего потенциального игрока, а это в свою очередь
даст возможность ему пересечься не только с ботами, но и с другими
игроками. При чём бот себя никак выдавать не будет, т.к. ему будет
предоставлен настоящий Facebook аккаунт, у него будет настоящий
владелец, фотография, имя и т.д.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Вкратце он работает так:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;смотрит все игры, которые нужно принять и отправляет в них accept&lt;/li&gt;
&lt;li&gt;просматривает игры, где его ход и пробует в ней сделать некоторые
операции, а именно:&lt;/li&gt;
&lt;li&gt;покупает защиты кораблей на все деньги&lt;/li&gt;
&lt;li&gt;защищает 1 точку с вероятностью 0.6 за ход&lt;/li&gt;
&lt;li&gt;пробует уничтожить найденную защиту с вероятностью 0.8&lt;/li&gt;
&lt;li&gt;если нет интересных клеток или просто с вероятностью 0.05 делает
случайных ход, но только в предсказанную свободную клетку (таковыми
точно &lt;strong&gt;не&lt;/strong&gt; являются клетки под кораблями, вокруг них и вокруг
выбитых клеток, которые имеют два прострелянных соседа)&lt;/li&gt;
&lt;li&gt;ищет клетки, которые имеют только одного прострелянного соседа, но
точно не известно есть ли продолжение корабля на противоположной
стороне от соседа&lt;/li&gt;
&lt;li&gt;из полученного списка интересных клеток производится осмотр вокруг
них&lt;/li&gt;
&lt;li&gt;случайно выбирается клетка из потенциально содержащих букву корабля
(ага это не простой морской бой), которые были определены ранее&lt;/li&gt;
&lt;li&gt;завершает сыгранные игры: проигранные или выигранные&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 30 Nov 2012 23:45:56 +0300</pubDate><guid>tag:imdagger.github.io,2012-11-30:posts/2012/11/30/bot-botania/</guid><category>бот</category><category>бой</category><category>морской</category></item><item><title></title><link>http://imdagger.github.io/posts/2012/11/21/urn:ya.ru:post/22199227/1718/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nb"&gt;export &lt;/span&gt;&lt;span class="pgcss-nv"&gt;PYTHONIOENCODING&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;utf-8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;То, что нужно чтобы UTF-8 вывод работал для Python 2.7.1+ даже, если к
пайпу подключён less.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 21 Nov 2012 21:45:46 +0300</pubDate><guid>tag:imdagger.github.io,2012-11-21:posts/2012/11/21/urn:ya.ru:post/22199227/1718/</guid><category>вывод</category><category>python</category><category>UTF-8</category></item><item><title></title><link>http://imdagger.github.io/posts/2012/11/17/urn:ya.ru:post/22199227/1715/</link><description>&lt;p&gt;релизнулись, осталось недочёты допилить&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sat, 17 Nov 2012 02:49:09 +0300</pubDate><guid>tag:imdagger.github.io,2012-11-17:posts/2012/11/17/urn:ya.ru:post/22199227/1715/</guid></item><item><title></title><link>http://imdagger.github.io/posts/2012/11/14/urn:ya.ru:post/22199227/1713/</link><description>&lt;p&gt;Недавно прошёл Machinarium, занятный квест и добрый, приятный стиль.
В нескольких местах сильно затупил, что пришлось пользоваться полной
подсказкой: не мог понять как заставить ворону упасть с висящего кабеля,
не догадался, что нужно повторить услышанную мелодию, чтобы лестница
разблокировалась и затупил с тем, как связать две батарейки вместе (не
обратил внимание, что робот-старик бросил бинт на землю). Может
как-нибудь, если будет время, то куплю ещё игру Botanicula от Amanita
Design (таже студия). Мне нравится их подход к созданию игр.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Wed, 14 Nov 2012 20:16:09 +0300</pubDate><guid>tag:imdagger.github.io,2012-11-14:posts/2012/11/14/urn:ya.ru:post/22199227/1713/</guid><category>игра</category><category>прошёл</category><category>впечатление</category><category>Machinarium</category><category>квест</category></item><item><title></title><link>http://imdagger.github.io/posts/2012/11/11/urn:ya.ru:post/22199227/1711/</link><description>&lt;p&gt;Купил Indie Humble Bundle for Android 4. Теперь у меня есть
лицензионные, без какой-либо защиты игры (под любые платформы, я уже
поставил на телефон и под GNU/Linux):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Machinarium&lt;/li&gt;
&lt;li&gt;Splice&lt;/li&gt;
&lt;li&gt;Superbrothers: Sword &amp;amp; Sworcery EP&lt;/li&gt;
&lt;li&gt;Waking Mars&lt;/li&gt;
&lt;li&gt;Eufloria (забавная игра про планетки и семена, и войны между ними)&lt;/li&gt;
&lt;li&gt;Crayon Physics Deluxe&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Машинариум не дал мне нормально поспать :) Всё обошлось мне в $10, я
дал почти в два раза больше среднего, а если бы покупал по 1 игре, то
вышло бы больше $100.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Sun, 11 Nov 2012 13:50:14 +0300</pubDate><guid>tag:imdagger.github.io,2012-11-11:posts/2012/11/11/urn:ya.ru:post/22199227/1711/</guid><category>bundle</category><category>игры</category><category>humble</category><category>покупка</category><category>indie</category></item><item><title>Старый комп</title><link>http://imdagger.github.io/posts/2012/11/02/staryi-komp/</link><description>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Измерив (приблизительно) линейкой свой старый дисплей от моего
компьютера (с начала 2003 года) я понял, что: то ли DDC видеокарты
возвращает неверный DPI или, что более вероятно, драйвер Nouveau
возвращает или не может определить DPI монитора. Раньше был драйвер от
Nvidia, но они больше не поддерживают мой старый Geforce 4 MX440.
Поэтому пришлось сходить в богатое руководство ArchLinux и взглянуть,
как получить, что за DPI выставлен у меня:&lt;/p&gt;
&lt;blockquote&gt;
xdpyinfo | grep -B2 resolution&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Оказалось, что 96. А по моим расчётам у меня где-то 86 точек на
дюйм. Поэтому после:&lt;/p&gt;
&lt;blockquote&gt;
xrandr –dpi 86&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Приложения в libGDX на этом PC стали отображаться как положено и
задано в сантиметрах.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">IMDagger</dc:creator><pubDate>Fri, 02 Nov 2012 16:56:36 +0300</pubDate><guid>tag:imdagger.github.io,2012-11-02:posts/2012/11/02/staryi-komp/</guid><category>nouveau</category><category>отображение</category><category>nvidia</category><category>компьютер</category><category>Xorg</category><category>dpi</category><category>видеокарта</category><category>старый</category></item></channel></rss>