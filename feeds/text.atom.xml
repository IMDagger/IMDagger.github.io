<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>IMDagger</title><link href="http://imdagger.github.io/" rel="alternate"></link><link href="http://imdagger.github.io/feeds/text.atom.xml" rel="self"></link><id>http://imdagger.github.io/</id><updated>2015-01-05T02:12:00+03:00</updated><entry><title>Прошёл последнюю часть Депонии</title><link href="http://imdagger.github.io/posts/2015/01/05/proshiol-posledniuiu-chast-deponii/" rel="alternate"></link><updated>2015-01-05T02:12:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2015-01-05:posts/2015/01/05/proshiol-posledniuiu-chast-deponii/</id><summary type="html">&lt;p&gt;Грустно Goodbye Deponia 3 закончилась, но в принципе ..., с другой стороны, главный
герой изменился хотя бы чуть-чуть внутренне и стал лучше. Т.к. до этого он
столько всего натворил: и детей монстру скормил, и пару любимых
разлучил в особо жестоком формате. Конечно хотелось бы увидеть,
что Руфус вместе с Гоал, розовые сопли и т.д. Но конец игры — есть конец игры.&lt;/p&gt;
&lt;!-- LocalWords:  Deponia Депонии Руфус Гоал --&gt;
</summary><category term="goodbye"></category><category term="deponia"></category><category term="daedalic"></category><category term="квест"></category><category term="прохождение"></category><category term="игра"></category><category term="конец"></category></entry><entry><title>Emacs и Hunspell</title><link href="http://imdagger.github.io/posts/2014/12/17/emacs-i-hunspell/" rel="alternate"></link><updated>2014-12-17T14:27:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-12-17:posts/2014/12/17/emacs-i-hunspell/</id><summary type="html">&lt;p&gt;Раньше у меня с Emacs использовалась проверка через Aspell,
но так можно проверять только один язык в тексте, либо собирать
мультиязыковой словарь. Я решил посмотреть, может ли Hunspell
просто принять в качестве аргументов несколько словарей, и да,
он может это. Поэтому я сделал выбор в пользу него.
Хотя на этом пути тоже возникли свои подводные камни связанные
с тем, что в пакетах старая сборка Hunspell. А в ней есть
&lt;a class="reference external" href="http://debbugs.gnu.org/cgi/bugreport.cgi?bug=7781"&gt;ошибка&lt;/a&gt; при
работе с UTF-8, когда утилита выводит номер
байта вместо номера символа. Поэтому пришлось собрать
пакет из &lt;a class="reference external" href="http://sourceforge.net/projects/hunspell/"&gt;исходников&lt;/a&gt;.
А ещё установить пакет  hunspell-ru-ie-yo из
&lt;a class="reference external" href="https://launchpad.net/~andrew-crew-kuznetsov/+archive/ubuntu/xneur-stable"&gt;ppa:andrew-crew-kuznetsov/xneur-stable&lt;/a&gt;
от команды XNeur, чтобы была в словарях бука &lt;strong&gt;Ё&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Устанавливаем пакет Hunspell и языки.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;./configure.sh --prefix&lt;span class="pgcss-o"&gt;=&lt;/span&gt;/usr
&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;sudo checkinstall make &lt;span class="pgcss-c"&gt;# используем утилиту для сборки deb&lt;/span&gt;
...
&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;sudo apt-get install hunspell-en-us hunspell-ru-ie-yo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Правда последняя версии чекера из SVN немного медленная и пришлось
нарастить timeout-ы в &lt;code class="code"&gt;
flyspell-lazy.el&lt;/code&gt;
. Включить другой движок для
Emacs не составляет большой проблемы.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;custom-set-variables&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-local-dictionary-alist&lt;/span&gt;
   &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;russian-english&amp;quot;&lt;/span&gt;
     &lt;span class="pgcss-s"&gt;&amp;quot;[АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзийклмнопрстуфхцчшщьыъэюяA-Za-z]&amp;quot;&lt;/span&gt;
     &lt;span class="pgcss-s"&gt;&amp;quot;[^АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзийклмнопрстуфхцчшщьыъэюяA-Za-z]&amp;quot;&lt;/span&gt;
     &lt;span class="pgcss-s"&gt;&amp;quot;[-&amp;#39;]&amp;quot;&lt;/span&gt;  &lt;span class="pgcss-no"&gt;nil&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;ru_RU,en_US&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-no"&gt;nil&lt;/span&gt; &lt;span class="pgcss-nv"&gt;utf-8&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-program-name&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;hunspell&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-dictionary&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;russian-english&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-really-aspell&lt;/span&gt; &lt;span class="pgcss-no"&gt;nil&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-really-hunspell&lt;/span&gt; &lt;span class="pgcss-no"&gt;t&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-encoding8-command&lt;/span&gt; &lt;span class="pgcss-no"&gt;t&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;ispell-silently-savep&lt;/span&gt; &lt;span class="pgcss-no"&gt;t&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;flyspell-delay&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В данном случае словарь russian-english это ключ, по которому происходит
поиск настроек. Где я уже указал опции &lt;code class="code"&gt;
-d ru_RU,en_US&lt;/code&gt;
 и кодировку
ввода &lt;strong&gt;UTF-8&lt;/strong&gt;.&lt;/p&gt;
&lt;!-- LocalWords: Hunspell checkinstall --&gt;
</summary><category term="emacs"></category><category term="spellcheck"></category><category term="hunspell"></category><category term="aspell"></category><category term="проверка"></category><category term="UTF-8"></category></entry><entry><title>Вывод окружности в Kivy</title><link href="http://imdagger.github.io/posts/2014/12/15/vyvod-okruzhnosti-v-kivy/" rel="alternate"></link><updated>2014-12-15T03:15:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-12-15:posts/2014/12/15/vyvod-okruzhnosti-v-kivy/</id><summary type="html">&lt;p&gt;Не знаю почему я решил, что используя Ellipse инструкцию,
я могу получить окружность, а не круг. Я пытался в ней
найти как отказаться от заливки... хо-хо но ведь, окружность —
это просто линия! И нужно использовать Line со специальным параметром:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;Line&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;circle&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;y&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;r&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;width&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-mf"&gt;2.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Параметр &lt;code class="code"&gt;
circle&lt;/code&gt;
 можно трактовать, будто передан параметр &lt;code class="code"&gt;
points&lt;/code&gt;
,
который содержит точки окружности и сквозь них будет прочерчена линия толщиной
width.&lt;/p&gt;
</summary><category term="программирование"></category><category term="python"></category><category term="kivy"></category><category term="окружность"></category></entry><entry><title>Квест про бургеры из Chaos of Deponia</title><link href="http://imdagger.github.io/posts/2014/12/04/kvest-pro-burgery-iz-chaos-of-deponia/" rel="alternate"></link><updated>2014-12-04T02:20:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-12-04:posts/2014/12/04/kvest-pro-burgery-iz-chaos-of-deponia/</id><summary type="html">&lt;p&gt;Во время прохождения квеста про ресторан в игре Chaos of Deponia столкнулся с
задачей, в которой нужно не имея денег получить бесплатную печенюшку. Но эта
Печенка даётся только, если возьмёшь гамбургеры из утконоса и напиток из
утконоса. Т.е. следовало сделать так, чтобы на подносе &lt;strong&gt;не осталось&lt;/strong&gt; платной
еды и ценник был &lt;strong&gt;0с&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Уже после первых обменов руками видно, что в правилах есть какая-то «утечка».
Ибо запросто можно придти в ситуацию, что на подносе ничего нет, а стоимость
отличная от нуля. Сразу возникает мысль, что этим можно воспользоваться и в другую
сторону.&lt;/p&gt;
&lt;p&gt;Но так как я человек ленивый, то я сразу набросал черновой скрипт для правил:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Стаканов есть 3 размера и от питья можно отказаться&lt;/li&gt;
&lt;li&gt;Еды есть два вида: большой и маленький гамбургеры&lt;/li&gt;
&lt;li&gt;При увеличении размера стакана к стоимости нужно добавить +0.5c&lt;/li&gt;
&lt;li&gt;При уменьшении размера стакана к стоимости нужно добавить -0.5c&lt;/li&gt;
&lt;li&gt;При обмене большого гамбургера на маленький или обратно, цена меняется на 1с
(в ту или другую сторону)&lt;/li&gt;
&lt;li&gt;Стакан размера 3 можно бесплатно обменять на большой гамбургер и обратно&lt;/li&gt;
&lt;li&gt;Большой гамбургер можно бесплатно обменять на два малых и обратно&lt;/li&gt;
&lt;li&gt;А вот два стакана размера 1 можно обменять только на 2 малых гамбургера&lt;/li&gt;
&lt;li&gt;Заказать можно только следующие исходные позиции: один стакан размера 1
и один малый гамбургер за 2c; два малых гамбургера, один стакан размера 2
и одну печенку за 3c; один стакан размера 3, один большой гамбургер и
несколько печенок за 4c&lt;/li&gt;
&lt;li&gt;Еды и питья на подносе не может быть больше 4 единиц каждого&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Хоть и ясно, что первая исходная позиция не подходит, т.к. нет бесплатных
печенок, но я не оставил надежды найти вариант выйти в отрицательную зону
и получить монет. Хотя, забегая вперёд, скажу, что это не вышло, минимум
это &lt;strong&gt;0c&lt;/strong&gt;. Далее идёт код, который рекурсивным перебором с мемоизацией
минимизирует состояния (его следовало сделать и покороче и побыстрее,
но особого желания возиться не было):&lt;/p&gt;
&lt;p class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_66478352"data-toggle="collapse"&gt;(Подробнее)&lt;/a&gt;&lt;/p&gt;
&lt;div class="collapse" id="cut_66478352"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;state&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;state&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# отбрасывает случаи, где слишком много еды на подносе&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sum&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt; &lt;span class="pgcss-ow"&gt;or&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sum&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;skey&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;tuple&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;map&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;tuple&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;state&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;skey&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;scost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;spath&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;skey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;scost&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-ow"&gt;or&lt;/span&gt; &lt;span class="pgcss-n"&gt;scost&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;spath&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;path&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;skey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;)):&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать увеличить стакан&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mf"&gt;0.5&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;),],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать уменьшить стакан&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;dkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mf"&gt;0.5&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink&amp;lt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;dkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;),],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;)):&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать увеличить гамбургер&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mf"&gt;1.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;)],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# попробовать уменьшить гамбургер&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fkey&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt; &lt;span class="pgcss-mf"&gt;1.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food&amp;lt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fkey&lt;/span&gt;&lt;span class="pgcss-p"&gt;)],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен большого гамбургера на два малых&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sum&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food2-&amp;gt;food1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен большого гамбургера на стакан размера 3&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food2-&amp;gt;drink3&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен стакана размера 3 на большой гамбургер&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink3-&amp;gt;food2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен двух малых гамбургеров на один большой&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;food1-&amp;gt;food2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-c"&gt;# обмен двух стаканов размера 1 на два мелких гамбургера&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:]&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;-=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_drink&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_food&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;drink1-&amp;gt;food1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,],&lt;/span&gt; &lt;span class="pgcss-n"&gt;reached&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-n"&gt;found&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{}&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# начальные позиции&lt;/span&gt;
&lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(([&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;]),&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;[],&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(([&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;]),&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;[],&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;solve&lt;/span&gt;&lt;span class="pgcss-p"&gt;(([&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]),&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;[],&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# выбор решения, чтобы взять поднос без денег&lt;/span&gt;
&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;found&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;itervalues&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;cost&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;И отработавшая программа выдаст: &lt;code class="code"&gt;
[('drink&amp;gt;', 2), 'drink3-&amp;gt;food2', ('food&amp;lt;', 2), 'food1-&amp;gt;food2', ('food&amp;lt;', 2), 'food1-&amp;gt;food2', 'food2-&amp;gt;drink3', ('drink&amp;lt;', 3), ('drink&amp;lt;', 2), ('drink&amp;lt;', 1)]&lt;/code&gt;
, что означает:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Взять два малых гамбургера и стакан 2 размера&lt;/li&gt;
&lt;li&gt;Стакан 2 размера увеличить до 3&lt;/li&gt;
&lt;li&gt;Обменять стакан 3 размера на большой гамбургер&lt;/li&gt;
&lt;li&gt;Большой гамбургер уменьшить&lt;/li&gt;
&lt;li&gt;Два малых гамбургера обменять на большой&lt;/li&gt;
&lt;li&gt;Большой гамбургер уменьшить&lt;/li&gt;
&lt;li&gt;Два малых гамбургера обменять на большой&lt;/li&gt;
&lt;li&gt;Обменять большой гамбургер на стакана 3 размера&lt;/li&gt;
&lt;li&gt;Уменьшить стакан до 2 размера&lt;/li&gt;
&lt;li&gt;Уменьшить стакана до 1 размера&lt;/li&gt;
&lt;li&gt;Отказаться от питься&lt;/li&gt;
&lt;li&gt;Deal with it! Теперь есть бесплатное печенье и &lt;strong&gt;0c&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="программирование"></category><category term="chaos"></category><category term="deponia"></category><category term="квест"></category><category term="прохождение"></category><category term="игра"></category><category term="python"></category></entry><entry><title>Программирование</title><link href="http://imdagger.github.io/posts/2014/11/29/programmirovanie/" rel="alternate"></link><updated>2014-11-29T01:34:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-11-29:posts/2014/11/29/programmirovanie/</id><summary type="html">&lt;p&gt;Где-то прочитал, но запишу как запомнил, а кое-где привру:
«Программирование — это легко, так же легко как кататься на велосипеде.
На горящем велосипеде. Когда ты и сам горишь... А у велосипеда нет сидения.»&lt;/p&gt;
</summary><category term="программирование"></category><category term="бредни"></category><category term="мысль"></category><category term="прочитал"></category></entry><entry><title>syntax-parse и литералы</title><link href="http://imdagger.github.io/posts/2014/11/11/syntax-parse-i-literaly/" rel="alternate"></link><updated>2014-11-11T04:15:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-11-11:posts/2014/11/11/syntax-parse-i-literaly/</id><summary type="html">&lt;p&gt;При использовании &lt;code class="code"&gt;
syntax-parse&lt;/code&gt;
 все литералы из &lt;code class="code"&gt;
 # :literals&lt;/code&gt;

должны быть обязательно объявлены, в отличие от syntax-case, в котором
литералы это нечто ближе к данным, а не к синтаксическим переменным.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;define-syntax&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-ss"&gt;:pre&lt;/span&gt; &lt;span class="pgcss-nv"&gt;stx&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;raise-syntax-error&lt;/span&gt; &lt;span class="pgcss-nv"&gt;stx&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;pre&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;Cannot be used outside syntax ...&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;define-syntax&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;test&lt;/span&gt; &lt;span class="pgcss-nv"&gt;stx&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;syntax-parse&lt;/span&gt; &lt;span class="pgcss-ss"&gt;#:literals&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-ss"&gt;:pre&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-nv"&gt;[&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt; &lt;span class="pgcss-nv"&gt;]&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Если так не сделать, то Racket будет ругаться, что &lt;code class="code"&gt;
syntax-parse : literal is unbound in phase 0 (phase 0 relative to the enclosing module)&lt;/code&gt;
.&lt;/p&gt;
</summary><category term="racket"></category><category term="literals"></category><category term="syntax-parse"></category><category term="биндинг"></category><category term="связывание"></category><category term="синтаксис"></category></entry><entry><title>Приключения с a.out</title><link href="http://imdagger.github.io/posts/2014/11/08/prikliucheniia-s-aout/" rel="alternate"></link><updated>2014-11-08T15:43:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-11-08:posts/2014/11/08/prikliucheniia-s-aout/</id><summary type="html">&lt;p&gt;Хорошо, что я запомнил, что я 6-го числа случайно опечатался
и написал &lt;code class="code"&gt;
ld /bin/bash&lt;/code&gt;
. Т.к. через два дня
я открываю как обычно свою домашнюю директорию и вижу, что
в ней лежит &lt;code class="code"&gt;
a.out&lt;/code&gt;
 файл, который как мне казалось,
я не создавал. Я пытаюсь сделать ldd, чтобы посмотреть, что за оно и
увидеть с чем исполняемый файл слинкован, но вместо этого
получаю:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;imdagger@thug-machine:~&lt;span class="pgcss-nv"&gt;$ &lt;/span&gt;ldd a.out
Inconsistency detected by ld.so: dl-lookup.c: 876: _dl_setup_hash: Assertion &lt;span class="pgcss-s1"&gt;&amp;#39;(bitmask_nwords &amp;amp; (bitmask_nwords - 1)) == 0&amp;#39;&lt;/span&gt; failed!
ldd: завершено с неизвестным выходным кодом &lt;span class="pgcss-o"&gt;(&lt;/span&gt;127&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Судорожно начинаю проверять свою машинку на вторжения, логи, аккаунты, даты, chkrootkit... всё в бой. Сбиваю все приложения, что
работают с сетью, начинаю смотреть важные обновления, проверяю netstat. И вспоминаю, что было 6 числа :) Это просто ld создал
файл из &lt;code class="code"&gt;
/bin/bash&lt;/code&gt;
. Выдыхаю, успокоился :)&lt;/p&gt;
</summary><category term="a.out"></category><category term="паранойя"></category><category term="домашняя"></category><category term="директория"></category></entry><entry><title>Исправления и оптимизация для индексирующих ботов</title><link href="http://imdagger.github.io/posts/2014/08/15/robot-indexing/" rel="alternate"></link><updated>2014-08-15T03:42:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-08-15:posts/2014/08/15/robot-indexing/</id><summary type="html">&lt;p&gt;Исправил немного CSS блога, чтобы табы отображались корректно, а то появлялась
дополнительная вертикальная полосочка в режиме &lt;code class="code"&gt;
:hover&lt;/code&gt;
. Наконец-то добавил
иконку &lt;code class="code"&gt;
favicon.ico&lt;/code&gt;
 и для некоторых ссылок &lt;code class="code"&gt;
rel=&amp;quot;nofollow&amp;quot;&lt;/code&gt;
,
т.к. я не хочу, чтобы бот переходил на индексацию сквозь ссылки в тегах, ибо
там всё равно тотже контент. И это замедляет процесс граббинга блога. Ещё
пришлось &lt;a class="reference external" href="https://help.yandex.ru/webmaster/controlling-robot/html.xml"&gt;закрыть от индексации&lt;/a&gt;
страницы с группировкой постов, чтобы не дублировался материал.&lt;/p&gt;
&lt;p&gt;Осталось разобраться с Pelican, чтобы страницы нумеровались не в прямом порядке а в обратном,
чтобы не требовалось при создании всего нескольких постов регенерировать всё содержимое.&lt;/p&gt;
</summary><category term="переезд"></category><category term="блог"></category><category term="жизнь"></category><category term="индексация"></category><category term="поиск"></category><category term="робот"></category></entry><entry><title>Переехал</title><link href="http://imdagger.github.io/posts/2014/08/01/blog-movement/" rel="alternate"></link><updated>2014-08-01T04:30:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-08-01:posts/2014/08/01/blog-movement/</id><summary type="html">&lt;p&gt;Наконец-то я переехал в новое место — GitHub Pages. Теперь я использую
статические страницы, генерацию и reStructuredText для написания своих
постов. Все предыдущие посты я заранее сдампил (т.к. я знал, что Яндекс
это сделают криво да ещё и медленно, поэтому я нещадно использовал их
API ещё до того, как они привели финальный механизм в действие), а
затем HTML-тексты я сконвертировал при помощи &lt;a class="reference external" href="http://johnmacfarlane.net/pandoc/"&gt;Pandoc&lt;/a&gt;.
Чудесная утилита для преобразования из всего во всё. Были конечно проблемы
с тем, как я раньше оформлял код (Я.ру не позволял это сделать по человески),
поэтому при конвертации возникли разнообразные недочёты, которые пришлось
устранить руками. А ещё пришлось сделать некоторое количество плагинов для
Pelican, чтобы у меня были теги для зачёркивания текста, для оформления
постов с фотографиями и для более продвинутой разметки кода. Также порядочно
времени ушло на создание стиля похожего на то, что у меня было раньше, но
на основе &lt;strong&gt;bootstrap&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Буду теперь обживаться и привыкать тут, настраивать деплой постов,
править все проблемы полученные при конвертации во время переезда.&lt;/p&gt;
</summary><category term="переезд"></category><category term="блог"></category><category term="Я.ру"></category><category term="радость"></category><category term="жизнь"></category><category term="pelican"></category><category term="rst"></category></entry><entry><title>Ввод специальных символов в Emacs</title><link href="http://imdagger.github.io/posts/2014/08/01/emacs-unicode-chars/" rel="alternate"></link><updated>2014-08-01T03:57:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-08-01:posts/2014/08/01/emacs-unicode-chars/</id><summary type="html">&lt;p&gt;В Emacs, если нужно ввести специальный символ, то не обязательно
переключать метод ввода, можно воспользоваться сочетанием &lt;kbd class="kbd"&gt;
C-x 8 ENTER&lt;/kbd&gt;
,
которое предложит варианты, либо сразу ввести шорткат сочетания, например:
&lt;kbd class="kbd"&gt;
C-x 8 ' e&lt;/kbd&gt;
 даёт é символ с диакритическим знаком.&lt;/p&gt;
</summary><category term="emacs"></category><category term="сочетание"></category><category term="клавиша"></category><category term="символы"></category><category term="unicode"></category></entry><entry><title>Переезд</title><link href="http://imdagger.github.io/posts/2014/06/26/pereezd/" rel="alternate"></link><updated>2014-06-26T17:23:23+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-06-26:posts/2014/06/26/pereezd/</id><summary type="html">&lt;p&gt;Такс, придётся подумать куда перехать с Я.ру, чтобы всё перенести
как нужно. Жду, когда они зальют на Я.Диск все посты в HTML, чтобы
посмотреть, что там, хотя если они будут долго шевелиться, то мне
придётся самому сделать краулера, который вытащит всё моё. В принципе
такими темпами стоит подумать и о моей второй почте, и подвязать к ней
сервисы тоже, чтобы не растерять всё. Т.к. всё что меня держало это
OpenID и Jabber от Яндекса.&lt;/p&gt;
</summary><category term="переезд"></category><category term="прощай"></category><category term="Я.ру"></category><category term="Яндекс"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/06/25/urn:ya.ru:post/22199227/1969/" rel="alternate"></link><updated>2014-06-25T02:49:44+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-06-25:posts/2014/06/25/urn:ya.ru:post/22199227/1969/</id><summary type="html">&lt;p&gt;Висцеральная теория сна выглядит стройно и убедительно, и сходится с
опытами. И это позволяет подругому взгянуть на то, зачем мы вообще спим
и под другим углом осознать «усталость». Проглотил на одном дыхании.&lt;/p&gt;
</summary><category term="теория"></category><category term="сон"></category><category term="Пигарев"></category><category term="наука"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/06/13/urn:ya.ru:post/22199227/1967/" rel="alternate"></link><updated>2014-06-13T02:32:51+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-06-13:posts/2014/06/13/urn:ya.ru:post/22199227/1967/</id><summary type="html">&lt;p&gt;В сериалах с закадровым смехом настолько к нему привыкаешь, что
когда смотрю новый ситком без закадрового смеха, то уже чувствую
странное ощущение тревожности (моз такой: «бзыыынь..бзыынь.. вроде
смешно, а чего никто не смеётся?»). Хотя, собственно, привыкнуть к
стороннему смеху было тоже сложно, особенно, когда кажется, что шутка не
смешная; а они всё равно радуются. Это, наверное, для меня как Гриффинов
смотреть… начинаешь смотреть — кажется странным, потом втягиваешься,
привыкаешь и вот уже смеёшься… бах! посмотрел уже 10 сезонов. Потом
долгий перерыв, и оказывается, что успел отвыкнуть и нужен опять
разогрев.&lt;/p&gt;
</summary><category term="смех"></category><category term="привычка"></category><category term="сериал"></category><category term="жизнь"></category><category term="бредни"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/06/07/urn:ya.ru:post/22199227/1966/" rel="alternate"></link><updated>2014-06-07T13:54:01+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-06-07:posts/2014/06/07/urn:ya.ru:post/22199227/1966/</id><summary type="html">&lt;p&gt;Rust в качестве замены C++ выглядит для меня довольно интересно. И
гигиеничные макросы дают больше свободы в метапрограммировании, чем
исторический костыль из плюсов.&lt;/p&gt;
</summary><category term="Rust"></category><category term="мысль"></category><category term="C++"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/30/urn:ya.ru:post/22199227/1965/" rel="alternate"></link><updated>2014-05-30T18:33:33+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-30:posts/2014/05/30/urn:ya.ru:post/22199227/1965/</id><summary type="html">&lt;p&gt;Ееее! Сегодня моему «уютненькому» уже 5 лет! Пусть растёт большой :)
Хотя уже совсем не так быстро как раньше.&lt;/p&gt;
</summary><category term="блог"></category><category term="5"></category><category term="годовщина"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/25/urn:ya.ru:post/22199227/1964/" rel="alternate"></link><updated>2014-05-25T01:01:28+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-25:posts/2014/05/25/urn:ya.ru:post/22199227/1964/</id><summary type="html">&lt;p&gt;Повезло, сегодня чуть не наступил на змею ногой. Впредь буду
внимательнее смотреть, что ползает по земле.&lt;/p&gt;
</summary><category term="Я"></category><category term="опасность"></category><category term="жизнь"></category></entry><entry><title>ICFPC 2014</title><link href="http://imdagger.github.io/posts/2014/05/22/icfpc-2014/" rel="alternate"></link><updated>2014-05-22T03:34:41+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-22:posts/2014/05/22/icfpc-2014/</id><summary type="html">&lt;p&gt;Ура! Наконец стали известны даты ICFP Programming Contest 2014. Это
будет 3 дня начиная с 25 июля. С нетерпением жду новых приключений :).&lt;/p&gt;
</summary><category term="соревнование"></category><category term="2014"></category><category term="ожидание"></category><category term="icfpc"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/22/urn:ya.ru:post/22199227/1962/" rel="alternate"></link><updated>2014-05-22T01:59:40+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-22:posts/2014/05/22/urn:ya.ru:post/22199227/1962/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Попробовал мороженое от Zielona Budka (это Польша), взял то, что без
молочных продуктов сделано. Я думал оно будет по вкусу и фактуре как
фруктовый лёд, а оказалось, что &lt;strong&gt;лучше&lt;/strong&gt; многих сортов мороженого, что
я пробовал. И килокалорий вышло всего 145 и без холестерина. В следующий
раз попробую их малиновый сорбет.&lt;/p&gt;
</summary><category term="радость"></category><category term="жизнь"></category><category term="еда"></category><category term="мороженое"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/17/urn:ya.ru:post/22199227/1959/" rel="alternate"></link><updated>2014-05-17T04:29:10+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-17:posts/2014/05/17/urn:ya.ru:post/22199227/1959/</id><summary type="html">&lt;p&gt;Странно, как я пропустил такой интересный фильм как «Limitless». Хм,
может быть я забыл опять принять свои ноотропы? :)&lt;/p&gt;
</summary><category term="интересно"></category><category term="фильм"></category><category term="жизнь"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/16/urn:ya.ru:post/22199227/1958/" rel="alternate"></link><updated>2014-05-16T02:00:52+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-16:posts/2014/05/16/urn:ya.ru:post/22199227/1958/</id><summary type="html">&lt;p&gt;Пожалуй у ByFly сегодня даже более серьёзные проблемы, чем все эти две
или три недели:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;…&lt;/div&gt;
&lt;div class="line"&gt;3354 packets transmitted, 12 received, &lt;strong&gt;99% packet loss&lt;/strong&gt;, time 3380764ms&lt;/div&gt;
&lt;div class="line"&gt;rtt min/avg/max/mdev = 244.105/1204.424/3983.568/1329.357 ms, pipe 4&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
</summary><category term="byfly"></category><category term="интернет"></category><category term="проблема"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/14/urn:ya.ru:post/22199227/1957/" rel="alternate"></link><updated>2014-05-14T18:35:17+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-14:posts/2014/05/14/urn:ya.ru:post/22199227/1957/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Наконец я заметил, где в Gimp переключается цетовой профиль для уже
существующих изображений (т.к. настройки рабочего холста расположены в
Правка → Параметры → Управление цветом), а я для профиля искал тоже
параметры в настройках а они в:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Изображение → Режим → Назначить цветовой профиль&lt;/p&gt;
&lt;p&gt;Изображение → Режим → Преобразовать в цветовой профиль&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; Теперь я могу сохранять PNG с цветовым профилем sRGB. Заодно
познакомился с утилитой colormgr, при помощи которой можно посмотреть
устройства и профили.&lt;/p&gt;
</summary><category term="gimp"></category><category term="цвет"></category><category term="colormgr"></category><category term="профиль"></category><category term="srgb"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/05/02/urn:ya.ru:post/22199227/1953/" rel="alternate"></link><updated>2014-05-02T02:06:14+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-05-02:posts/2014/05/02/urn:ya.ru:post/22199227/1953/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Игра “Нямстеры” затягивает… Простые правила, забавные персонажи и
приятный игровой процесс. Убивает время однозначно.&lt;/p&gt;
</summary><category term="игра"></category><category term="нямстеры"></category></entry><entry><title>Pygame и MP3</title><link href="http://imdagger.github.io/posts/2014/04/25/pygame-i-mp3/" rel="alternate"></link><updated>2014-04-25T17:35:01+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-04-25:posts/2014/04/25/pygame-i-mp3/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В документации написано, что mp3 ограниченно поддерживается и на
некоторых платформах могут быть проблемы (даже падение с segfault). В
моём случае на Ubuntu 12.04 LTS с Pygame из пакетов и всем остальным по
умолчанию попытка проиграть MP3 заканчивается щелчком из динамика, но не
падает (возможно так не для любого файла, но для тех, что у меня были
случилось именно так). Я решил переконвертировать из в OGG-формат. Но
после опять, щелчок и всё, благо у меня был один рабочий файл и я
увидел, что мои конвертированные — пожаты FLAC, а рабочий — Vorbis.
После этого я указал принудительно использовать нужный кодек (а не по
умолчанию) и Pygame стал всё отлично воспроизводить:&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;avconv -i файл.mp3 -codec:a libvorbis файл.ogg&lt;/strong&gt;&lt;/blockquote&gt;
</summary><category term="музыка"></category><category term="ubuntu"></category><category term="звук"></category><category term="pygame"></category><category term="vorbis"></category><category term="mp3"></category><category term="flac"></category><category term="ogg"></category></entry><entry><title>atan2</title><link href="http://imdagger.github.io/posts/2014/04/19/atan2/" rel="alternate"></link><updated>2014-04-19T16:22:37+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-04-19:posts/2014/04/19/atan2/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Стоит быть внимательным с функцией atan2 и из Python (math.atan2) и
из Racket (да, и наверное везде так). Первый аргумент это Y, а второй X.
Но не наоборот.&lt;/p&gt;
</summary><category term="внимательность"></category><category term="аргументы"></category><category term="atan2"></category><category term="python"></category><category term="racket"></category><category term="параметры"></category></entry><entry><title>Потокобезопасность</title><link href="http://imdagger.github.io/posts/2014/04/15/potokobezopasnost/" rel="alternate"></link><updated>2014-04-15T03:53:22+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-04-15:posts/2014/04/15/potokobezopasnost/</id><summary type="html">&lt;p&gt;Похоже,
что&amp;nbsp;&lt;a class="reference external" href="http://license.scala.com/readme/ScriptingAutomation.html"&gt;ScalaPlayer&lt;/a&gt;
не дружит с попыткой дёргать его метод Log из разных нитей из Python.
Как-то это всё заканчивается плачевно — тихим падением. Поэтому лучше
завернуть ScalaPlayer.Log в родной python-овский обработчик из модуля
logging:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;logging&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;ScalaLogHandler&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;logging&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Handler&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;emit&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;record&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;ScalaPlayer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Log&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;record&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Т.к. logging.Handler потокобезопасный и весь модуль logging тоже.&lt;/p&gt;
</summary><category term="блокировка"></category><category term="ScalaPlayer"></category><category term="scala"></category><category term="поток"></category><category term="python"></category><category term="безопасность"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/04/11/urn:ya.ru:post/22199227/1949/" rel="alternate"></link><updated>2014-04-11T20:14:58+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-04-11:posts/2014/04/11/urn:ya.ru:post/22199227/1949/</id><summary type="html">&lt;p&gt;Купил новые батарейки для моего беспроводного грызуна. Вставил,
подключил, не работает. Мышь пролежала до этого где-то полгода без
использования. Пришлось разобрать, убрал все окисления, зачистил
контакты питания, убрал в нескольких местах КЗ на дорожках, собрал, ура!
снова работает. :)&lt;/p&gt;
</summary><category term="починил"></category><category term="мышь"></category><category term="неисправность"></category><category term="беспроводная"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/04/11/urn:ya.ru:post/22199227/1948/" rel="alternate"></link><updated>2014-04-11T01:40:08+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-04-11:posts/2014/04/11/urn:ya.ru:post/22199227/1948/</id><summary type="html">&lt;p&gt;Я расчитывал, что сборка числа в комплексное (достаточно дешёвая
операция) и последующее вычисление магнитуды будут быстрее, чем сумма
квадратов и извлечение корня, т.к. функция magnitude реализована в
математическом ядре Racket и написана на C. Но это не так,
JIT-оптимизированный код справляется с задачей быстрее, т.к. нет лишних
вызовов функций, чистая математика. А если подключить racket/flonums для
дробной арифметики, то скорость тогда ещё больше возрастает.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;magnitude&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;make-rectangular&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2020&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2013&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;20&lt;/span&gt;
&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;-&amp;gt;fl&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;magnitude&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;make-rectangular&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1280&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1279&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;48&lt;/span&gt;
&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;sqrt&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;+&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;984&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;980&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;8&lt;/span&gt;
&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;-&amp;gt;fl&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;flsqrt&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fl+&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fl*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fl*&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;84&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;84&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Разница между первым и последним вариантом наглядна.&lt;/p&gt;
</summary><category term="magnitude"></category><category term="flonum"></category><category term="производительность"></category><category term="вычисление"></category><category term="расстояние"></category><category term="racket"></category></entry><entry><title>Множители</title><link href="http://imdagger.github.io/posts/2014/03/25/mnozhiteli/" rel="alternate"></link><updated>2014-03-25T13:28:27+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-03-25:posts/2014/03/25/mnozhiteli/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Забавно, что первое такое N, что количество натуральных чисел с
нечётным числом простых множителей равно количеству с чётным числом
множителей на отрезке [2;N], является 906150257 и не какое-нибудь другое
меньшее.&lt;/p&gt;
</summary><category term="простое"></category><category term="программирование"></category><category term="математика"></category><category term="вычисление"></category></entry><entry><title>Регулярка и проверка на простоту?</title><link href="http://imdagger.github.io/posts/2014/03/24/reguliarka-i-proverka-na-prostotu/" rel="alternate"></link><updated>2014-03-24T02:30:29+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-03-24:posts/2014/03/24/reguliarka-i-proverka-na-prostotu/</id><summary type="html">&lt;p&gt;Немного безумия и можно при помощи регулярного выражения проверить
простое ли число&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;re&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;is_complex&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;re&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;compile&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^1?$|^(11+?)\1+$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;check_prime&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;n&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;bool&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;is_complex&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;match&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt; &lt;span class="pgcss-n"&gt;n&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_83138896"data-toggle="collapse"&gt;Подробнее&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_83138896"&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(1)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(2)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(3)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(4)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(101)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(200)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(243)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(901)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(903)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt;&amp;gt;&amp;gt; check_prime(997)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Как работает это? is_complex проверяет есть ли у числа какие-либо
два множителя, т.е. при помощи регулярного аражения происходит
факторизация числа. Само число записывается как такое же количество
единиц равное значению.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Часть&lt;/em&gt; выражения:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
... ^(11+?)\1+ ...
&lt;/pre&gt;
&lt;p&gt;Означает, что строка состоит из двух или более единиц таких, что
встречаются два или более раза в ней. Т.е. получается, что проверка
регулярным выражением пытается выразить N единиц через A * B; если это
возможно, то число составное.&lt;/p&gt;
</summary><category term="ненормальное"></category><category term="программирование"></category><category term="число"></category><category term="простое"></category></entry><entry><title>django-polymorphic и поле начинающееся с подчёркивания</title><link href="http://imdagger.github.io/posts/2014/03/15/django-polymorphic-i-pole-nachinaiushcheesia-s-podchiorkivaniia/" rel="alternate"></link><updated>2014-03-15T03:31:49+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-03-15:posts/2014/03/15/django-polymorphic-i-pole-nachinaiushcheesia-s-podchiorkivaniia/</id><summary type="html">&lt;p&gt;Если название поля начинается с одинарного продчёркивания, то в
некоторых случаях в вложенных запросах не получится его использовать,
polymorphic будет ругаться на модель. Почему? Потому, что в
django-polymorphic есть поддержка &amp;quot;_&lt;strong&gt;_&lt;/strong&gt;_&amp;quot; (тройного
подчёркивания), которое означает, что указана модель и её поле. Это всё
нужно, чтобы не писать
filter(writtingdocument_sellabledocument_traidingdocument_mymegafield),
а написать просто filter(TraidingDocument_&lt;strong&gt;_&lt;/strong&gt;_mymegafield), и
библиотека уже сама сгенерирует полный путь. Удобно, в доке описано, но
я как-то не обратил внимание, что там оно тройное и тогда не уловит
из-за этого суть. А наткнулся, когда попытался обратное поле фильтровать
_client_profile, получалось, что-то типа
filter(user_&lt;strong&gt;_&lt;/strong&gt;_client_profile), и от этого django-polymorphic
решал, что user никакое не название промежуточного поля, а название
модели. Быстрое решение? Не называть с “_” поля, если используешь
библиотеку полиморфных моделей.&lt;/p&gt;
</summary><category term="django-polymorphic"></category><category term="запрос"></category><category term="программирование"></category><category term="подчёркивание"></category><category term="название"></category><category term="модель"></category><category term="поле"></category><category term="python"></category><category term="тройной"></category><category term="фильтрация"></category></entry><entry><title>Синтаксическая параметризация</title><link href="http://imdagger.github.io/posts/2014/03/12/sintaksicheskaia-parametrizatsiia/" rel="alternate"></link><updated>2014-03-12T03:06:10+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-03-12:posts/2014/03/12/sintaksicheskaia-parametrizatsiia/</id><summary type="html">&lt;p&gt;Если использовать обычный syntax-parameterize, то внутри него ни
объявить структуру, ни переменные. Но зато есть
&lt;a class="reference external" href="http://docs.racket-lang.org/reference/splicing.html?q=splicing-synax-parameterize&amp;amp;q=syntax-parameterize#%28form._%28%28lib._racket%2Fsplicing..rkt%29._splicing-syntax-parameterize%29%29"&gt;splicing-syntax-parameterize&lt;/a&gt;,
который как раз все объявления пробрасывает на уровень выше — в
родительскую конструкцию. Только обязательно следует импортировать
&lt;code class="code"&gt;
(require racket/splicing)&lt;/code&gt;
, т.к. конструкция описана в этом модуле и без
подключения может казаться, что сплайсинг не работает, а не то, что
идентификатор не объявлен.&lt;/p&gt;
</summary><category term="racket"></category><category term="splicing-syntax-parameterize"></category><category term="struct"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/03/12/urn:ya.ru:post/22199227/1940/" rel="alternate"></link><updated>2014-03-12T02:59:11+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-03-12:posts/2014/03/12/urn:ya.ru:post/22199227/1940/</id><summary type="html">&lt;p&gt;Удобная штука декорирование в Racket для структур, правда я думал, что
оно реализовано на уровне библиотеки, а оказалось, что в самом рантайме.
Оно используется для контрактного программирования (есть и chaperone,
который для постусловий), но может быть полезна для перехвата, например,
момента, когда происходит установка поля в структуре и последующей
модификации.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;struct&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;y&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-kd"&gt;#:mutable&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some&lt;/span&gt; &lt;span class="pgcss-n"&gt;f&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;impersonate-struct&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                     &lt;span class="pgcss-n"&gt;set-x-y!&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;self&lt;/span&gt; &lt;span class="pgcss-n"&gt;new-v&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;f&lt;/span&gt; &lt;span class="pgcss-n"&gt;new-v&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;add1&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;sub1&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 1&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 1&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;set-x-y!&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;set-x-y!&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 4&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;x-y&lt;/span&gt; &lt;span class="pgcss-n"&gt;m2&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="контракт"></category><category term="impersonate"></category><category term="racket"></category><category term="обработчик"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/03/09/urn:ya.ru:post/22199227/1939/" rel="alternate"></link><updated>2014-03-09T01:42:02+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-03-09:posts/2014/03/09/urn:ya.ru:post/22199227/1939/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Для меня было довольно неожиданным увидеть в списке тех мест, где
соревнование Google Code Jam не распространяется провинцию Квебек
(Канада); это среди Северной Кореи, Судана, Кубы, Сирии и Саудовской
Аравии.&lt;/p&gt;
</summary><category term="соревнование"></category><category term="Квебек"></category><category term="google"></category><category term="codejam"></category></entry><entry><title>Скрещивание ужа и ежа</title><link href="http://imdagger.github.io/posts/2014/02/26/skreshchivanie-uzha-i-ezha/" rel="alternate"></link><updated>2014-02-26T22:51:56+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-02-26:posts/2014/02/26/skreshchivanie-uzha-i-ezha/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Выложил на Github &lt;a class="reference external" href="https://gist.github.com/IMDagger/9220764"&gt;мой
переходник&lt;/a&gt;, который
пытается любыми правдами и неправдами транслировать зарегистрированные
модели из Django Admin в XAdmin. Для этого приходится собирать все
атрибуты, которые объявлены после базовой модели, строить над ними
обёртки, которые подсовывают requests параметр по необходимости (actions
не принимают этот параметр). И после этого приводится list_display поле
в перевариваемый вид для XAdmin, т.к. она не работает с полями в виде
функций, приходится их регистрировать в классе при чём так, чтобы
обёртка выглядела как то, что оборачивают — со всеми short_description.
Свойства пока не обслуживаются, всё равно они встречаются редко в
дескрипторах моделей для админки. Лучше конечно без него, но некоторые
библиотеки описывают свои модели для админки и хотелось бы их иметь
автоматически.&lt;/p&gt;
</summary><category term="django-xadmin"></category><category term="Django"></category><category term="преобразование"></category><category term="XAdmin"></category><category term="трасляция"></category><category term="переходник"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/02/25/urn:ya.ru:post/22199227/1936/" rel="alternate"></link><updated>2014-02-25T01:43:20+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-02-25:posts/2014/02/25/urn:ya.ru:post/22199227/1936/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Сделал переходник, который автоматом классы админки из django-admin
приводит к форме, которую понимает django-xadmin. Конечно полное решение
сделать не так и просто, поэтому я остановился на частичном, костыльном.
Всё из-за того, что xadmin не расширяет стандартный admin, а скорее
копирует функционал с огромным количеством своих несовместимых
изменений. Но в целом интерфейс на уровне кода у них похож при описании
обработчика для модели. Нужно привести немного в человеческий вид и
выложить на Gist, может кому будет полезно. Т.к. полно библиотек которые
регистрируют свои дополнения к админке, но xadmin их не может
подхватить.&lt;/p&gt;
</summary><category term="django-xadmin"></category><category term="обработчик"></category><category term="модель"></category><category term="admin"></category><category term="совместимость"></category><category term="Django"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/02/20/urn:ya.ru:post/22199227/1935/" rel="alternate"></link><updated>2014-02-20T01:45:09+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-02-20:posts/2014/02/20/urn:ya.ru:post/22199227/1935/</id><summary type="html">&lt;p&gt;Не нашёл я как в Django сделать так, чтобы в ModelForm можно было
уже &lt;strong&gt;ранее описанным&lt;/strong&gt; полям изменять их widget, и всё из-за того, что
поля инстанцируются ещё в метаклассе, что вызывает проблемы — заново
туда не подсунуть widget, label и другие аргументы. Поэтому пришлось
построить небольшой свой велосипед с квадратными колёсами. В котором
поля, которые перекрывают другие и при этом нуждаются в гибкости (чтобы
в наследниках можно было легко заменить некритичные участки),
объявляются как &lt;code class="code"&gt;
Meta.override _fields&lt;/code&gt;
:&lt;/p&gt;
&lt;p&gt;Он &lt;a class="reference external" href="https://gist.github.com/IMDagger/9102834"&gt;доступен на GitGub&lt;/a&gt;.&lt;/p&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_85626128"data-toggle="collapse"&gt;посмотреть мой велосипед&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85626128"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;forms&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.forms&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;widgets&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;ModelFormStyler&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;forms&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModelForm&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__metaclass__&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;    Allows to write such kind of forms:&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;    ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;    class Some(ModelFormStyler):&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;        class Meta:&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            model = ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            widgets = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: widgets.Textarea(attrs={&amp;#39;rows&amp;#39;: 5}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            },&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            override_fields = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: (forms.CharField, dict(label=..., ...)),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field2&amp;#39;: (MyCustomField, dict(widget=widgets.TextInput())),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            }&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;         ... methods here ...&lt;/span&gt;

&lt;span class="pgcss-sd"&gt;    class Some2(Some):&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;        class Meta:&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            model = ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            widgets = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                ...&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: widgets.Textarea(attrs={&amp;#39;rows&amp;#39;: 100500}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field2&amp;#39;: widgets.Textarea(attrs={&amp;#39;rows&amp;#39;: 100500}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            },&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            labels = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field1&amp;#39;: &amp;#39;another label&amp;#39;,&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            },&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            override_fields = {&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;                &amp;#39;field2&amp;#39;: (MyCustomField2, {}),&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;            }&lt;/span&gt;
&lt;span class="pgcss-sd"&gt;         ... methods here again ...&lt;/span&gt;

&lt;span class="pgcss-sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="pgcss-n"&gt;__sections&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;widgets&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;widget&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# section name -&amp;gt; argument name&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;}&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;__new__&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;super_new&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;super&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModelFormStyler&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__new__&lt;/span&gt;

        &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_override_custom_widgets&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;new_class&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;super_new&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;new_class&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@classmethod&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;__replacement_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;opt_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;try&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# .widgets, .labels and etc&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;getattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Meta&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-n"&gt;opt_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;except&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;pass&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;base&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;try&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;getattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;base&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Meta&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;opt_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;except&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;pass&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@classmethod&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;__field_descr_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__replacement_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;field_overrides&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@classmethod&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;_override_custom_widgets&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;Meta&amp;#39;&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;entire_dirty&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;set&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;field_overrides&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__sections&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;keys&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# .field_overrides together with .widgets, .labels&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;dirty&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;getattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Meta&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;{})&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;entire_dirty&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;update&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;dirty&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;iterkeys&lt;/span&gt;&lt;span class="pgcss-p"&gt;())&lt;/span&gt;

            &lt;span class="pgcss-n"&gt;dirty_fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[]&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# it&amp;#39;s now without duplicates&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;entire_dirty&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;descr&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__field_descr_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;descr&lt;/span&gt; &lt;span class="pgcss-ow"&gt;is&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;dirty_fields&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;append&lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;descr&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;

            &lt;span class="pgcss-c"&gt;# create fields for all dirty descriptors (local and parent)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ftype&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;dirty_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;options&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;dict&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# process&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;arg_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__sections&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;iteritems&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;arg_value&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;cls&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;__replacement_for&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;bases&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;section&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;arg_value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;is&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                        &lt;span class="pgcss-n"&gt;options&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;arg_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;arg_value&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;attrs&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;fname&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;ftype&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;options&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;ControlModelForm&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;forms&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModelForm&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;__metaclass__&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;ModelFormStyler&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Django"></category><category term="виджет"></category><category term="поле"></category><category term="перекрытие"></category><category term="перегрузка"></category><category term="modelform"></category><category term="форма"></category><category term="работа"></category><category term="программирование"></category></entry><entry><title>Проблема с удалением множества объектов в polymorphic</title><link href="http://imdagger.github.io/posts/2014/02/13/problema-s-udaleniem-mnozhestva-obektov-v-polymorphic/" rel="alternate"></link><updated>2014-02-13T23:56:19+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-02-13:posts/2014/02/13/problema-s-udaleniem-mnozhestva-obektov-v-polymorphic/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Если есть некоторый класс A и в нём поле b, которое может описывать
множество объектов класса C, у которого есть потомки D и E, то при
попытке удалить все эти объекты разом может возникнуть проблема (у меня
возникает в админке). И суть ещё заключается в том, что в Django при
сборе всех зависимых объектов &lt;a class="reference external" href="https://github.com/django/django/blob/stable/1.6.x/django/db/models/deletion.py#L170"&gt;берут первый из
списка&lt;/a&gt;,
его класс и остальные обрабатывают из расчёта на его поля, хотя в этом
множестве могут быть немного другие по поведению объекты. Придётся
какой-то обходной путь строить, иначе не получается удалять в админке
пользователей, т.к. те у меня тащат за собой созданные ими документы,
которые имеют небольшие различия, что сразу отправляет обработчик
запроса в 502.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="django-polymorphic"></category><category term="программирование"></category><category term="Django"></category><category term="запрос"></category><category term="удаление"></category><category term="работа"></category><category term="администрирование"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/02/06/urn:ya.ru:post/22199227/1925/" rel="alternate"></link><updated>2014-02-06T12:00:45+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-02-06:posts/2014/02/06/urn:ya.ru:post/22199227/1925/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Сидел я как-то выбирал такую функцию, чтобы она в нуле была 0, а в 1
единица. А потом понял, что если формализовать то, что я хочу, решение
сразу само получается. Т.к. F(0) = 0, F(1) &amp;lt;&amp;gt; 0, G(x) = F(x)/F(1). И
сразу смог составить на основе арктангенса функцию, чтобы управлять
кривизной и пологостью. Разными коэффициентами можно задать линейную,
параболу и гиперболу, а также различные промежуточные комбинации. Я
выбирал такие функции, чтобы отображать [0; 1] в [0; 1].&lt;/p&gt;
</summary><category term="функция"></category><category term="отображение"></category><category term="отрезок"></category><category term="выбор"></category></entry><entry><title>Celery, нити и обновление прогресса</title><link href="http://imdagger.github.io/posts/2014/01/26/celery-niti-i-obnovlenie-progressa/" rel="alternate"></link><updated>2014-01-26T23:50:23+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-01-26:posts/2014/01/26/celery-niti-i-obnovlenie-progressa/</id><summary type="html">&lt;p&gt;Похоже, что celery.current_task.update_state не дружит с вызовом
из области другой нити. Если создать нити и обернуть вызов обновления
состояния в Lock, чтобы не было параллельного обращения, то всё равно
рабочий процесс от Celery останавливается и не больше отзывается и чтобы
сделать restart нужно сначала его сбить. Не изучал вопрос почему, но
скорее всего из-за того, что я использую Celery “в связке для ленивых”,
т.е. с MySQL; а вот уже его драйверу возможно и не нравится, когда я
дёргаю его из одной нити, а создавал в другой. Произвёл вызов обновления
состояния в основном потоке в цикле по ожиданию события (плюс по
истечению интервала времени) и всё заработало как хотелось, а прогресс
обновления стал передавать по событию от дочерних нитей.&lt;/p&gt;
</summary><category term="Celery"></category><category term="нить"></category><category term="обработка"></category><category term="обновление"></category><category term="дочерний"></category><category term="прогресс"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/01/23/urn:ya.ru:post/22199227/1921/" rel="alternate"></link><updated>2014-01-23T03:51:45+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-01-23:posts/2014/01/23/urn:ya.ru:post/22199227/1921/</id><summary type="html">&lt;p&gt;Разобрался как в django-xadmin добавить свои кнопки к тем, что есть.
Придётся перекрывать шаблон &lt;code class="code"&gt;
includes/submit _line.html&lt;/code&gt;
, т.к. там зашиты
базовые кнопки. И нужно будет перехватывать &lt;code class="code"&gt;
post _response&lt;/code&gt;
 и производить
свой набор действий.&lt;/p&gt;
</summary><category term="python"></category><category term="django-xadmin"></category><category term="кнопки"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2014/01/14/urn:ya.ru:post/22199227/1920/" rel="alternate"></link><updated>2014-01-14T02:55:13+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-01-14:posts/2014/01/14/urn:ya.ru:post/22199227/1920/</id><summary type="html">&lt;p&gt;Нашёл
как&amp;nbsp;&lt;a class="reference external" href="http://orgmode.org/manual/Working-With-Source-Code.html#Working-With-Source-Code"&gt;управлять&lt;/a&gt;
режимом экспорта блоков кода в org-babel. Оказывается там много всего:
можно исполнить блок и отправить его результат на экспорт, можно
отправить сам блок, а можно
&lt;a class="reference external" href="http://orgmode.org/manual/Extracting-source-code.html"&gt;экспортировать&lt;/a&gt;
блок в отдельный файл или исключить его из этого процесса. В общем,
раздолье для литературного программирования (Дональд Кнут на этой
строчке радостно улыбается во сне) и всяких штук, где нужно иметь что-то
типа документации неотрывно от блоков кода и при этом, чтобы всё
управлялось как журнал, дневник, с таблицами и калькулятором.&lt;/p&gt;
</summary><category term="экспорт"></category><category term="фильтрация"></category><category term="tangle"></category><category term="org-babel"></category></entry><entry><title>Тюнинг конфига для моего редактора</title><link href="http://imdagger.github.io/posts/2014/01/14/tiuning-konfiga-dlia-moego-redaktora/" rel="alternate"></link><updated>2014-01-14T01:20:42+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-01-14:posts/2014/01/14/tiuning-konfiga-dlia-moego-redaktora/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В след за изменениями в основной ветке конфига, а точнее,
группировкой всех настроек в единый .org-файл с описанием и
иерархической структурой; я решил, что пора довести это всё дело до ума
и влить часть моих правок в &lt;a class="reference external" href="https://github.com/IMDagger/dot-emacs"&gt;русло основных
настроек&lt;/a&gt;. Естественно я
выключил evil mode, добавил tabbar, и безопасное закрытие фреймов.
Пришлось изменить часть настроек из-за того, что меня не устраивает TeX,
как второй язык по умолчанию, исправить некоторые опечатки и
усовершенствовать удаление строки для случая со скобками (об этом я
отписал автору оригинального конфига в его репозиторий).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Единственное, что меня пока немного удручает это скорость экспорта
из org-babel в настоящий конфиг для загрузки, но будет время (надеюсь не
опять во время болезни, как в этот раз) и я гляну, что там оно так часто
синхронизирует буфер с винчестером (удивительно было бы, если оно быстро
экспортировало бы да ещё и на обычный HDD с пониженными оборотами).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; А так я вообще приобрёр кучу всего: и geiser для racket с
автодополнением, и python с flycheck режимом и jedi сервером, хотя стоит
добавить какую-то фишку, чтобы можно было отключить часть настроек. Т.к.
мне не особо нужны настройки для Clojure, Scala, Ruby и Haskell. Но
Chris Barret они нужны, т.к. видимо это его сфера интересов. Хотя и я
просто выбрасывать не собираюсь эти настройки, просто пока не хочу
тратить время загрузки на них.&lt;/p&gt;
</summary><category term="org-mode"></category><category term="emacs"></category><category term="жизнь"></category><category term="настройки"></category><category term="улучшение"></category></entry><entry><title>Менеджер по умолчанию и исключение в .save()</title><link href="http://imdagger.github.io/posts/2014/01/03/menedzher-po-umolchaniiu-i-iskliuchenie-v-save/" rel="alternate"></link><updated>2014-01-03T03:58:41+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2014-01-03:posts/2014/01/03/menedzher-po-umolchaniiu-i-iskliuchenie-v-save/</id><summary type="html">&lt;p&gt;Если при использовании модели из django-polymorphic возникает ошибка
подобного вида при вызове &lt;code class="code"&gt;
.save&lt;/code&gt;
:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-x"&gt;(8 additional frame(s) were not displayed)&lt;/span&gt;
&lt;span class="pgcss-x"&gt;...&lt;/span&gt;
  File &lt;span class="pgcss-nb"&gt;&amp;quot;staff/views.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;236&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;edit_result&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;result&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;save&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
  File &lt;span class="pgcss-nb"&gt;&amp;quot;polymorphic/polymorphic_model.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;89&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;save&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;super&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;save&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-o"&gt;*&lt;/span&gt;&lt;span class="pgcss-n"&gt;args&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;


&lt;span class="pgcss-gr"&gt;IntegrityError&lt;/span&gt;: &lt;span class="pgcss-n"&gt;(1062, &amp;quot;Duplicate entry &amp;#39;72&amp;#39; for key &amp;#39;PRIMARY&amp;#39;&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Причём, после всех проверок видно, что дубликата, ну никак, не может
быть. То высока вероятность, что просто, пропущено явное указание
менеджера objects по умолчанию и подхватился какой-то другой из
менеджеров (конечно, если используется пропатченная версия
polymorphic-django). Тогда достаточно объявить недостающий обработчик:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-err"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;objects&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;CommonManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-c"&gt;# простая надстройка над PolymorphicManager&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;ready_articles&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;FinalsManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-c"&gt;# свой особенный менеджер&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="django-polymorphic"></category><category term="IntegrityError"></category><category term="дубликат"></category><category term="исключение"></category><category term="модель"></category><category term="менеджер"></category></entry><entry><title>django-polymorphic и bulk_create</title><link href="http://imdagger.github.io/posts/2013/12/28/django-polymorphic-i-bulk_create/" rel="alternate"></link><updated>2013-12-28T02:39:49+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-12-28:posts/2013/12/28/django-polymorphic-i-bulk_create/</id><summary type="html">&lt;p&gt;Если модель объявлена как полиморфная (к сожалению, не может быть
наследником другой полиморфной модели, на данный момент, из-за
накладываемых библиотекой ограничений), то django-polymorphic не очень
хорошо обходится с bulk_create запросом. Оно добавляет документы, но
при попытке их извлечь выбрасывает ошибку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  File &lt;span class="pgcss-nb"&gt;&amp;quot;.../site-packages/django/db/models/query.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;366&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;get&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;model&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_meta&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;object_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;DoesNotExist&lt;/span&gt;: &lt;span class="pgcss-n"&gt;ContentType matching query does not exist.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Всё из-за того, что в таблице polymorphic_ctype_id равен NULL. Мне
пришла идея в голову, как это обойти (скорее всего, есть более красивые
варианты, хотя бы просто сделать фикс для библиотеки и отправить в
мэйнстрим):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.contrib.contenttypes.models&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;ContentType&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;materials&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;models&lt;/span&gt; &lt;span class="pgcss-k"&gt;as&lt;/span&gt; &lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt; &lt;span class="pgcss-c"&gt;# мои модели&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;tag_ctype&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;ContentType&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;objects&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get_for_model&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;new_tag&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;polymorphic_ctype&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;tag_ctype&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
                                         &lt;span class="pgcss-n"&gt;document&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;final_doc&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;weight&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-mf"&gt;0.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;mt_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Tag&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;objects&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;bulk_create&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;new_tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;all_tags&lt;/span&gt; &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;tag_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Самое важное, это получить tag_ctype объект типа контента для моего
полиморфного класса Tag. Django сохраняет это добро в таблицу
django_contenttypes. А затем для каждого объекта, предназначенного для
bulk_create, явно передать в качестве именованного параметра значение
tag_ctype.&lt;/p&gt;
</summary><category term="django-polymorphic"></category><category term="тип"></category><category term="запрос"></category><category term="polymorphic_ctype"></category><category term="bulk_create"></category><category term="модель"></category><category term="особенность"></category></entry><entry><title>ЛОР 2007</title><link href="http://imdagger.github.io/posts/2013/12/27/lor-2007/" rel="alternate"></link><updated>2013-12-27T01:59:20+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-12-27:posts/2013/12/27/lor-2007/</id><summary type="html">&lt;p&gt;Я тут случайно решил почитать свои комменты на ЛОРе … я какой-то
толстый тролль :D если бы не прочитал, что они принадлежат моему аккаунту,
то запросто мог бы подумать, что не моё. Я явно в тот момент был в
каком-то странном настроении, но в тантрум гарантированно не впадал!&lt;/p&gt;
</summary><category term="жизнь"></category><category term="аккаунт"></category><category term="лор"></category><category term="комментарии"></category><category term="2007"></category><category term="бредни"></category></entry><entry><title>django-polymorphic</title><link href="http://imdagger.github.io/posts/2013/12/25/django-polymorphic/" rel="alternate"></link><updated>2013-12-25T01:42:09+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-12-25:posts/2013/12/25/django-polymorphic/</id><summary type="html">&lt;p&gt;Обнаружилась проблема в библиотеке полиморфных моделей. При чём в
документации приведён пример, что всё должно быть хорошо, но на деле
выходит по-другому.
Даже&amp;nbsp;&lt;a class="reference external" href="https://github.com/chrisglass/django_polymorphic/issues/64"&gt;багрепорт&lt;/a&gt;
есть на GitHub, при чём свеженький. Проблема заключается в том, что код
пропускает менеджеры, которые являются в чистом виде экземплярами
PolymorphicManager, при чём &lt;a class="reference external" href="https://github.com/chrisglass/django_polymorphic/commit/78253bfe1238b5e46fed2597838427204666b5de#diff-dfb26a32320efe61614aaf8a602afd9bR152"&gt;так
задумано&lt;/a&gt;,
почему так? Точно не знаю. Ну да ладно, мы простых путей не ищем, и
объявляем наследника:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;TimeOrderedManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;CustomPolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;pass&lt;/span&gt;
&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;Project&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;PolymorphicModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;objects&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;CustomPolymorphicManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-c"&gt;# рассчитываем, что это менеджер по умолчанию&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;objects_ordered&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;TimeOrderedManager&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;       &lt;span class="pgcss-c"&gt;# а это дополнительный&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;После этого кажется, что всё работает как и требуется:
&lt;code class="code"&gt;
Project. _default _manager&lt;/code&gt;
 указывает на экземпляр
&lt;code class="code"&gt;
CustomPolymorphicManager&lt;/code&gt;
. Но достаточно унаследовать хотя бы одну модель
от Project и всё ломается:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-go"&gt;class ProjectChild(Project):&lt;/span&gt;
&lt;span class="pgcss-go"&gt;    pass&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;ProjectChild&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_default_manager&lt;/span&gt; &lt;span class="pgcss-c"&gt;# а вот это уже не порядок&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;lt;TimeOrderedManager object at 0x28d4990&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Получается, что в потомке менеджером по умолчанию стал другой
менеджер, не тот, что был в objects. Хотя ничего дополнительного не
объявлялось. И даже если снова указать принудительно objects в
ProjectChild — это &lt;strong&gt;не поможет&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;А всё вероятно потому, что в django-polymorphic есть баг с
обработкой менеджеров, которые пришли от потомка. Я обнаружил, что он их
сортирует опираясь на имя, что не хорошо без учёта &lt;code class="code"&gt;
creation _counter&lt;/code&gt;

параметра. После вот такой правки в base.py код выздоровел:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt;         &lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sorted&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;startswith&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]))&lt;/span&gt;
&lt;span class="pgcss-o"&gt;---&lt;/span&gt;
&lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt;         &lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;sorted&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;add_managers&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;startswith&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;creation_counter&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;item&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Попробую её продвинуть в мэйнстрим. Хотя может это и не полное
решение, но как мне кажется, необходимо при сортировке сначала отправить
в конец всё, что начинается с нижнего подчёркивания, ну а на следующем
уровне ориентироваться уже на индекс менеджера.&lt;/p&gt;
</summary><category term="менеджер"></category><category term="ошибка"></category><category term="библиотека"></category><category term="django-polymorphic"></category><category term="модель"></category></entry><entry><title>Дополнительное место на Я.Диске</title><link href="http://imdagger.github.io/posts/2013/12/23/dopolnitelnoe-mesto-na-iadiske/" rel="alternate"></link><updated>2013-12-23T11:52:45+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-12-23:posts/2013/12/23/dopolnitelnoe-mesto-na-iadiske/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Неплохо, 7 лет почте и мне подарили 7ГБ на Яндекс.Диске. Теперь у
меня там побольше места, чтобы развернуться, а то я 90% успел заполнить
и синхронизировать туда документы средней важности. Важные я всё равно
сначала шифрую до синхронизации.&lt;/p&gt;
</summary><category term="место"></category><category term="почта"></category><category term="жизнь"></category><category term="я.диск"></category><category term="подарок"></category></entry><entry><title>dict-set vs hash-set</title><link href="http://imdagger.github.io/posts/2013/12/16/dict-set-vs-hash-set/" rel="alternate"></link><updated>2013-12-16T14:46:15+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-12-16:posts/2013/12/16/dict-set-vs-hash-set/</id><summary type="html">&lt;p&gt;Или я не умею варить generics структуры, которые надстроены над
базовыми типами или они не достаточно оптимально
написаны/оптимизируются. Т.к. разрыв по времени довольно большой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-o"&gt;#hash&lt;/span&gt;&lt;span class="pgcss-p"&gt;())&lt;/span&gt;

&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;dict-set&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;13728&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;13695&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;128&lt;/span&gt;

&lt;span class="pgcss-nb"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;time&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;in-range&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)])&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;hash-set&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;span class="pgcss-n"&gt;cpu&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;376&lt;/span&gt; &lt;span class="pgcss-n"&gt;real&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;375&lt;/span&gt; &lt;span class="pgcss-n"&gt;gc&lt;/span&gt; &lt;span class="pgcss-n"&gt;time:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Всё таки, различие почти 40x. И аналогичная ситуация для
мутабельного словаря. Я конечно понимаю, что dict-set никак не может
отработать также быстро как hash-set, ибо у него есть дополнительный
функционал и проверки связанные с его универсальностью, но всё же
отличие в 40 раз это для меня слишком, я бы спокойно отнёсся, если бы
было 375 и 500, но не 13695мс. Поэтому пока в критических местах, где
мне не нужна гибкость, буду использовать напрямую hash-set и др.&lt;/p&gt;
</summary><category term="hash"></category><category term="проблема"></category><category term="производительность"></category><category term="сравнение"></category><category term="dict"></category><category term="racket"></category><category term="generics"></category><category term="словарь"></category></entry><entry><title>Обновление</title><link href="http://imdagger.github.io/posts/2013/12/09/obnovlenie/" rel="alternate"></link><updated>2013-12-09T02:18:57+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-12-09:posts/2013/12/09/obnovlenie/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; С обновлением Racket с версии 5.3.5.1 до 6.0.0.1 полечилась проблема
с demod, который в старой версии сжирал ~4Гб оперативной памяти и за ним
приходил OOM-killer. Новая версия отъела 400-500Мб отработала минут 7 на
1 ядре и выдала монолитный модуль без деления, что и требовалось от
него.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="программирование"></category><category term="demodularize"></category><category term="racket"></category><category term="обновление"></category><category term="demod"></category></entry><entry><title>struct*</title><link href="http://imdagger.github.io/posts/2013/11/30/struct/" rel="alternate"></link><updated>2013-11-30T15:15:18+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-30:posts/2013/11/30/struct/</id><summary type="html">&lt;p&gt;Было приятно то, что в Racket в библиотеке пэттерн мэтчинга ко всему
множеству, что там есть, присутствует возможность задать шаблон
&lt;a class="reference external" href="http://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket/match..rkt%29._struct*%29%29"&gt;частичной
структурой&lt;/a&gt;,
т.е. не требуя от структуры наличия всех полей, а только тех, что
необходимы:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;struct&lt;/span&gt; &lt;span class="pgcss-n"&gt;s&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;a&lt;/span&gt; &lt;span class="pgcss-n"&gt;b&lt;/span&gt; &lt;span class="pgcss-n"&gt;c&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;data&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;list&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;s&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;match-define&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;list&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;struct*&lt;/span&gt; &lt;span class="pgcss-n"&gt;s&lt;/span&gt; &lt;span class="pgcss-p"&gt;{[&lt;/span&gt;&lt;span class="pgcss-n"&gt;a&lt;/span&gt; &lt;span class="pgcss-n"&gt;av&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;b&lt;/span&gt; &lt;span class="pgcss-n"&gt;bv&lt;/span&gt;&lt;span class="pgcss-p"&gt;]})&lt;/span&gt; &lt;span class="pgcss-k"&gt;_&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;data&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-c1"&gt;;; теперь в av и bv соответственно 1 и 2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="struct*"></category><category term="pattern"></category><category term="программирование"></category><category term="matching"></category><category term="racket"></category><category term="структура"></category><category term="шаблон"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/11/27/urn:ya.ru:post/22199227/1889/" rel="alternate"></link><updated>2013-11-27T14:05:54+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-27:posts/2013/11/27/urn:ya.ru:post/22199227/1889/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Зима на носу. Я смотрю по городу начали усерднее укладывать асфальт
и менять трубы с горячей водой. Ну что ж… всё верно, всё по фэн-шуй.&lt;/p&gt;
</summary><category term="dura lex"></category><category term="жизнь"></category><category term="бредни"></category></entry><entry><title>Из детства</title><link href="http://imdagger.github.io/posts/2013/11/22/iz-detstva/" rel="alternate"></link><updated>2013-11-22T00:33:17+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-22:posts/2013/11/22/iz-detstva/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Смешно вспоминать, но когда-то, когда мне было 11 лет; не осилив в
книге по Pascal часть в ООП и Turbo Vision (да, та самая клёвая книжка
от Фаронова, у меня и вторая часть есть), я думал, что ООП это нечто,
что позволит мне отрисовывать быстрее графику на EC1842 через библиотеку
Graph. Ну да.. наивно, но что ж поделаешь, если там пример для ООП был
нескучный с графикой и отрисовкой НЛО. Это потом уже, после прочтения
второй книги стало ясно, что по-любому нужен прямой доступ к контроллеру
и управление VGA контроллером, чтобы добиться максимума скорости.&lt;/p&gt;
</summary><category term="воспоминание"></category><category term="жизнь"></category><category term="детство"></category><category term="ооп"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/11/19/urn:ya.ru:post/22199227/1887/" rel="alternate"></link><updated>2013-11-19T02:57:23+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-19:posts/2013/11/19/urn:ya.ru:post/22199227/1887/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В следующий раз не буду тратить время на написание своего граббера,
а возьму сразу
&lt;a class="reference external" href="http://doc.scrapy.org/en/latest/intro/overview.html"&gt;Scrapy&lt;/a&gt;, т.к.
всё равно пришёл к нему. Ибо расширяется он легко, куча всяких опций и
рычагов управления, и свистелок из коробки.&lt;/p&gt;
</summary><category term="python"></category><category term="краулер"></category><category term="программирование"></category><category term="сайт"></category><category term="scrapy"></category></entry><entry><title>Посылка</title><link href="http://imdagger.github.io/posts/2013/11/12/post-pi2/" rel="alternate"></link><updated>2013-11-12T00:38:41+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-12:posts/2013/11/12/post-pi2/</id><summary type="html">&lt;p&gt;Наконец-то я вижу посылку в терминале PI 2. Почти целый месяц
пролежала в Бельгии на международном сортировочном центре.&lt;/p&gt;
</summary><category term="радость"></category><category term="посылка"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/11/11/urn:ya.ru:post/22199227/1885/" rel="alternate"></link><updated>2013-11-11T00:01:29+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-11:posts/2013/11/11/urn:ya.ru:post/22199227/1885/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Случайно увидел по телеку передачу «Куб», получил глубокое
повреждение мозга. Это что за треш, угар и содомия? Ну, просто, рука
лицо и ещё раз, рука лицо.&lt;/p&gt;
</summary><category term="ужас"></category><category term="жизнь"></category><category term="бредни"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/11/06/urn:ya.ru:post/22199227/1881/" rel="alternate"></link><updated>2013-11-06T03:41:11+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-11-06:posts/2013/11/06/urn:ya.ru:post/22199227/1881/</id><summary type="html">&lt;p&gt;Забавно наблюдать, как моя посылка идёт из Китая через Бельгию Лишь бы
не потеряли.&lt;/p&gt;
</summary><category term="почта"></category><category term="жизнь"></category><category term="посылка"></category></entry><entry><title>Авторизация для нескольких сайтов на Django</title><link href="http://imdagger.github.io/posts/2013/10/20/avtorizatsiia-dlia-neskolkikh-saitov-na-django/" rel="alternate"></link><updated>2013-10-20T01:02:48+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-10-20:posts/2013/10/20/avtorizatsiia-dlia-neskolkikh-saitov-na-django/</id><summary type="html">&lt;p&gt;Обдумав разные варианты общей авторизации для разрабатываемых и
поддерживаемых мной сервисов, я решил, что оптимальнее всего будет
использовать OAuth2 для этих целей. Ибо вариант с синхронизацией
пользователей для двух сервисом может и подходит, но когда их количество
увеличивается и будет увеличиваться, при чём разного формата, то
синхронизация начнёт приносить всё больше боли. И в течение нескольких
дней я воплотил общую авторизацию на основе OAuth2 в жизнь для двух
сервисов (благо для django есть и provider модуль и social auth модули).
При чём, старый способ авторизации для основного сервиса пока продолжает
работать, а новый в режиме испытания. Пришлось только немного пошаманить
над&amp;nbsp;&lt;a class="reference external" href="http://django-oauth2-provider.readthedocs.org/"&gt;django-oauth2-provider&lt;/a&gt;
и подсмотреть как сделать клиента на основе
&lt;a class="reference external" href="http://django-social-auth.readthedocs.org/"&gt;django-social-auth&lt;/a&gt;. Для
провайдера особых телодвижений не нужно, почти всё из коробки (только в
моём случае есть свои особенности связанные с поддоменами):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;req.txt:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;django&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;oauth2&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;provider&lt;/span&gt;
&lt;span class="pgcss-n"&gt;django&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;social&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-n"&gt;auth&lt;/span&gt; &lt;span class="pgcss-c"&gt;# если требуется связывать свою авторизацию со сторонней&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;settings.py:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;provider&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;provider.oauth2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;social_auth&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# а это для того, чтобы провайдер умел&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# подключать к своей авторизации другие сети (ВК, Я.ру&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# и Facebook и т.д.), всё из коробки и даже больше&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;mainauth/urls.py:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_85074384"data-toggle="collapse"&gt;исходник сниппета urls.py&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85074384"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;patterns&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;include&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;url&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.conf&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;settings&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-n"&gt;urlpatterns&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;patterns&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^accounts/profile/$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;mainauth.views.index&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;show_profile&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;django.contrib.auth.views.login&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;template_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;auth_service/login.html&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^logout/$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;django.contrib.auth.views.logout&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;next_page&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;logout&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;

    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^api/me$&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;mainauth.views.describe_me&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;name&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;api_me&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^oauth2/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;include&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;provider.oauth2.urls&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;namespace&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;oauth2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)),&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;mainauth/views.py:&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_72002448"data-toggle="collapse"&gt;исходник сниппета views.py&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_72002448"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;annoying.decorators&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;render_to&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;ajax_request&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.views.decorators.csrf&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;csrf_exempt&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;provider.oauth2&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;models&lt;/span&gt; &lt;span class="pgcss-k"&gt;as&lt;/span&gt; &lt;span class="pgcss-n"&gt;oauth_models&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-nd"&gt;@ajax_request&lt;/span&gt;
&lt;span class="pgcss-nd"&gt;@csrf_exempt&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;describe_me&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;request&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;token_str&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;request&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;GET&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;oauth_token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;try&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;token&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;oauth_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;AccessToken&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;objects&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get_token&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;token_str&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;except&lt;/span&gt; &lt;span class="pgcss-n"&gt;oauth_models&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;AccessToken&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;DoesNotExist&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;rc&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;Wrong access token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;user&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;token&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;user&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;rc&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# естественно mydomain.com это просто пример&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# как и генерация уникального хеша для user.profile&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;urn:mydomain.com:{0}&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;profile&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;hashcode&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;username&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;first_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;last_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;email&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;staff&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;is_staff&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;super&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;is_superuser&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
            &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;}&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;В админке провайдера нужно будет создать экземпляр модели Client из
раздела OAuth2. Для каждого сайта свой, коллбэк (или URI
перенаправления) будет формата
&lt;a class="reference external" href="http://"&gt;http://&lt;/a&gt;&lt;em&gt;наш-домен&lt;/em&gt;/auth/complete/&lt;em&gt;mymegaconn&lt;/em&gt;/. Где &lt;em&gt;наш-домен&lt;/em&gt; и
&lt;em&gt;mymegaconn&lt;/em&gt; (про него будет понятно далее по тексту) нужно заменить на
своё.&lt;/p&gt;
&lt;p&gt;А для всех сервисов, которые будут использовать авторизацию
корневого сервиса, нужно также сделать классы для обработки OAuth2
новоиспечённого провайдера и получение данных через его API. В
настройках settings.py (или в компоненте настройки, если вдруг
используется
&lt;a class="reference external" href="https://github.com/2general/django-split-settings/"&gt;django-split-settings&lt;/a&gt;,
как делаю я) нужно указать параметры клиента (которые были сгенерированы
ранее в админке):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;social_auth&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# и не забыть добавить django-social-auth в зависимости&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;AUTHENTICATION_BACKENDS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;приложение.MyMegaConnAuthBackend&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# наш специальный класс для авторизации по OAuth2&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# конечно же MYMEGACONN нужно заменить на своё осмысленное&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;наш-домен&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_APP_ID&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;5bcdda....&amp;#39;&lt;/span&gt;                  &lt;span class="pgcss-c"&gt;# fill this in the local settings&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_API_SECRET&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;a3fef...&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_USERNAME_IS_FULL_EMAIL&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Чтобы URL-ы работали как требуется, не забываем добавить по views.py
приложения строку с включением из social_auth:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;r&amp;#39;^auth/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;include&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;social_auth.urls&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)),&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ну и конечно же сам класс MyMegaConnAuthBackend и его помощники (по
образу и подобию social_auth.backends.contrib.yandex.YaruAuth):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;requests&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;django.conf&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;settings&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;social_auth&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;utils&lt;/span&gt; &lt;span class="pgcss-k"&gt;as&lt;/span&gt; &lt;span class="pgcss-n"&gt;auth_utils&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;social_auth&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;backends&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;MyMegaConnAuthBackend&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;backends&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;OAuthBackend&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;name&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;mymegaconn&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;EXTRA_DATA&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;expires&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;auth_utils&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;setting&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;SOCIAL_AUTH_EXPIRATION&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;expires&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;]&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;get_user_details&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;first_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;last_name&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;is_superuser&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;super&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;is_staff&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;staff&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;}&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;MyMegaConnAuth&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;backends&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;BaseOAuth2&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;AUTHORIZATION_URL&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;http://{0}/oauth2/authorize&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;ACCESS_TOKEN_URL&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;http://{0}/oauth2/access_token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;AUTH_BACKEND&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;MyMegaConnAuthBackend&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;SETTINGS_KEY_NAME&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;MYMEGACONN_APP_ID&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;SETTINGS_SECRET_NAME&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;MYMEGACONN_API_SECRET&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-c"&gt;# довольно важный параметр&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;REDIRECT_STATE&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;False&lt;/span&gt; &lt;span class="pgcss-c"&gt;# т.к. наш oauth2 провайдер не ожидает дополнительных параметров&lt;/span&gt;

    &lt;span class="pgcss-nd"&gt;@property&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;get_api_url&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;http://{0}/api/me&amp;#39;&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;format&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;MYMEGACONN_AUTH_DOMAIN&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;user_data&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;access_token&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;response&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt;&lt;span class="pgcss-n"&gt;args&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;answer&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;post&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get_api_url&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;params&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;oauth_token&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;access_token&lt;/span&gt;&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;json&lt;/span&gt;&lt;span class="pgcss-p"&gt;()[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;

&lt;span class="pgcss-n"&gt;BACKENDS&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;mymegaconn&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;MyMegaConnAuth&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Чтобы использовать всё это счастье в шаблонах достаточно
воспользоваться стандарным набором, который предоставляет
django-social-auth. Т.к. только что был показан бэкенд для него и он
будет импортирован и зарегистрирован в social_auth под именем
&lt;em&gt;mymegacon&lt;/em&gt;. Ведь он был добавлен в settings.py в
AUTHENTICATION_BACKENDS. Библиотека рекомендует использовать вот такую
конструкцию для получения ссылки, по которой начнётся подключение,
используя OAuth2, с указанным в бэкенде сервером, по заданному адресу:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;некий.html:&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;нужный-тег его-аттрибут=&amp;quot;&lt;strong&gt;{% url 'socialauth_begin' 'mymegaconn' %}&lt;/strong&gt;&amp;quot; …&amp;gt;…&amp;lt;/нужный-тег&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Всё это довольно легко и работает на ура. На каждом сайте есть свой
User, который привязан к UserSocialAuth. Нужно только не забыть все
шаблоны, которые не устраивают и коробки (их вид, текст), переопределить
на свои. Информация с центрального сервера авторизации обновляется на
клиентах. Можно регулировать время выдачи тикетов, прав доступа, на
каждом сайте у пользователя доступны свои специфические профили.&lt;/p&gt;
</summary><category term="сервис"></category><category term="Django"></category><category term="сайт"></category><category term="авторизация"></category><category term="python"></category><category term="разделение"></category><category term="django-oauth2-provider"></category><category term="django-social-auth"></category><category term="OAuth2"></category><category term="пользователь"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/10/11/urn:ya.ru:post/22199227/1874/" rel="alternate"></link><updated>2013-10-11T02:27:09+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-10-11:posts/2013/10/11/urn:ya.ru:post/22199227/1874/</id><summary type="html">&lt;p&gt;Если есть по наследству Django 1.4 (как у меня), то лучше не забыть
и перепроверить, а указан ли параметр STORAGE_ENGINE для MySQL. Иначе
вдруг окажется, что работаем с MySQL версии 5.1 под CentOS (как в моём
случае) и там по умолчанию движок MyISAM, который не поддерживает
транзакции. Что может оказаться сюрпризом, когда &lt;code class="code"&gt;
with
transaction.commit _on _success()&lt;/code&gt;
 не срабатывает ожидаемым образом.
Поэтому пришлось прописать &lt;code class="code"&gt;
'STORAGE _ENGINE': 'INNODB'&lt;/code&gt;
 и сконвертировать
старые таблицы используя &lt;code class="code"&gt;
ALTER TABLE  `таблица ` ENGINE = InnoDB;&lt;/code&gt;
 Можно
было и настройки MySQL поменять, но лучше конечно же перестраховаться, и
в коде тоже выставить требование по движку базы.&lt;/p&gt;
</summary><category term="проблема"></category><category term="Django"></category><category term="транзакция"></category><category term="1.4"></category><category term="MyISAM"></category><category term="python"></category><category term="MySQL"></category><category term="InnoDB"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/10/03/urn:ya.ru:post/22199227/1873/" rel="alternate"></link><updated>2013-10-03T04:34:59+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-10-03:posts/2013/10/03/urn:ya.ru:post/22199227/1873/</id><summary type="html">&lt;p&gt;Наткнулся на криво настроенный сайт, но я думаю он не единственный
такой и с него мне тоже нужно тащить страницы. Он возвращает заголовок
Content-Encoding равный gzip, а сами данные не ужимает, а оставляет как
есть. Естественно библиотеке requests от этого сносит башню с ошибкой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  File &lt;span class="pgcss-nb"&gt;&amp;quot;.../requests/packages/urllib3/response.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;225&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;stream&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;data&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;read&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;amt&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;amt&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;decode_content&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;decode_content&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  File &lt;span class="pgcss-nb"&gt;&amp;quot;.../requests/packages/urllib3/response.py&amp;quot;&lt;/span&gt;, line &lt;span class="pgcss-m"&gt;193&lt;/span&gt;, in &lt;span class="pgcss-n"&gt;read&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;e&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;requests.packages.urllib3.exceptions.DecodeError&lt;/span&gt;: &lt;span class="pgcss-n"&gt;(&amp;#39;Received response with&lt;/span&gt;
&lt;span class="pgcss-x"&gt;            content-encoding: , but failed to decode it.&amp;#39;, error(&amp;#39;Error -3&lt;/span&gt;
&lt;span class="pgcss-x"&gt;            while decompressing: incorrect header check&amp;#39;,))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но, т.к. я делаю обычный GET запрос и оставляю заговоловки на
усмотрение &lt;em&gt;requests&lt;/em&gt;, то он не требует от сайта принудительного
text/html. Поэтому я добавил принудительный Accept-Encoding, что дало
положительный результат. Забываю всё время про него, т.к. без параметра
headers короче писать запрос.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;page&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;resource&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;url&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;stream&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;True&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;User-Agent&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;Some bot&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;Accept-Encoding&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;Accept&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;text/*&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;С указанием identity стало полегче, но на всякий случай есть ещё
&lt;code class="code"&gt;
page.raw.stream(decode _content=False)&lt;/code&gt;
, для тех, кому вообще
декодирование противопоказанно и точно нужны сырые данные. Только в
таком случае &lt;code class="code"&gt;
stream=True&lt;/code&gt;
 для запроса обязателен.&lt;/p&gt;
</summary><category term="encoding"></category><category term="сайт"></category><category term="gzip"></category><category term="identity"></category><category term="requests"></category><category term="HTTP"></category><category term="python"></category><category term="особенность"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/09/27/urn:ya.ru:post/22199227/1870/" rel="alternate"></link><updated>2013-09-27T16:22:01+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-09-27:posts/2013/09/27/urn:ya.ru:post/22199227/1870/</id><summary type="html">&lt;p&gt;При использовании чистого Gunicorn для работы с формой из тела
запроса не стоит забывать указывать отдельно параметр файлового
указателя данных &lt;code class="code"&gt;
env['wsgi.input']&lt;/code&gt;
, даже не смотря на то, что
переменные среды передаются в этот же класс. Т.к. по умолчанию параметр
fp равен sys.stdin, т.е. чтение из стандартного потока ввода (в моём
случае терминала).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;cgi&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;application&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;start_response&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;status&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;200 OK&amp;#39;&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;cgi&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;FieldStorage&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fp&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;wsgi.input&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt; &lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-n"&gt;output&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="параметры"></category><category term="python"></category><category term="gunicorn"></category><category term="форма"></category><category term="CGI"></category></entry><entry><title>Ошибка обработки фильтрации отправителя сигнала в Celery</title><link href="http://imdagger.github.io/posts/2013/09/25/oshibka-obrabotki-filtratsii-otpravitelia-signala-v-celery/" rel="alternate"></link><updated>2013-09-25T23:38:34+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-09-25:posts/2013/09/25/oshibka-obrabotki-filtratsii-otpravitelia-signala-v-celery/</id><summary type="html">&lt;p&gt;Похоже на то, что в обработчике сигналов в Celery есть проблемное
место. Код для сигналов &lt;code class="code"&gt;
celery.utils.dispatch.signals&lt;/code&gt;
 взят из Django,
но в Django в роли sender выступает обычно класс, при чём этот класс в
единственном экземпляре. Т.к. веб сервер довольно таки самодостаточный
процесс. А вот в Celery явно выделяется обработчик запроса и
отправитель. При чём это могут быть два разных процесса, которые
естественно не разделяют интерпретатор, память и могут быть на разных
узлах.&lt;/p&gt;
&lt;p&gt;Так вот обработчик для сигналов &lt;code class="code"&gt;
task _sent&lt;/code&gt;
 вызывается на стороне
отправителя, а некоторые другие сигналы на принимающей стороне. Видимо
это стало причиной, что &lt;em&gt;sender&lt;/em&gt; в Celery содержит строку — название
отправителя. Только вот две одинаковые строки не обязаны иметь
одинаковый &lt;strong&gt;id&lt;/strong&gt;, особенно если они из разных модулей или получены
разными путями, ведь это два разных объекта. Но в документации к Celery
есть смутное
&lt;a class="reference external" href="http://docs.celeryproject.org/en/latest/userguide/signals.html#basics"&gt;упоминание&lt;/a&gt;,
что можно включить фильтр по sender при регистрации обработчика сигнала,
что в принципе не работает:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some signals also have a sender which you can filter by. For example
the
&lt;a class="reference external" href="http://docs.celeryproject.org/en/latest/userguide/signals.html#std:signal-task_sent"&gt;task_sent&lt;/a&gt;
signal uses the task name as a sender, so you can connect your
handler to be called only when tasks with name “tasks.add” has been
sent by providing the sender argument to
&lt;a class="reference external" href="http://docs.celeryproject.org/en/latest/internals/reference/celery.utils.dispatch.signal.html#celery.utils.dispatch.signal.Signal.connect"&gt;connect&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nd"&gt;@task_sent.connect&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sender&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;tasks.add&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;task_sent_handler&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sender&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;task_id&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;task&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;args&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;kwargs&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;**&lt;/span&gt;&lt;span class="pgcss-n"&gt;kwds&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Got signal task_sent for task id &lt;/span&gt;&lt;span class="pgcss-si"&gt;%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;task_id&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;А не работает потому, что код диспетчера преобразует отправителя в
идентификатор, который затем и сравнивает:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;_make_id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;  &lt;span class="pgcss-c"&gt;# pragma: no cover&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;im_func&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;im_self&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt; &lt;span class="pgcss-nb"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;im_func&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-nb"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;target&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Эта функция используется для трансляции вида: отправитель →
уникальное число; только вот так нельзя делать из-за того, что для строк
это не очень работает. Для классов да, неплохо работает. Но Celery всё
же отправляет строку. Поэтому до решения проблемы лучше писать
обработчик вида:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nd"&gt;@task_success.connect&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-err"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;sender&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
        &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Или похакать модуль и добавить туда hash вместо id, но это только
если тип хешируемый.&lt;/p&gt;
</summary><category term="Celery"></category><category term="ошибка"></category><category term="обработчик"></category><category term="отправка"></category><category term="python"></category><category term="сигнал"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/09/05/urn:ya.ru:post/22199227/1863/" rel="alternate"></link><updated>2013-09-05T01:52:32+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-09-05:posts/2013/09/05/urn:ya.ru:post/22199227/1863/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Возможно ли совершить правильное разрезание арбуза такое, что все
косточки каждого куска окажутся на переферии одной стороны, позволяя их
удалить одним движением руки?&lt;/p&gt;
</summary><category term="Я"></category><category term="жизнь"></category><category term="еда"></category><category term="мысль"></category></entry><entry><title>Обслуживание</title><link href="http://imdagger.github.io/posts/2013/09/02/obsluzhivanie/" rel="alternate"></link><updated>2013-09-02T15:28:20+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-09-02:posts/2013/09/02/obsluzhivanie/</id><summary type="html">&lt;p&gt;Ого… в центральном отделении (филиал №300, что на Фрунзе)
Беларусбанка оказывается… Автоматизированная очередь. А я колхозник чуть
в кабинку не зашёл по привычке :D Хорошо, что заподозрил неладное, ведь
другие люди сидят, а кабинки пустые. Через пару минут я услышал
роботизированный голос, который назвал номер билета и номер кабины, куда
отправился человек. После этого мне быстренько пришлось поискать, где же
они берут эти билеты. Клёво то, что их тоже выдаёт автомат. Вот бы везде
в городе так очереди обрабатывались.&lt;/p&gt;
</summary><category term="жизнь"></category><category term="банк"></category><category term="радость"></category><category term="любопытно"></category><category term="обслуживание"></category><category term="автоматизация"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/08/28/urn:ya.ru:post/22199227/1855/" rel="alternate"></link><updated>2013-08-28T02:06:37+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-28:posts/2013/08/28/urn:ya.ru:post/22199227/1855/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Поставил Yandex-Disk консольную версию, просто и удобно
использовать. Можно будет билды синхронизировать в него и часть
некритических, но важных для меня документов. У меня и Dropbox есть, им
тоже пользуюсь, Яндекс.Диск пока пробую.&lt;/p&gt;
</summary><category term="Яндекс"></category><category term="облако"></category><category term="linux"></category><category term="хранилище"></category><category term="клиент"></category><category term="диск"></category><category term="консоль"></category></entry><entry><title>Покрытие БелТелеКом ??</title><link href="http://imdagger.github.io/posts/2013/08/22/pokrytie-beltelekom/" rel="alternate"></link><updated>2013-08-22T15:50:51+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-22:posts/2013/08/22/pokrytie-beltelekom/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Я думал, что у БелТелеКома покрытие только в областных городах
слабое. Но вот я в Минске, и истоптав ноги я не нашёл ничего
подходящего, чтобы можно было посидеть и использовать их соединение.
Приходится сидеть в подземке, где ловит их WiFi&lt;/p&gt;
</summary><category term="белтелеком"></category><category term="wifi"></category><category term="покрытие"></category><category term="плохо"></category><category term="грусть"></category></entry><entry><title>Обновление Emacs до 24.3.50.2 и пакет melpa.el</title><link href="http://imdagger.github.io/posts/2013/08/16/obnovlenie-emacs-do-243502-i-paket-melpael/" rel="alternate"></link><updated>2013-08-16T02:27:16+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-16:posts/2013/08/16/obnovlenie-emacs-do-243502-i-paket-melpael/</id><summary type="html">&lt;p&gt;Т.к. я пользуюсь development версией Emacs, то в ней появляются
самые свежие новинки постоянно, и они иногда ломают внутренний API так,
что плагины ещё к нему не готовы, ибо плагины ориентируются на
стабильную версию. Пакет melpa довольно давно не обновлялся и прекрасно
работал до версии Emacs 24.3.50.2, а вот уже в ней функцию
&lt;code class="code"&gt;
package-desc-vers&lt;/code&gt;
 разбили на &lt;code class="code"&gt;
package-desc-version&lt;/code&gt;
 и
&lt;code class="code"&gt;
package--ac-desc-version&lt;/code&gt;
 (до этого были только предупреждения от
редактора). И это вызвало ошибку при загрузке melpa, что повлекло ошибки
при попытке обновить пакеты. Поэтому пришлось немного подправить руками
код melpa, как
например&amp;nbsp;&lt;a class="reference external" href="https://github.com/LiaoPengyu/emacs.d/commit/fc7a6fedb5c496c613d6d19a4fcdab18b36a8d87"&gt;сделал&lt;/a&gt;
другой человек для своей функции:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;funcall&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;fboundp&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;package-desc-version&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-ss"&gt;&amp;#39;package--ac-desc-version&lt;/span&gt;
           &lt;span class="pgcss-ss"&gt;&amp;#39;package-desc-vers&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
         &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;cdr&lt;/span&gt; &lt;span class="pgcss-nc"&gt;package&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Если &lt;code class="code"&gt;
package-desc-version&lt;/code&gt;
 объявлена, то используем
&lt;code class="code"&gt;
package--ac-desc-version&lt;/code&gt;
 (т.к. это unstable версия Emacs), а если нет, то
по старинке.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="emacs"></category><category term="melpa"></category><category term="новый"></category><category term="версия"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/08/15/urn:ya.ru:post/22199227/1849/" rel="alternate"></link><updated>2013-08-15T02:15:33+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-15:posts/2013/08/15/urn:ya.ru:post/22199227/1849/</id><summary type="html">&lt;p&gt;Хм.. базовый комплект Avira подорожал на 4 евро, хотя ещё в мае был
15.95, а сейчас продают уже его по 19.95.&lt;/p&gt;
</summary><category term="avira"></category><category term="лицензия"></category><category term="подорожание"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/08/12/urn:ya.ru:post/22199227/1848/" rel="alternate"></link><updated>2013-08-12T03:04:53+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-12:posts/2013/08/12/urn:ya.ru:post/22199227/1848/</id><summary type="html">&lt;p&gt;Закончился ICFP Programming Contest 2013. В этот раз я даже смог
чего-то нарешать :) Только жалко, что ступил и не запустил мой решатель для
больших параметров, я боялся, что он по времени задачи крупные не
поднимет, а он всё же некоторые поднимал. Но я это поздно заметил. В
общем в этот раз я первый раз выступил так, что сам доволен :)&lt;/p&gt;
</summary><category term="соревнование"></category><category term="радость"></category><category term="программирование"></category><category term="icfpc"></category></entry><entry><title>Закончился лайт раунд</title><link href="http://imdagger.github.io/posts/2013/08/10/zakonchilsia-lait-raund/" rel="alternate"></link><updated>2013-08-10T03:12:31+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-10:posts/2013/08/10/zakonchilsia-lait-raund/</id><summary type="html">&lt;p&gt;В принципе мысли у меня появились только спустя часов 16 от начала
контеста, поэтому я код быстренько набросал в Racket, и когда
почувствовал, что не влажу в лайт раунд, а прога у меня частично
работает, но требует ручного вмешательства, то я быстренько с ней
скооперировался и наклепал сколько смог очков для себя. Хотя бы буду не
последним в лайт раунде (надеюсь) :), а то вон есть ребята даже
спрашивают, и им не понятен tfold из условия, а там вроде всё достаточно
чётко сказано. С первого раза обратил на него внимание. Плохо только,
что у меня нет опыта работы с HTTP из Racket, но благо дока есть
встроенная.&lt;/p&gt;
</summary><category term="программирование"></category><category term="соревнование"></category><category term="радость"></category><category term="racket"></category><category term="icfpc"></category><category term="Я"></category><category term="устал"></category></entry><entry><title>Начало ICFPC 2013</title><link href="http://imdagger.github.io/posts/2013/08/06/nachalo-icfpc-2013/" rel="alternate"></link><updated>2013-08-06T17:26:15+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-06:posts/2013/08/06/nachalo-icfpc-2013/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Осталось всего чуть-чуть до начала ICFP Programming Contest 2013. И
до конца регистрации тоже, но я уже давно зарегистрировался (надеюсь,
что я ничего не напутал при регистрации).&lt;/p&gt;
</summary><category term="программирование"></category><category term="соревнование"></category><category term="2013"></category><category term="фунциональный"></category><category term="icfpc"></category><category term="конкурс"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/08/05/urn:ya.ru:post/22199227/1845/" rel="alternate"></link><updated>2013-08-05T01:22:42+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-05:posts/2013/08/05/urn:ya.ru:post/22199227/1845/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; С этими переименованиями в советское время так намудрили, что под
Гомелем, где ни плюнь, что-нибудь Красное. И приходится запоминать, что
Красный Богатырь это рядом с Красным, но совсем далеко от Красного
Маяка, хотя не очень далеко от Красного Октября. А ещё я вечно забываю,
Большевик он Красный или нет?! Нет, выходит большевик у нас простой. А
вот Красных Маяков аж целых два. Так и запутаться недолго.&lt;/p&gt;
</summary><category term="город"></category><category term="район"></category><category term="название"></category><category term="переименование"></category><category term="Гомель"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/08/02/urn:ya.ru:post/22199227/1844/" rel="alternate"></link><updated>2013-08-02T16:16:22+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-02:posts/2013/08/02/urn:ya.ru:post/22199227/1844/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Люблю небольшие отделения банков, где небольшой поток людей. Там и
персонал добрый и всё по-домашнему. Пошёл получать в этот раз свой
Virtuon в отделении на пр. Октября, в этот раз мне и позвонили заранее,
сказали про карточку и разъяснили, когда у них обед и выходные.
Обслужили быстро и без проблем. А вот, когда я в центральном на
Советской забирал, то позвонили только, когда уже прошёл месяц, так ещё
и оказалось, что платить нужно в одном месте, а получать в другом, а это
было два разных этажа.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; Буду теперь всё время забирать на пр. Октября, тут ближе (можно
пешком дойти от дома) и приятнее.&lt;/p&gt;
</summary><category term="жизнь"></category><category term="банк"></category><category term="получение"></category><category term="карта"></category><category term="virtuon"></category><category term="visa"></category></entry><entry><title>Падение Redis 2.4.10</title><link href="http://imdagger.github.io/posts/2013/08/02/padenie-redis-2410/" rel="alternate"></link><updated>2013-08-02T16:07:57+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-02:posts/2013/08/02/padenie-redis-2410/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Redis 2.4.10 почему-то стал просто умирать через некоторое время под
нагрузкой из Sentry. Я нашёл, что это возможно проблема при обработке
ключей и решил сильно много времени не тратить, а обновить уже до 2.6.13
его. Но т.к. на сервере стоит CentOS 5, то пришлось добавить репозиторий
Remi, чтобы установить версию посвежее. Пока полёт нормальный, посмотрим
дальше, т.к. раньше всё случалось где-то в момент когда база становилась
размером в 800-900 мегабайт.&lt;/p&gt;
</summary><category term="redis"></category><category term="ошибка"></category><category term="sentry"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/08/01/urn:ya.ru:post/22199227/1842/" rel="alternate"></link><updated>2013-08-01T03:01:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-08-01:posts/2013/08/01/urn:ya.ru:post/22199227/1842/</id><summary type="html">&lt;p&gt;Срок действия карты от БПС Сбербанка уже истёк, а он мне всё
продолжает присылать клиентские отчёты по почте… указывая, что у меня не
было никаких операций по карте, забавно :)&lt;/p&gt;
</summary><category term="почта"></category><category term="карта"></category><category term="банк"></category><category term="отчёт"></category></entry><entry><title>mate-maximus</title><link href="http://imdagger.github.io/posts/2013/07/26/mate-maximus/" rel="alternate"></link><updated>2013-07-26T01:17:50+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-07-26:posts/2013/07/26/mate-maximus/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; О, оказывает mate-maximus всё же настраивается. Только делать нужно
это через dconf-editor. А то мне не всегда удобно, что все окна
автоматически разворачиваются по максимуму, я привык их сам по
необходимости увеличивать. При этом я не хотел бы лишаться возможности,
чтобы заголовок окна пропадал, т.к. у на нетбуке это очень полезная
возможность. Есть опция &lt;strong&gt;org.mate.maximus.no-maximize&lt;/strong&gt;, её нужно
включить. Тогда заголовок будет пропадать у окон только при
максимизации, там же есть ещё несколько полезных параметров.&lt;/p&gt;
</summary><category term="mate"></category><category term="удобство"></category><category term="окно"></category><category term="mate-maximus"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/07/19/urn:ya.ru:post/22199227/1834/" rel="alternate"></link><updated>2013-07-19T01:57:52+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-07-19:posts/2013/07/19/urn:ya.ru:post/22199227/1834/</id><summary type="html">&lt;p&gt;При попытке установить из Marmalade (в MELPA репозитории его не
было) репозитория пакет ido-yes-or-no столкнулся с проблемой, что он в
Emacs 24.3.50.2 отказался почему-то нормально установится. Высказав мне
своё фи, плагин лишь отписал про то, что ему нужен пакет ido-0, но Emacs
такой не знает и я такой не знаю, а знаю лишь только пакет ido без
версии (по-умолчанию).&lt;/p&gt;
&lt;p&gt;Пришлось
скачать&amp;nbsp;&lt;a class="reference external" href="http://marmalade-repo.org/packages/ido-yes-or-no-1.1.el"&gt;файл&lt;/a&gt;
вручную из
&lt;a class="reference external" href="http://marmalade-repo.org/packages/ido-yes-or-no"&gt;репозитория&lt;/a&gt;. И
там была прописана зависимость: &lt;code class="code"&gt;
((ido &amp;quot;0&amp;quot;))&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;Я решил, что ничего страшного не случится, если я уберу её, т.к. на
ido-yes-or-no у меня опирается часть конфига и зависит от него через
use-package (а сам ido-yes-or-no достаточно маленький и безобидный).
Затем я просто установил пакет из файла при помощи &lt;kbd class="kbd"&gt;
M-x
package-install-file&lt;/kbd&gt;
. Десять минут, полёт нормальный.&lt;/p&gt;
</summary><category term="проблема"></category><category term="emacs"></category><category term="установка"></category><category term="ido"></category><category term="ido-yes-or-no"></category><category term="пакет"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/07/16/urn:ya.ru:post/22199227/1833/" rel="alternate"></link><updated>2013-07-16T03:28:58+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-07-16:posts/2013/07/16/urn:ya.ru:post/22199227/1833/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Проверил почти 500 разнородных сайтов с Apache и PHP, нигде нет
доступа на запись в корень для веб сервера. Это хорошо…&lt;/p&gt;
</summary><category term="apache"></category><category term="запись"></category><category term="права"></category><category term="корень"></category></entry><entry><title>Новый конфиг</title><link href="http://imdagger.github.io/posts/2013/07/10/novyi-konfig/" rel="alternate"></link><updated>2013-07-10T03:23:29+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-07-10:posts/2013/07/10/novyi-konfig/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Решил побороть лень и за 6,5 лет всё же переделать конфиг в Emacs.
Вроде всё работает как надо, но и от некоторых новых плюшек я не
отказался бы, да и 24-ая версия позволяет намного более гибко
производить загрузку дополнений. Я взял за основу один уже готовый
&lt;a class="reference external" href="https://github.com/IMDagger/dot-emacs"&gt;конфиг&lt;/a&gt;, который постепенно
переработаю под себя. Он неплохо обслуживает Python и Scheme, как раз
то, что мне нужно. Нужно будет там ещё сделать возможность деления
настроек по машинам, т.к. мне было бы удобно чтобы он сразу работал на
всех моих компьютерах.&lt;/p&gt;
</summary><category term="emacs"></category><category term="конфигурация"></category><category term="настройки"></category><category term="улучшение"></category></entry><entry><title>Переход из точки в точку</title><link href="http://imdagger.github.io/posts/2013/06/30/perekhod-iz-tochki-v-tochku/" rel="alternate"></link><updated>2013-06-30T03:03:37+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-30:posts/2013/06/30/perekhod-iz-tochki-v-tochku/</id><summary type="html">&lt;p&gt;Если задано две точки (p&lt;sub&gt;1x&lt;/sub&gt;; p&lt;sub&gt;1y&lt;/sub&gt;) с начальным
единичным вектором (t&lt;sub&gt;1x&lt;/sub&gt;; t&lt;sub&gt;1y&lt;/sub&gt;) и конечная точка
(p&lt;sub&gt;2x&lt;/sub&gt;; p&lt;sub&gt;2y&lt;/sub&gt;) с единичным вектором (t&lt;sub&gt;2x&lt;/sub&gt;;
t&lt;sub&gt;2y&lt;/sub&gt;), то возможен набор переходов при помощи двух окружностей и
отрезка из начальной точки в конечную. Отрезок расположен коллинеарно
конечному единичному вектору и заканчивается в точке (p&lt;sub&gt;2x&lt;/sub&gt;;
p&lt;sub&gt;2y&lt;/sub&gt;). Нужно вычислить его длину и ограничения для радиусов
окружностей R&lt;sub&gt;1&lt;/sub&gt; и R&lt;sub&gt;2&lt;/sub&gt; таких, что единичные вектора в
заданных точках касаются полученных окружностей. Касание может
происходить слева от вектора и справа, поэтому есть два параметра
k&lt;sub&gt;1&lt;/sub&gt; и k&lt;sub&gt;2&lt;/sub&gt;, которые могут принимать значения k&lt;sub&gt;i&lt;/sub&gt;
∈ {-1, 1}. В Maxima я смог свести поиск и решение уравнения к такой
последовательности:&lt;/p&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_82986384"data-toggle="collapse"&gt;Можно увидеть всю формулу, но не просите потом развидеть её&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_82986384"&gt;
&lt;pre class="literal-block"&gt;
(%i1) p1: [p1x, p1y];
(%o1)                             [p1x, p1y]
(%i2) p2: [p2x, p2y];
(%o2)                             [p2x, p2y]
(%i3) t1: [t1x, t1y];
(%o3)                             [t1x, t1y]
(%i4) t2: [t2x, t2y];
(%o4)                             [t2x, t2y]
(%i5) load(&amp;quot;vect&amp;quot;);

(%o5)           /usr/share/maxima/5.24.0/share/vector/vect.mac
(%i6)
Tt1: [-t1y, t1x];
(%o6)                            [- t1y, t1x]
(%i7) Tt2: [-t2y, t2x];
(%o7)                            [- t2y, t2x]
(%i8)
f: p2 - delta * t1 + k1 * R2 * Tt2 - p1 - k2 * R1 * Tt1;
(%o8) [- k1 t2y R2 + k2 t1y R1 - delta t1x + p2x - p1x,
                                 k1 t2x R2 - k2 t1x R1 - delta t1y + p2y - p1y]
(%i9) res: solve([(f . f) = (R1 + R2)^2], R2), ratsimp;
                        2     2   2    2     2
(%o9) [R2 = - (sqrt(((k1  - k1  k2  t1x ) t2y
        2   2                                     2     2   2    2     2
 + (2 k1  k2  t1x t1y t2x + 2 k1 k2 t1y) t2y + (k1  - k1  k2  t1y ) t2x
                       2    2     2    2    2
 + 2 k1 k2 t1x t2x + k2  t1y  + k2  t1x ) R1
          2              2                         2                2
 + (((2 k1  k2 p2y - 2 k1  k2 p1y) t1x - 2 delta k1  k2 t1x t1y) t2y
               2       2        2              2
 + ((2 delta k1  k2 t1y  + (2 k1  k2 p1y - 2 k1  k2 p2y) t1y
             2       2        2              2
 - 2 delta k1  k2 t1x  + (2 k1  k2 p2x - 2 k1  k2 p1x) t1x) t2x
 - 2 delta k1 t1x + 2 k1 p2x - 2 k1 p1x) t2y
              2              2              2                2
 + (2 delta k1  k2 t1x - 2 k1  k2 p2x + 2 k1  k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2   2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  k1  t1y
              2                 2              2    2       2
 + (2 delta k1  p2y - 2 delta k1  p1y) t1y - k1  p2y  + 2 k1  p1y p2y
     2    2     2              2   2                 2                 2
 - k1  p1y ) t2y  + ((- 2 delta  k1  t1x + 2 delta k1  p2x - 2 delta k1  p1x)
                  2                 2                 2           2
 t1y + (2 delta k1  p2y - 2 delta k1  p1y) t1x + (2 k1  p1x - 2 k1  p2x) p2y
       2               2
 + 2 k1  p1y p2x - 2 k1  p1x p1y) t2x t2y
           2   2    2              2                 2              2    2
 + (- delta  k1  t1x  + (2 delta k1  p2x - 2 delta k1  p1x) t1x - k1  p2x
       2             2    2     2        2    2
 + 2 k1  p1x p2x - k1  p1x ) t2x  + delta  t1y
                                          2    2
 + (2 delta p1y - 2 delta p2y) t1y + delta  t1x
                                        2                  2                  2
 + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x  - 2 p1x p2x + p1y
      2
 + p1x ) + (- k1 k2 t1y t2y - k1 k2 t1x t2x - 1) R1
 + (delta k1 t1x - k1 p2x + k1 p1x) t2y
                                              2    2     2    2
 + (- delta k1 t1y + k1 p2y - k1 p1y) t2x)/(k1  t2y  + k1  t2x  - 1),
               2     2   2    2     2        2   2
R2 = (sqrt(((k1  - k1  k2  t1x ) t2y  + (2 k1  k2  t1x t1y t2x + 2 k1 k2 t1y)
          2     2   2    2     2                       2    2     2    2    2
 t2y + (k1  - k1  k2  t1y ) t2x  + 2 k1 k2 t1x t2x + k2  t1y  + k2  t1x ) R1
          2              2                         2                2
 + (((2 k1  k2 p2y - 2 k1  k2 p1y) t1x - 2 delta k1  k2 t1x t1y) t2y
               2       2        2              2
 + ((2 delta k1  k2 t1y  + (2 k1  k2 p1y - 2 k1  k2 p2y) t1y
             2       2        2              2
 - 2 delta k1  k2 t1x  + (2 k1  k2 p2x - 2 k1  k2 p1x) t1x) t2x
 - 2 delta k1 t1x + 2 k1 p2x - 2 k1 p1x) t2y
              2              2              2                2
 + (2 delta k1  k2 t1x - 2 k1  k2 p2x + 2 k1  k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2   2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  k1  t1y
              2                 2              2    2       2
 + (2 delta k1  p2y - 2 delta k1  p1y) t1y - k1  p2y  + 2 k1  p1y p2y
     2    2     2              2   2                 2                 2
 - k1  p1y ) t2y  + ((- 2 delta  k1  t1x + 2 delta k1  p2x - 2 delta k1  p1x)
                  2                 2                 2           2
 t1y + (2 delta k1  p2y - 2 delta k1  p1y) t1x + (2 k1  p1x - 2 k1  p2x) p2y
       2               2
 + 2 k1  p1y p2x - 2 k1  p1x p1y) t2x t2y
           2   2    2              2                 2              2    2
 + (- delta  k1  t1x  + (2 delta k1  p2x - 2 delta k1  p1x) t1x - k1  p2x
       2             2    2     2        2    2
 + 2 k1  p1x p2x - k1  p1x ) t2x  + delta  t1y
                                          2    2
 + (2 delta p1y - 2 delta p2y) t1y + delta  t1x
                                        2                  2                  2
 + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x  - 2 p1x p2x + p1y
      2
 + p1x ) + (k1 k2 t1y t2y + k1 k2 t1x t2x + 1) R1
 + (- delta k1 t1x + k1 p2x - k1 p1x) t2y
                                            2    2     2    2
 + (delta k1 t1y - k1 p2y + k1 p1y) t2x)/(k1  t2y  + k1  t2x  - 1)]
(%i10) factor(ev(res, [k1^2=1, k2^2=1, 1 - t1x^2 = t1y^2,
 1 - t1y^2 = t1x^2, 1 - t2x^2=t2y^2, 1 - t2y^2 = t2x^2,
 t1y^2 + t1x^2 = 1, t2y^2 + t2x^2 = 1]));
                         2    2                                          2    2
(%o10) [R2 = - (sqrt((t1y  t2y  + (2 t1x t1y t2x + 2 k1 k2 t1y) t2y + t1x  t2x
                        2      2    2
 + 2 k1 k2 t1x t2x + t1y  + t1x ) R1  + (((2 k2 p2y - 2 k2 p1y) t1x
                          2                   2
 - 2 delta k2 t1x t1y) t2y  + ((2 delta k2 t1y  + (2 k2 p1y - 2 k2 p2y) t1y
                 2
 - 2 delta k2 t1x  + (2 k2 p2x - 2 k2 p1x) t1x) t2x - 2 delta k1 t1x + 2 k1 p2x
                                                                 2
 - 2 k1 p1x) t2y + (2 delta k2 t1x - 2 k2 p2x + 2 k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  t1y
                                        2                  2     2
 + (2 delta p2y - 2 delta p1y) t1y - p2y  + 2 p1y p2y - p1y ) t2y
              2
 + ((- 2 delta  t1x + 2 delta p2x - 2 delta p1x) t1y
 + (2 delta p2y - 2 delta p1y) t1x + (2 p1x - 2 p2x) p2y + 2 p1y p2x
                                2    2                                        2
 - 2 p1x p1y) t2x t2y + (- delta  t1x  + (2 delta p2x - 2 delta p1x) t1x - p2x
                  2     2        2    2
 + 2 p1x p2x - p1x ) t2x  + delta  t1y  + (2 delta p1y - 2 delta p2y) t1y
        2    2                                        2                  2
 + delta  t1x  + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x
                  2      2
 - 2 p1x p2x + p1y  + p1x ) - k1 k2 t1y t2y R1 - k1 k2 t1x t2x R1 - R1
 + delta k1 t1x t2y - k1 p2x t2y + k1 p1x t2y - delta k1 t1y t2x + k1 p2y t2x
                   2      2
 - k1 p1y t2x)/(t2y  + t2x  - 1), R2 =
          2    2                                          2    2
(sqrt((t1y  t2y  + (2 t1x t1y t2x + 2 k1 k2 t1y) t2y + t1x  t2x
                        2      2    2
 + 2 k1 k2 t1x t2x + t1y  + t1x ) R1  + (((2 k2 p2y - 2 k2 p1y) t1x
                          2                   2
 - 2 delta k2 t1x t1y) t2y  + ((2 delta k2 t1y  + (2 k2 p1y - 2 k2 p2y) t1y
                 2
 - 2 delta k2 t1x  + (2 k2 p2x - 2 k2 p1x) t1x) t2x - 2 delta k1 t1x + 2 k1 p2x
                                                                 2
 - 2 k1 p1x) t2y + (2 delta k2 t1x - 2 k2 p2x + 2 k2 p1x) t1y t2x
 + (2 delta k1 t1y - 2 k1 p2y + 2 k1 p1y) t2x + (2 k2 p2x - 2 k2 p1x) t1y
                                           2    2
 + (2 k2 p1y - 2 k2 p2y) t1x) R1 + (- delta  t1y
                                        2                  2     2
 + (2 delta p2y - 2 delta p1y) t1y - p2y  + 2 p1y p2y - p1y ) t2y
              2
 + ((- 2 delta  t1x + 2 delta p2x - 2 delta p1x) t1y
 + (2 delta p2y - 2 delta p1y) t1x + (2 p1x - 2 p2x) p2y + 2 p1y p2x
                                2    2                                        2
 - 2 p1x p1y) t2x t2y + (- delta  t1x  + (2 delta p2x - 2 delta p1x) t1x - p2x
                  2     2        2    2
 + 2 p1x p2x - p1x ) t2x  + delta  t1y  + (2 delta p1y - 2 delta p2y) t1y
        2    2                                        2                  2
 + delta  t1x  + (2 delta p1x - 2 delta p2x) t1x + p2y  - 2 p1y p2y + p2x
                  2      2
 - 2 p1x p2x + p1y  + p1x ) + k1 k2 t1y t2y R1 + k1 k2 t1x t2x R1 + R1
 - delta k1 t1x t2y + k1 p2x t2y - k1 p1x t2y + delta k1 t1y t2x - k1 p2y t2x
                   2      2
 + k1 p1y t2x)/(t2y  + t2x  - 1)]
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Затем я немного пошаманил руками и смог упростить уравнения до
скалярных и векторных произведений и других более удобноваримых
операций, чем работа с векторами в сыром виде:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;St: t1y * t2y + t1x * t2x;&lt;/div&gt;
&lt;div class="line"&gt;Vt: t1x * t2y-t1y * t2x;&lt;/div&gt;
&lt;div class="line"&gt;Vpt: (p2x - p1x) * t1y - (p2y - p1y) * t1x;&lt;/div&gt;
&lt;div class="line"&gt;Spt: (p2y - p1y) * t1y + (p2x - p1x) * t1x;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;L: (1 - St^2) * R2^2 + 2 * R2 * (R1 * (k1 * k2 * St + 1) + k1 * Vpt * St) -2 *k2 * Vpt * R1 - Vpt^2;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;delta1: sqrt(L) + k1 * R2 * Vt + Spt;&lt;/div&gt;
&lt;div class="line"&gt;delta2: k1 * R2 * Vt + Spt - sqrt(L);&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Кажется всё посчитано верно (два варианта решения delta1 и delta2),
я исхожу из того, что к начальной точке можно подвести одну окружность
некоторого заданного радиуса R1, а затем уже нужно построить другую
радиуса R2 так, чтобы касалась она луча исходящего в противонаправленно
конечному вектору.&lt;/p&gt;
&lt;p&gt;Я смогу вывести ограничения на R1, R2, но об этом уже потом.&lt;/p&gt;
</summary><category term="окружность"></category><category term="вычисление"></category><category term="би-дуги"></category><category term="переход"></category><category term="точка"></category><category term="математика"></category></entry><entry><title>USB-фонарик с dx.com</title><link href="http://imdagger.github.io/posts/2013/06/25/usb-fonarik-s-dxcom/" rel="alternate"></link><updated>2013-06-25T00:45:42+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-25:posts/2013/06/25/usb-fonarik-s-dxcom/</id><summary type="html">&lt;p&gt;Наконец-то мой фонарик добрался из Гонконга до Минска. 23 числа
поступил в почтовое «MINSK PI 2» отделение и скоро будет проходить
таможенный контроль. А то я уже разволновался, т.к. заказал его ещё 1
числа, а отправился он на корабле 7 числа. А потом ни слуху ни духу.
Теперь главное – дождаться его в Гомеле :)&lt;/p&gt;
</summary><category term="dx.com"></category><category term="USB"></category><category term="покупка"></category><category term="фонарик"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/06/21/urn:ya.ru:post/22199227/1821/" rel="alternate"></link><updated>2013-06-21T02:29:29+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-21:posts/2013/06/21/urn:ya.ru:post/22199227/1821/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Кажется, что любую статью о собеседовании в Google можно превратить
в срач лишь упомянув крышку люка.&lt;/p&gt;
</summary><category term="собеседование"></category><category term="мысли"></category><category term="жизнь"></category><category term="google"></category></entry><entry><title>Генератор названий планет: возвращение</title><link href="http://imdagger.github.io/posts/2013/06/12/generator-nazvanii-planet-vozvrashchenie/" rel="alternate"></link><updated>2013-06-12T02:45:52+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-12:posts/2013/06/12/generator-nazvanii-planet-vozvrashchenie/</id><summary type="html">&lt;p&gt;В этот раз я решил немного переписать &lt;a class="reference external" href="http://imdagger.github.io/posts/2010/09/05/generator-nazvanii/"&gt;мой старый
генератор&lt;/a&gt; названий
планет (который написан на Python, заодно я нашёл там небольшую ошибку и
исправил). На этот раз генератор &lt;strong&gt;не требует ничего кроме&lt;/strong&gt; браузера,
т.к. написан на JavaScript. И в этот раз я даже
его &lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809"&gt;положил&lt;/a&gt; на GitHub
Gist, чтобы было удобнее править и загружать.
Вот &lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809/download"&gt;тут&lt;/a&gt; можно
его скачать. Достаточно загрузить архив, распаковать, открыть вложенный
HTML и понажимать кнопку “Сгенерировать новую!”. Получаются забавные
варианты:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Kut&lt;/div&gt;
&lt;div class="line"&gt;Perr&lt;/div&gt;
&lt;div class="line"&gt;Koai L3&lt;/div&gt;
&lt;div class="line"&gt;Vet&lt;/div&gt;
&lt;div class="line"&gt;Baonda&lt;/div&gt;
&lt;div class="line"&gt;Kee&lt;/div&gt;
&lt;div class="line"&gt;Pea&lt;/div&gt;
&lt;div class="line"&gt;Cris&lt;/div&gt;
&lt;div class="line"&gt;Cenyal&lt;/div&gt;
&lt;div class="line"&gt;Koaolia&lt;/div&gt;
&lt;div class="line"&gt;Melanal&lt;/div&gt;
&lt;div class="line"&gt;Vaviet K4&lt;/div&gt;
&lt;/div&gt;
&lt;span class="cut"&gt;&lt;a class="h-link reference internal" data-toggle="collapse" href="#cut_85183376"&gt;хочу ещё&lt;/a&gt;&lt;/span&gt;&lt;div class="collapse" id="cut_85183376"&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Badabana K&lt;/div&gt;
&lt;div class="line"&gt;Beboha 1I&lt;/div&gt;
&lt;div class="line"&gt;Keate IV&lt;/div&gt;
&lt;div class="line"&gt;Oniian&lt;/div&gt;
&lt;div class="line"&gt;Bebancolia&lt;/div&gt;
&lt;div class="line"&gt;Fractirion&lt;/div&gt;
&lt;div class="line"&gt;Gaean&lt;/div&gt;
&lt;div class="line"&gt;Bebomvian&lt;/div&gt;
&lt;div class="line"&gt;Monera KI&lt;/div&gt;
&lt;div class="line"&gt;Jacoanet AR7&lt;/div&gt;
&lt;div class="line"&gt;Eacomodate&lt;/div&gt;
&lt;div class="line"&gt;Luiic&lt;/div&gt;
&lt;div class="line"&gt;Oniancolia VII&lt;/div&gt;
&lt;div class="line"&gt;Crematoth&lt;/div&gt;
&lt;div class="line"&gt;Odvolar K&lt;/div&gt;
&lt;div class="line"&gt;Kon&lt;/div&gt;
&lt;div class="line"&gt;Onivilon VIIILA&lt;/div&gt;
&lt;div class="line"&gt;Colar&lt;/div&gt;
&lt;div class="line"&gt;Cremcumber X&lt;/div&gt;
&lt;div class="line"&gt;Deat Crypto&lt;/div&gt;
&lt;div class="line"&gt;Cucun&lt;/div&gt;
&lt;div class="line"&gt;Vive VIII&lt;/div&gt;
&lt;div class="line"&gt;Crematooro&lt;/div&gt;
&lt;div class="line"&gt;Bic III&lt;/div&gt;
&lt;div class="line"&gt;Vivcytal L3&lt;/div&gt;
&lt;div class="line"&gt;Beh IVP&lt;/div&gt;
&lt;div class="line"&gt;Cucut K4&lt;/div&gt;
&lt;div class="line"&gt;Asesar IIII&lt;/div&gt;
&lt;div class="line"&gt;Yaer X&lt;/div&gt;
&lt;div class="line"&gt;Con&lt;/div&gt;
&lt;div class="line"&gt;Fracek&lt;/div&gt;
&lt;div class="line"&gt;Aca&lt;/div&gt;
&lt;div class="line"&gt;Centut&lt;/div&gt;
&lt;div class="line"&gt;Odactal&lt;/div&gt;
&lt;div class="line"&gt;Oolia&lt;/div&gt;
&lt;div class="line"&gt;Venera 7&lt;/div&gt;
&lt;div class="line"&gt;Ortyh&lt;/div&gt;
&lt;div class="line"&gt;Embarrala VII&lt;/div&gt;
&lt;div class="line"&gt;Jacal&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809/download"&gt;скачать&lt;/a&gt;&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="https://gist.github.com/IMDagger/5761809/download"&gt;&lt;img alt="Код генератора" src="http://img-fotki.yandex.ru/get/9155/22199227.b/0_8e033_e8d9bd5d_L" title="Код генератора"/&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="браузер"></category><category term="новый"></category><category term="планета"></category><category term="название"></category><category term="javascript"></category><category term="скрипт"></category><category term="генератор"></category><category term="пример"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/06/09/urn:ya.ru:post/22199227/1811/" rel="alternate"></link><updated>2013-06-09T02:59:14+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-09:posts/2013/06/09/urn:ya.ru:post/22199227/1811/</id><summary type="html">&lt;p&gt;Нашёл как попросить FFI загрузить таблицу из текущего процесса.
Достаточно просто передать #f вместо названия библиотеки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;define&lt;/span&gt; &lt;span class="pgcss-n"&gt;libc&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ffi-lib&lt;/span&gt; &lt;span class="pgcss-no"&gt;#f&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="racket"></category><category term="процесс"></category><category term="ffi"></category><category term="текущий"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/06/03/urn:ya.ru:post/22199227/1809/" rel="alternate"></link><updated>2013-06-03T04:26:12+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-03:posts/2013/06/03/urn:ya.ru:post/22199227/1809/</id><summary type="html">&lt;p&gt;Нужно было тут распознать пачку текстов в изображениях с 300 DPI.
Качество картинок неплохое, хоть кое-где и встречается пыль в сканах.
Мне нужны были только куски из текста. Сначала я подумал набрать руками,
но проделав так пяток раз, я передумал. И стал вспоминать, что у меня
есть. А оказалось, что я уже ставил себе раньше: gocr и tesseract.
Первый русский текст естественно у меня не понял. А вот второй подхватил
всё на ура (только я поставил его пакет с поддержкой русского языка из
репозитория) и распознал тексты с минимумом проблем. Только пришлось в
мануал заглянуть, как указать язык этой консольной утилите:&lt;/p&gt;
&lt;blockquote&gt;
tesseract -l rus имя_файла.jpg файл_для_текста # оно само добавит
расширение .txt по умолчанию&lt;/blockquote&gt;
&lt;p&gt;Значит я его не зря ставил когда-то с учётом перспективы :)&lt;/p&gt;
</summary><category term="текст"></category><category term="сканирование"></category><category term="tesseract"></category></entry><entry><title>JIRA и автостарт</title><link href="http://imdagger.github.io/posts/2013/06/02/jira-i-avtostart/" rel="alternate"></link><updated>2013-06-02T01:25:36+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-06-02:posts/2013/06/02/jira-i-avtostart/</id><summary type="html">&lt;p&gt;Добавил в скрипт для запуска JIRA зависимости от MySQL и Nginx. Т.к.
похоже, что у меня JIRA сервис часто успевает запуститься раньше, чем
база данных и от этого просто драйвер БД не может подключиться и вся
трэкинговая система тихо валится при загрузке:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# Provides:          jira&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# Required-Start:    $local_fs $remote_fs $network $syslog nginx mysql&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# Required-Stop:     $local_fs $remote_fs $network $syslog nginx mysql&lt;/span&gt;
…
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Надеюсь, что копаю в правильном направлении :/&lt;/p&gt;
</summary><category term="linux"></category><category term="скрипт"></category><category term="старт"></category><category term="запуск"></category><category term="MySQL"></category><category term="jira"></category><category term="автозагрузка"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/05/30/urn:ya.ru:post/22199227/1806/" rel="alternate"></link><updated>2013-05-30T01:54:06+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-30:posts/2013/05/30/urn:ya.ru:post/22199227/1806/</id><summary type="html">&lt;p&gt;4 года микроблогу. Нынче я пишу уже не так часто отчасти из-за того, что
работа сильно выжимает, а с другой стороны нельзя писать про
внутренности того, над чем работаю, иначе нарушу конфиденциальность
проекта. А так как работа отнимает как минимум треть всего времени (а
мне ещё и спать нужно), то поэтому новостей в месяц от меня стало
намного меньше, чем раньше.&lt;/p&gt;
</summary><category term="блог"></category><category term="радость"></category><category term="юбилей"></category><category term="жизнь"></category><category term="грусть"></category></entry><entry><title>Android, SDL2 и Racket</title><link href="http://imdagger.github.io/posts/2013/05/28/android-sdl2-i-racket/" rel="alternate"></link><updated>2013-05-28T03:59:27+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-28:posts/2013/05/28/android-sdl2-i-racket/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Получилось вывести изображение через SDL2 из Racket, который запущен
из JNI. Работает шустро, правда пока загрузка модулей идёт не быстро,
т.к. я их храню для удобства на SD-карте, а Racket грузит все свои
зависимости файл за файлом, а модулей у него много. У меня на PC выдаёт,
что он выполнил несколько тысяч IO-операций (для проверки файла с
исходником, для проверки скомпиленой версии и тд), что естественно
замедляет всё.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; А так вообще забавно подключаться через Geiser прямо в рабочий
процесс Racket на телефоне и управлять поведением прямо находу.&lt;/p&gt;
</summary><category term="Scheme"></category><category term="geiser"></category><category term="Android"></category><category term="racket"></category><category term="радость"></category><category term="SDL"></category></entry><entry><title>Недочёт в обёртке для DAWG библиотеки</title><link href="http://imdagger.github.io/posts/2013/05/25/nedochiot-v-obiortke-dlia-dawg-biblioteki/" rel="alternate"></link><updated>2013-05-25T03:37:32+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-25:posts/2013/05/25/nedochiot-v-obiortke-dlia-dawg-biblioteki/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Отправил&amp;nbsp;&lt;a class="reference external" href="https://github.com/kmike/DAWG/pull/10"&gt;pull-запрос&lt;/a&gt; с
исправлением небольшой неточности при открытии файлов в библиотеке DAWG
для Python. Сначала естественно написал и закоммитил тест, а потом уже
проверил свои мысли и исправления на нём. Заодно немного почитал про
Cython, т.к. не понял сходу почему он не принял мой bool (а оказалось,
что их два вида и нужно импортировать необходимый). Заодно и из курса по
C++ освежил в памяти, как проверять поток на ошибки, что есть флаги,
есть ещё удобные методы для проверки флагов: .fail(), .bad(), .good().
Вот и добавил, перед попыткой прочитать данные из потока при помощи
внутренней библиотеки, проверку на состояние с выбросом исключения.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="исправление"></category><category term="библиотека"></category><category term="python"></category><category term="обёртка"></category><category term="DAWG"></category><category term="cython"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/05/22/urn:ya.ru:post/22199227/1800/" rel="alternate"></link><updated>2013-05-22T03:06:34+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-22:posts/2013/05/22/urn:ya.ru:post/22199227/1800/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Смог запустить приложение с использованием SDL2 и одновременно
обращаться к нему через Geiser прямо с доступом в телефон. Правда пока
какие-то проблемы с выводом самих изображений, но это я решу попозже.
Смог ещё сделать так, чтобы Racket и SDL2 писали все свои ошибки в
лог-файл, просто при помощи dup2 перенаправил stderr в открытый файл.&lt;/p&gt;
</summary><category term="вывод"></category><category term="SDL"></category><category term="geiser"></category><category term="перенаправление"></category><category term="racket"></category><category term="SDL2"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/05/20/urn:ya.ru:post/22199227/1799/" rel="alternate"></link><updated>2013-05-20T23:14:15+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-20:posts/2013/05/20/urn:ya.ru:post/22199227/1799/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Поставил на сервачке nginx-extras. Т.к. мне потребуется
&lt;a class="reference external" href="http://wiki.nginx.org/HttpLuaModule"&gt;HttpLuaModule&lt;/a&gt;, чтобы разобрать
по частям User-Agent и на его основании отдавать определённые файлы или
отдавать некоторое значение по умолчанию. Можно и простыми регулярными
выражениями такое сделать в nginx, но придётся делать очень много..
ооочень много их, т.к. параметры в User-Agent могут прийти разные, в
разном порядке и их комбинации могут требовать разных принимаемых
решений по отдаваемому контенту.&lt;/p&gt;
</summary><category term="обработка"></category><category term="lua"></category><category term="модуль"></category><category term="nginx"></category><category term="ubuntu"></category></entry><entry><title>Ubuntu и wl.ko</title><link href="http://imdagger.github.io/posts/2013/05/09/ubuntu-i-wlko/" rel="alternate"></link><updated>2013-05-09T23:41:51+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-09:posts/2013/05/09/ubuntu-i-wlko/</id><summary type="html">&lt;p&gt;Появилось время разобраться почему на ядре 3.2.0-41 у меня не
подхватился Broadcom WiFi. Плюс ещё на младшей версии ядра не возможно
было подключить NVidia из-за того, что я обновлялся и драйверы
поставились под последнюю версию ядра. Но это было всё не столь
критично, скорее меня тревожил более сильный выдув куллера на 3.2.0-39
(видимо тоже из-за какого-то частичного обновления). Я сравнил вывод
lsmod при запуске на обоих ядрах, и естественно была видна разница на
глаз. Не хватало 3-ёх мегабайтного блоба от Broadcom (тьфу-тьфу на них)
под названием &lt;strong&gt;wl&lt;/strong&gt; (модуль wl.ko). Во всех версиях до 41 у себя я
обнаружил в &lt;code class="code"&gt;
/lib/modules/3.2.0-xx-generic/updates/dkms/&lt;/code&gt;
 модуль
&lt;strong&gt;wl.ko&lt;/strong&gt;. А вот в &lt;code class="code"&gt;
/lib/modules/3.2.0-41-generic/updates/dkms/&lt;/code&gt;
 его не
было.&lt;/p&gt;
&lt;p&gt;Но благо я помню про то, что такое DKMS и с чем его едят. Он
оказался даже собран у меня, видимо не поставился от того, что когда я
обновлялся я делал тяжеловесные задачи и инсталлятор просто немного
прибило по памяти. Поэтому:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;imdagger@thug-machine:~$&lt;/span&gt; sudo dkms build -m bcmwl -v 6.20.155.1+bdcom
&lt;span class="pgcss-go"&gt;Module bcmwl/6.20.155.1+bdcom already built for kernel 3.2.0-41-generic/4&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;imdagger@thug-machine:~$&lt;/span&gt; sudo dkms install -m bcmwl -v 6.20.155.1+bdcom

&lt;span class="pgcss-go"&gt;wl:&lt;/span&gt;
&lt;span class="pgcss-go"&gt;Running module version sanity check.&lt;/span&gt;

&lt;span class="pgcss-go"&gt;Good news! Module version  for wl.ko&lt;/span&gt;
&lt;span class="pgcss-go"&gt;exactly matches what is already found in kernel 3.2.0-41-generic.&lt;/span&gt;
&lt;span class="pgcss-go"&gt;DKMS will not replace this module.&lt;/span&gt;
&lt;span class="pgcss-go"&gt;You may override by specifying --force.&lt;/span&gt;

&lt;span class="pgcss-go"&gt;depmod...........&lt;/span&gt;

&lt;span class="pgcss-go"&gt;DKMS: install completed.&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;imdagger@thug-machine:~$&lt;/span&gt; sudo modprobe wl
&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; Счастье. Сразу подхватился и подключился мгновенно WiFi после этой строчки.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;У утилиты dkms опция -m это указание названия модуля, а -v его
версия. Т.к. я собирал из исходников, которые есть прямо в директории
/var/lib/dkms, то ничего скачивать не пришлось, ибо у меня уже стоит
пакет bcmwl-kernel-source.&lt;/p&gt;
</summary><category term="сеть"></category><category term="ошибка"></category><category term="беспроводная"></category><category term="ubuntu"></category><category term="broadcom"></category><category term="модуль"></category><category term="linux"></category><category term="DKMS"></category><category term="wl.ko"></category></entry><entry><title>Лучи радости</title><link href="http://imdagger.github.io/posts/2013/05/09/luchi-radosti/" rel="alternate"></link><updated>2013-05-09T16:00:44+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-09:posts/2013/05/09/luchi-radosti/</id><summary type="html">&lt;p&gt;Сколько лет пользуюсь server-mode, а чувства всё теже, что я обожаю
серверный режим Emacs, что позволяет открывать сколько угодно окон
редактора (а держать только одну копию в фоновом режиме) и даже на
других компьютерах, а буфферы все общие. Можно редактировать текст хоть
в 4-ом, хотя обычно я держу его только для себя :) И главное, что всё из
коробки, просто нужно запустить редактор с опцией --daemon специальной.&lt;/p&gt;
</summary><category term="радость"></category><category term="emacs"></category><category term="server"></category><category term="жизнь"></category><category term="сервер"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/05/05/urn:ya.ru:post/22199227/1790/" rel="alternate"></link><updated>2013-05-05T23:05:15+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-05:posts/2013/05/05/urn:ya.ru:post/22199227/1790/</id><summary type="html">&lt;p&gt;Что-то последнее обновление сломало WiFi для Broadcom чипов (хотя
драйверы броадкомовцы ещё те глюкавые пишут, так что может это просто
драйверу изменения не понравились, но… увы какой стоит):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; lspci
&lt;span class="pgcss-go"&gt;...&lt;/span&gt;
&lt;span class="pgcss-go"&gt;03:00.0 Network controller: Broadcom Corporation BCM4313 802.11b/g/n Wireless LAN Controller (rev 01)&lt;/span&gt;
&lt;span class="pgcss-go"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Пришлось при загрузке вызвать GRUB и выбрать более старое ядро (с
предыдущего обновления, благо Ubuntu их всех оставляет):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;$&lt;/span&gt; cat /proc/version
&lt;span class="pgcss-go"&gt;Linux version 3.2.0-38-generic (buildd@akateko) (gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) ) #61-Ubuntu SMP Tue Feb 19 12:18:21 UTC 2013&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;На 3.2.0-38 всё работает отлично, на 39 вроде тоже, а вот на сборке
3.2.0-40 что-то не так с WiFi. Попробую разобраться попозже, если это
имеет смысл :) Т.к. может придёт скоро новое обновление, ведь 3.2.x это уже
довольно старая ветка.&lt;/p&gt;
</summary><category term="broadcom"></category><category term="wifi"></category><category term="проблема"></category><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Взаимодействие Racket и JVM</title><link href="http://imdagger.github.io/posts/2013/05/05/vzaimodeistvie-racket-i-jvm/" rel="alternate"></link><updated>2013-05-05T03:08:58+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-05-05:posts/2013/05/05/vzaimodeistvie-racket-i-jvm/</id><summary type="html">&lt;p&gt;При сборке Racket в качестве расширения через интерфейс JNI лучше
всего на данный момент в sconfig. выключить опцию
LINUX_FIND_STACK_BASE для Linux/Android (если расширение будет
создано в отдельном потоке). Т.к. это создаёт проблему неверного
определения нижней границы стека, попытки Racket вызвать stack overflow
обработчик и естественно ошибку, т.к. переполнения в реальности не было
и структуры для переполнения не заготовлены. А всё из-за того, что для
Linux используется вызов функции adjust_stack_base, которая считывает
/proc/self/maps и ищет [stack] строку вида:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;beeb5000-beed6000 rw-p 00000000 00:00 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [stack]&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Но в случае с JNI стек основной части приложения будет отличаться от
стека native части кода, если тот создан в отдельной нити. Можно
попробовать определить границы стека через pthread, но возникает
проблема, что делать, если человек хочет собрать библиотеку без
pthreads, … хотя может для случая без pthreads можно идти как и раньше,
используя procfs.&lt;/p&gt;
</summary><category term="JVM"></category><category term="racket"></category><category term="procfs"></category><category term="JNI"></category><category term="стек"></category><category term="pthreads"></category><category term="нить"></category></entry><entry><title>ВТ3</title><link href="http://imdagger.github.io/posts/2013/04/28/vt3/" rel="alternate"></link><updated>2013-04-28T01:12:38+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-28:posts/2013/04/28/vt3/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp; Смог разобрать маркировку с гильзы. Это ВТ3 толи 36, толи 38.
Оказывается это стреляная гильза от югославского патрона для маузера,
ВТ3 означает &lt;strong&gt;Воjнотех. Завод Крагуjевац.&lt;/strong&gt; 7.92 x 57mm. Вот на
этом&amp;nbsp;&lt;a class="reference external" href="http://www.municion.org"&gt;сайте&lt;/a&gt; смог найти по маркировке
производителя.&lt;/p&gt;
</summary><category term="находка"></category><category term="гильза"></category></entry><entry><title>Geiser и Emacs</title><link href="http://imdagger.github.io/posts/2013/04/25/geiser-i-emacs/" rel="alternate"></link><updated>2013-04-25T03:01:13+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-25:posts/2013/04/25/geiser-i-emacs/</id><summary type="html">&lt;p&gt;Наткнулся сегодня случайно
на&amp;nbsp;&lt;a class="reference external" href="http://www.nongnu.org/geiser/"&gt;Geiser&lt;/a&gt;
(&lt;a class="reference external" href="https://github.com/jaor/geiser/"&gt;репозиторий&lt;/a&gt; на GitHub) из-под
которого удобно работать с Racket и Guile. Мне в принципе только работа
с Racket интересовала. Очень понравился режим &lt;kbd class="kbd"&gt;
geiser-connect&lt;/kbd&gt;
, где можно
указать куда подключиться по TCP к Geiser серверу. В своём приложении
достаточно добавить &lt;code class="code"&gt;
(require geiser/server)&lt;/code&gt;
 и где-нибудь сделать
&lt;code class="code"&gt;
(start-geiser)&lt;/code&gt;
 и будет счастье. Можно сразу писать программу и вызывать
горячую заменю рабочего кода модулей или получить доступ прямо в
работающее приложение, чтобы поправить что-нибудь или посмотреть. Так
ещё оно в Emacs в REPL режиме умеет показывать картинки для объектов
графиков и изображений (прямо как DrRacket). Крутая штука, очень
понравилось.&lt;/p&gt;
</summary><category term="сервер"></category><category term="TCP"></category><category term="emacs"></category><category term="racket"></category><category term="remote"></category><category term="geiser"></category><category term="удалённый"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/04/23/urn:ya.ru:post/22199227/1777/" rel="alternate"></link><updated>2013-04-23T00:58:50+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-23:posts/2013/04/23/urn:ya.ru:post/22199227/1777/</id><summary type="html">&lt;p&gt;Забавно, что дворовую игру на догонялки в восточной части Беларуси
называют: кэн, кич, а в западной части: бэрик, бэрак. Я обычно
использовал два варианта: играть в бэрика и в кича. Хотя всегда было не
понятно происхождение названия “кэн”. С бэриком и кичом всё понятно,
т.к. первое связано с нашим родным языком и является синонимом слову
ловить, а второе, наверное, от слова кичить (хотя не ясно как они
связаны). Но вот кэн, почему именно кэн? :/&lt;/p&gt;
</summary><category term="мысли"></category><category term="жизнь"></category><category term="кич"></category><category term="кэн"></category><category term="бэрик"></category><category term="игра"></category></entry><entry><title>Racket и Android NDK r8e</title><link href="http://imdagger.github.io/posts/2013/04/18/racket-i-android-ndk-r8e/" rel="alternate"></link><updated>2013-04-18T04:03:37+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-18:posts/2013/04/18/racket-i-android-ndk-r8e/</id><summary type="html">&lt;p&gt;Удалось собрать динамическую (dynamic) версию Racket при помощи
arm-linux-androideabi из поставки Android NDK. Заодно увидел, что
оказывается есть Android и под MIPS, как-то я пропустил эту новость в
прошлом году, только по набору компиляторов обнаружил. Предыдущий
вариант со статической (static) сборкой работал, но т.к. он был собран с
библиотеками из GNU, то возникла проблема с libdl, которая в NDK
отличается. Из-за чего статическая версия не могла нормально обработать
ffi загрузку .so библиотеки и падала с SIGSEGV.&lt;/p&gt;
&lt;p&gt;Над сборкой из поставки NDK пришлось поколдовать немного, т.к.
CGC-сборщик не хотел компилироваться в нескольких местах. Сначала я
пытался собрать Racket с улучшенным точным (precise) сборщиком мусора,
но эта версия падала с ошибкой, которую мне не удалось отладить. Тогда я
попробовал такой вариант (перед этим конечно при помощи
build/tools/make-standalone-toolchain.sh создал все необходимые
директории для сборки):&lt;/p&gt;
&lt;blockquote&gt;
./configure --host=arm-linux-androideabi
--target=arm-linux-androideabi --enable-cgcdefault&lt;/blockquote&gt;
&lt;p&gt;И (ура!!) он заработал как надо без падения при вызове ffi-lib (хотя
я опустил описание того, как долго я искал разные пути и решения, с
ручной линковкой и прописыванием линкера, с попыткой совместить NDK и
GNU и много другое):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="mailto:shell&amp;#64;android"&gt;shell&amp;#64;android&lt;/a&gt;:/data/data/**.****.**** $ ./racket -I racket/base
--collects=/sdcard/racket/.racket/5.3.4.3/collects/&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;Welcome to Racket v5.3.4.3 [cgc].&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt; (require ffi/unsafe)&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt; (ffi-lib “libGLESv2”)&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;#&amp;lt;ffi-lib&amp;gt;&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Коллекции я поместил на SD-карту (всё как в прошлый раз, когда
собирал статическую версию). Забыл только сказать, что возникла
небольшая проблема с тем, что в busybox в android shell не установлена
никакая локаль, поэтому пришлось исправить вот этот кусок с ошибкой:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gh"&gt;diff --git a/src/racket/src/string.c b/src/racket/src/string.c&lt;/span&gt;
&lt;span class="pgcss-gh"&gt;index 63b5898..dc27372 100644&lt;/span&gt;
&lt;span class="pgcss-gd"&gt;--- a/src/racket/src/string.c&lt;/span&gt;
&lt;span class="pgcss-gi"&gt;+++ b/src/racket/src/string.c&lt;/span&gt;
&lt;span class="pgcss-gu"&gt;@@ -3841,7 +3841,7 @@ char *scheme_push_c_numeric_locale()&lt;/span&gt;
 #ifndef DONT_USE_LOCALE
   GC_CAN_IGNORE char *prev;
   prev = setlocale(LC_NUMERIC, NULL);
&lt;span class="pgcss-gd"&gt;-  if (!strcmp(prev, &amp;quot;C&amp;quot;))&lt;/span&gt;
&lt;span class="pgcss-gi"&gt;+  if (prev &amp;amp;&amp;amp; !strcmp(prev, &amp;quot;C&amp;quot;))&lt;/span&gt;
     return NULL;
   else
     return setlocale(LC_NUMERIC, &amp;quot;C&amp;quot;);
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="libdl"></category><category term="arm-linux-androideabi"></category><category term="NDK"></category><category term="ARM"></category><category term="ffi"></category><category term="CGC"></category><category term="dynamic"></category><category term="racket"></category><category term="Android"></category></entry><entry><title>Chain assignment</title><link href="http://imdagger.github.io/posts/2013/04/16/chain-assignment/" rel="alternate"></link><updated>2013-04-16T00:32:40+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-16:posts/2013/04/16/chain-assignment/</id><summary type="html">&lt;p&gt;Попался на одном месте в Python, хотя быстро нашёл. Я почему-то на
автомате написал выражение для множественного присваивания исходя из
мысли, что присваивание будет идти справа-налево:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;a = {}&lt;/div&gt;
&lt;div class="line"&gt;x = 7&lt;/div&gt;
&lt;div class="line"&gt;x = a[x] = 3&lt;/div&gt;
&lt;div class="line"&gt;# увы, тут a это &lt;strong&gt;{3: 3}&lt;/strong&gt;, а не {7: 3} как могло показаться, если
глянуть мельком&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ибо присваивание цепочки происходит слева-направо (да это
документировано, да и вообще есть ли в Python что-то что выполняется
справа-налево?), сначала вычисляется самое правое выражение, а затем
распространяется по очереди в выражения начиная слева:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;# вот так выглядит a = b = c = 7 в инструкциях VM&lt;/div&gt;
&lt;div class="line"&gt;LOAD_CONST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 (7)&lt;/div&gt;
&lt;div class="line"&gt;DUP_TOP&lt;/div&gt;
&lt;div class="line"&gt;STORE_FAST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0 (&lt;strong&gt;a&lt;/strong&gt;)&lt;/div&gt;
&lt;div class="line"&gt;DUP_TOP&lt;/div&gt;
&lt;div class="line"&gt;STORE_FAST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1 (&lt;strong&gt;b&lt;/strong&gt;)&lt;/div&gt;
&lt;div class="line"&gt;STORE_FAST&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2 (&lt;strong&gt;c&lt;/strong&gt;)&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Думаю тут порядок сохранения в переменных пояснять не нужно и так
видно глазом.&lt;/p&gt;
</summary><category term="программирование"></category><category term="знания"></category><category term="присваивание"></category><category term="хитрость"></category><category term="python"></category><category term="стандарт"></category><category term="особенность"></category><category term="пробел"></category></entry><entry><title>Небольшая проблема с MyPaint</title><link href="http://imdagger.github.io/posts/2013/04/12/nebolshaia-problema-s-mypaint/" rel="alternate"></link><updated>2013-04-12T05:20:12+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-12:posts/2013/04/12/nebolshaia-problema-s-mypaint/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Если в последней master сборке в MyPaint 1.1.0 выбрать отладку
устройства ввода, чтобы посмотреть, например, степень нажатия кисти, то
после возврата на канвас с этим устройством приключится беда. Линия за
пером будет выводится с большой задержкой, даже если перо вести
медленно, что не даст вообще никак нормально работать. Поэтому лучше
отдельно отладить перо, затем перезапустить программу и можно продолжить
рисовать уже без проблем. Не знаю как себя ведут в таком случае другие
сборки и другие планшеты.&lt;/p&gt;
</summary><category term="отладка"></category><category term="master"></category><category term="mypaint"></category><category term="отставание"></category></entry><entry><title>Genius EasyPen M406XE</title><link href="http://imdagger.github.io/posts/2013/04/12/genius-easypen-m406xe/" rel="alternate"></link><updated>2013-04-12T05:05:03+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-12:posts/2013/04/12/genius-easypen-m406xe/</id><summary type="html">&lt;p&gt;Теперь у меня есть чем рисовать и делать наброски. Достаточно
компактный планшет, мне нравится. Думаю в большем я не нуждаюсь, т.к.
мои навыки рисования очень далеки от идеала. Чтобы завести данный девайс
под Ubuntu Linux 12.04 пришлось немного полазать в интернете, а вот,
чтобы заставить не на самом топовом ядре обрабатывать силу нажатия
пришлось хорошо поискать решение. Но на ЛОРе много чего полезного и вот
этот&amp;nbsp;&lt;a class="reference external" href="http://www.linux.org.ru/forum/linux-hardware/6929804#comment-7624274"&gt;комментарий&lt;/a&gt;
решил все вопросы. Только нужно не забыть установить перед этим драйвер
&lt;a class="reference external" href="https://launchpad.net/wizardpen"&gt;Wizardpen&lt;/a&gt;.
Утилиту&amp;nbsp;&lt;a class="reference external" href="https://github.com/Marisa-Chan/init-tablet"&gt;init-tablet&lt;/a&gt;
пришлось чуть подправить, чтобы она собралась без проблем, но зато её
магическая последовательность байт &lt;code class="code"&gt;
0x5,0x12,0x10,0x11,0x12,0,0,0&lt;/code&gt;

отправленная в устройство планшета сразу же включает отправку силы
нажатия:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;$ xinput list&lt;/div&gt;
&lt;div class="line"&gt;⎡ Virtual core pointer&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=2&amp;nbsp;&amp;nbsp;&amp;nbsp; [master&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (3)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ Virtual core XTEST pointer&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=4&amp;nbsp;&amp;nbsp;&amp;nbsp; [slave&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ A4Tech PS/2+USB Mouse&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=11&amp;nbsp;&amp;nbsp;&amp;nbsp; [slave&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ SynPS/2 Synaptics TouchPad&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=15&amp;nbsp;&amp;nbsp;&amp;nbsp; [slave&lt;/div&gt;
&lt;div class="line"&gt;pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;⎜&amp;nbsp;&amp;nbsp; ↳ &lt;strong&gt;Genius Tablet&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; id=16&lt;/div&gt;
&lt;div class="line"&gt;[slave&amp;nbsp; pointer&amp;nbsp; (2)]&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;$ xinput test ‘Genius Tablet’&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;motion a[0]=6439 a[1]=4816 &lt;strong&gt;a[2]=905&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;$ lsusb&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;Bus 006 Device 003: ID 0458:5019 KYE Systems Corp. (Mouse Systems)&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Потребовалось ещё создать
&lt;strong&gt;/usr/share/X11/xorg.conf.d/70-wizardpen.conf&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Section “InputClass”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Identifier “wizardpen”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchIsTablet “on”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchDevicePath “/dev/input/event*”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchProduct “KYE Systems|Genius|M460XE”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Driver “wizardpen”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TopX”&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“0”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TopY”&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“0”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“BottomX”&amp;nbsp;&amp;nbsp; &amp;nbsp;“15360” # нужно откалибровать при&lt;/div&gt;
&lt;div class="line"&gt;помощи &lt;strong&gt;wizardpen-calibrate&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“BottomY”&amp;nbsp;&amp;nbsp; &amp;nbsp;“10240”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TopZ”&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“1”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“BottomZ”&amp;nbsp;&amp;nbsp; &amp;nbsp;“400” # можно прописать и 1023&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“TPCButton”&amp;nbsp;&amp;nbsp; &amp;nbsp;“off” # даже если не касаться&lt;/div&gt;
&lt;div class="line"&gt;планшета, то работают кнопки на пере&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; #Option&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;“DebugLevel”&amp;nbsp;&amp;nbsp; &amp;nbsp;“10”&lt;/div&gt;
&lt;div class="line"&gt;EndSection&lt;/div&gt;
&lt;div class="line"&gt;Section “InputClass”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Identifier “wizardpen ignore mouse dev”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchIsTablet “on”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchDevicePath “/dev/input/mouse*”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; MatchProduct “KYE Systems|Genius|M460XE”&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp;&amp;nbsp; Driver “”&lt;/div&gt;
&lt;div class="line"&gt;EndSection&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;И для udevd я добавил ещё автоматический запуск инициализации
планшета, чтобы глубина всегда работала после подключения (в созданном
файле /etc/udev/rules.d/68-xorg-wizardpen.rules):&lt;/p&gt;
&lt;blockquote&gt;
ENV{ID_VENDOR_ID}==“0458”,&amp;nbsp; ENV{ID_MODEL_ID}==“5019”,
RUN+=“/usr/local/bin/init-tablets”&lt;/blockquote&gt;
&lt;p&gt;А в /etc/udev/rules.d/67-xorg-wizardpen.rules ещё добавил:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;# KYE Systems Corp (Genius M406XE)&lt;/div&gt;
&lt;div class="line"&gt;ENV{ID_VENDOR_ID}==“0458”,&amp;nbsp; ENV{ID_MODEL_ID}==“5019”,
ENV{x11_driver}=“wizardpen”&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Но это всё общеизвестная информация. В основном много сил ушло на
определение силы нажатия.&lt;/p&gt;
</summary><category term="графика"></category><category term="сила"></category><category term="перо"></category><category term="udev"></category><category term="genius"></category><category term="нажатие"></category><category term="планшет"></category><category term="m406xe"></category><category term="Xorg"></category><category term="давление"></category></entry><entry><title>Сюрприз с replace</title><link href="http://imdagger.github.io/posts/2013/04/10/siurpriz-s-replace/" rel="alternate"></link><updated>2013-04-10T04:23:36+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-10:posts/2013/04/10/siurpriz-s-replace/</id><summary type="html">&lt;p&gt;После семи лет Python я на автомате сделал и в JavaScript (я не
силён в азах js) замену строки через .replace, но обнаружил, что оно
ведёт себя не так как я ожидал. Т.е. 'test text test'.replace('test',
'text') даст результат: 'text text &lt;strong&gt;test&lt;/strong&gt;'. Т.е. заменило оно не
всё. Оказывается оно так и задумано, а если я хочу заменить всё, то в
JavaScript я не нашёл другого человеческого решения указать флаг
глобальности, кроме как явно прописать регулярное выражение
&lt;strong&gt;/test/g&lt;/strong&gt;. И вроде Интернет со мной согласен. Хотя меня такое
решение вопроса немного коробит. Я всё же привык, что если в replace
передал строку, то оно не пробует её автоматом преобразовать в regexp.&lt;/p&gt;
</summary><category term="проблема"></category><category term="замена"></category><category term="строка"></category><category term="javascript"></category><category term="python"></category><category term="регулярное"></category><category term="выражение"></category><category term="replace"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/04/02/urn:ya.ru:post/22199227/1769/" rel="alternate"></link><updated>2013-04-02T14:00:46+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-02:posts/2013/04/02/urn:ya.ru:post/22199227/1769/</id><summary type="html">&lt;p&gt;Добавили
мой &lt;a class="reference external" href="http://demotivators.to/p/750214/magazin-dlya-odinokih-lyudej.htm"&gt;демотиватор&lt;/a&gt;
:) Сделал фотку у нас в городе. Забавное название у магазина.&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="http://demotivators.to/p/750214/magazin-dlya-odinokih-lyudej.htm"&gt;&lt;img alt="image0" src="http://img-fotki.yandex.ru/get/6437/22199227.a/0_8a37d_715a5afc_L" title="image0"/&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="демотиватор"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/04/01/urn:ya.ru:post/22199227/1764/" rel="alternate"></link><updated>2013-04-01T01:05:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-04-01:posts/2013/04/01/urn:ya.ru:post/22199227/1764/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Ну когда?! Когда уже назначат даты ICFP Programming Contest 2013? Я
уже с нетерпением жду этого мероприятия и не хочу прозевать.&lt;/p&gt;
</summary><category term="соревнование"></category><category term="программирование"></category></entry><entry><title>КПК</title><link href="http://imdagger.github.io/posts/2013/03/31/kpk/" rel="alternate"></link><updated>2013-03-31T15:13:03+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-31:posts/2013/03/31/kpk/</id><summary type="html">&lt;p&gt;Неделю назад продал почти непользованный КПК в отличном состоянии.
Отправлял обычным наложенным платежом по Беларуси. Без каких-либо особых
пометок. Был приятно удивлён, что почта из Гомеля в Минск дошла всего
где-то за 1,5 дня. Я думал, что будет как в России: 1 день идти, а потом
две недели лежать на сортировке :) Но всё же у нас работает почта на
порядок лучше.&lt;/p&gt;
</summary><category term="почта"></category><category term="платёж"></category><category term="наложенный"></category><category term="посылка"></category><category term="радость"></category><category term="кпк"></category><category term="hp"></category><category term="отправление"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2013/03/30/urn:ya.ru:post/22199227/1762/" rel="alternate"></link><updated>2013-03-30T01:48:29+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-30:posts/2013/03/30/urn:ya.ru:post/22199227/1762/</id><summary type="html">&lt;p&gt;Попробовал пакет
&lt;a class="reference external" href="https://github.com/rfk/django-supervisor"&gt;django-supervisor&lt;/a&gt;. Мне
понравилось то, что можно в конфигурацию Supervisor вставлять &lt;code class="code"&gt;
{{
переменные }}&lt;/code&gt;
 из настроек проекта, а также &lt;code class="code"&gt;
{% использовать %}&lt;/code&gt;
 все
конструкции шаблонов Django прямо в файле конфиругации Supervisor. Одно
только не знаю: как себя поведёт данный пакет, если в конфигурационном
файле используется include. Теперь достаточно легко запустить и
задеплоить всю необходимую связку сервисов для проекта:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-go"&gt;./manage.py supervisor -d&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; и Supervisord запущен
&lt;span class="pgcss-go"&gt;./manage.py supervisor shell&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; и мы уже в консоли управление supervisor-процессами
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Запуск консоли по управлению процессами я добавил в fabric, теперь я
могу просто сделать локально “fab processes” и попадаю в консоль на
удалённом сервере и могу управлять его сервисами, т.к. это fabric, то
если потребуется, то я смогу легко провернуть такую же схему даже для N
серверов. Просто добавлю пару команд, которые будут рассылаться в
управляющие элементы Supervisor. А вообще мой fabric.py сейчас выглядит
вот так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;fabric.api&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;fabric.colors&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt;

&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;hosts&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;myhost:12345&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;directory&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;/service/path&amp;#39;&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;command&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;with&lt;/span&gt; &lt;span class="pgcss-n"&gt;cd&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;directory&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;sudo&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;source /service/path/virtualenv/bin/activate&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39; &amp;amp;&amp;amp; &amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;command&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;user&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;processes&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;./manage.py supervisor shell&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;restart&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;yellow&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Reloading ...&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;sudo&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;touch /etc/uwsgi.d/project.ini&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;   &lt;span class="pgcss-c"&gt;# reload uwsgi as root&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;deps&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;pip install -r req.txt&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;push&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;should_restart&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;update_deps&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;green&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Pushing live ...&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;local&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;git push origin master&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;with&lt;/span&gt; &lt;span class="pgcss-n"&gt;cd&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;env&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;directory&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;with&lt;/span&gt; &lt;span class="pgcss-n"&gt;settings&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sudo_user&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;sudo&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;git pull&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;update_deps&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;deps&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;virtualenv&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;./manage.py syncdb&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;should_restart&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;restart&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Под надзор супервизора я отдал небольшой (который будет большим
попозже) RPC-сервис на основе фреймворка
&lt;a class="reference external" href="https://github.com/tomerfiliba/rpyc"&gt;rpyc&lt;/a&gt;. Хорошая, простая,
достаточно безопасная библиотека RPC с бинарным протоколом. Всё отлично
передаётся, по умолчанию разрешены только методы, атрибуты и классы с
префиксом &lt;code class="code"&gt;
exposed_&lt;/code&gt;
, но есть возможность указать в конфигурации
соединения, что разрешены все public поля. Указывается отдельно как для
сервера, так и для клиента. Всё передаётся на клиент прозрачно, создать
объект соединяющийся с сервером легко. Есть возможность авторизации по
SSL-ключу. Я использую не режим по умолчанию, а режим с запуском с
указанием конкретного класса в качестве сервиса.&lt;/p&gt;
</summary><category term="supervisor"></category><category term="сервис"></category><category term="django-supervisor"></category><category term="RPC"></category><category term="supervisord"></category><category term="rpyc"></category><category term="fabric"></category><category term="запуск"></category></entry><entry><title>Баг в Spyne</title><link href="http://imdagger.github.io/posts/2013/03/29/bag-v-spyne/" rel="alternate"></link><updated>2013-03-29T03:23:48+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-29:posts/2013/03/29/bag-v-spyne/</id><summary type="html">&lt;p&gt;Нашёл неприятную ошибку в последней версии
&lt;a class="reference external" href="https://github.com/arskom/spyne"&gt;spyne&lt;/a&gt;, из-за которой все протоколы
опирающиеся на HierDictDocument класс, а это: JSON, YAML, MessagePack
неправильно трактуют как десериализовать результат выполнения функции,
если использовать внутренний клиентский модуль из пакета spryne:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;spyne.client.http&lt;/span&gt;
&lt;span class="pgcss-kn"&gt;from&lt;/span&gt; &lt;span class="pgcss-nn"&gt;services&lt;/span&gt; &lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-n"&gt;main&lt;/span&gt;
&lt;span class="pgcss-n"&gt;x&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;spyne&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;client&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;http&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;HttpClient&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;http://localhost:7789&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;main&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;server&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;x&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;service&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;say_hello&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Word&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-mi"&gt;5&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-c"&gt;# ...&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# где main.server это объект приложения с описанием сервисов:&lt;/span&gt;

&lt;span class="pgcss-n"&gt;server&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;Application&lt;/span&gt;&lt;span class="pgcss-p"&gt;([&lt;/span&gt;&lt;span class="pgcss-n"&gt;HelloServiceClass&lt;/span&gt;&lt;span class="pgcss-p"&gt;],&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;tns&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;example.hello&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;in_protocol&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;JSONDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;validator&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;soft&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;),&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;out_protocol&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-n"&gt;JSONDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В случае JSON print выведет просто None, хотя должен был вывести
объект генератора. А всё потому, что библиотека пробует десериализовать
свой собственный ответ тем же способом, что и входящие сообщения
разбирает, а это не совсем корректно или там не дописан код. А вот
протокол XMLDocument опирается на другой класс и не имеет такой
проблемы. Поэтому пока буду использовать его, а позже попробую исправить
ошибки библиотеки.&lt;/p&gt;
</summary><category term="python"></category><category term="spyne"></category><category term="JSON"></category><category term="работа"></category><category term="ошибка"></category></entry><entry><title>Нередактируемое содержимое</title><link href="http://imdagger.github.io/posts/2013/03/20/neredaktiruemoe-soderzhimoe/" rel="alternate"></link><updated>2013-03-20T01:42:43+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-20:posts/2013/03/20/neredaktiruemoe-soderzhimoe/</id><summary type="html">&lt;p&gt;Всё же нашёл как можно сделать нормально блокировку редактирования в
TinyMCE. И так, чтобы можно было включать/выключать такой режим для
редактора:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-c1"&gt;// включаем блокировку, some_var_editor -- переменная содержащая TinyMCE-объект редактора&lt;/span&gt;
&lt;span class="pgcss-nx"&gt;some_var_editor&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;getBody&lt;/span&gt;&lt;span class="pgcss-p"&gt;().&lt;/span&gt;&lt;span class="pgcss-nx"&gt;setAttribute&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s1"&gt;&amp;#39;contenteditable&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-kc"&gt;true&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;span class="pgcss-c1"&gt;// выключаем&lt;/span&gt;
&lt;span class="pgcss-nx"&gt;some_var_editor&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;getBody&lt;/span&gt;&lt;span class="pgcss-p"&gt;().&lt;/span&gt;&lt;span class="pgcss-nx"&gt;setAttribute&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s1"&gt;&amp;#39;contenteditable&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-kc"&gt;true&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="редактор"></category><category term="чтение"></category><category term="режим"></category><category term="переключение"></category><category term="только"></category><category term="редактирование"></category><category term="tinymce"></category></entry><entry><title>Множество файлов в Zip архиве</title><link href="http://imdagger.github.io/posts/2013/03/12/mnozhestvo-failov-v-zip-arkhive/" rel="alternate"></link><updated>2013-03-12T01:56:35+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-12:posts/2013/03/12/mnozhestvo-failov-v-zip-arkhive/</id><summary type="html">&lt;p&gt;Как скопировать 100, 200, 500 файлов из небольшого архива (и
заархивировать нужные) не секрет, можно распаковать, выбрать файлы,
например, по расширению, а затем запаковать выбранные.&lt;/p&gt;
&lt;p&gt;А что если у нас 400000 мелких файлов? Хотя это &lt;strong&gt;тоже не секрет&lt;/strong&gt;,
в стандартном мануале по утилите zip есть и для этого решение:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;#&lt;/span&gt; выбираем только html файлы в старом и копируем их в новый архив
&lt;span class="pgcss-gp"&gt;imdagger@thug-machine$&lt;/span&gt; zip БольшойФайл.zip &lt;span class="pgcss-s2"&gt;&amp;quot;*.html&amp;quot;&lt;/span&gt; --copy --out ТолькоВыбранные.zip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;На моём нетбуке копирование файлов и архива в 1,5GiB заняло не
дольше нескольких минут, а их там было сотни тысяч.&lt;/p&gt;
</summary><category term="много"></category><category term="zip"></category><category term="архив"></category><category term="файлы"></category><category term="копирование"></category></entry><entry><title>Провозился с nginx</title><link href="http://imdagger.github.io/posts/2013/03/07/provozilsia-s-nginx/" rel="alternate"></link><updated>2013-03-07T01:47:12+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-07:posts/2013/03/07/provozilsia-s-nginx/</id><summary type="html">&lt;p&gt;Хотя провозился это мягко сказано, плясал как мог, пытался понять
почему загрузка файлов не идёт дальше ~1.7 мегабайт, причём Firefox
отрапортовал, что он 2 раза пытался что-то загрузить (даже байты
передавал), но потом соединение пропало. Вот curl благо прояснил
ситуацию, там на самом деле была просто ошибка 413, а браузеры на ней
тупят. А она гласила, что я лью слишком большой файл.&lt;/p&gt;
&lt;p&gt;И тут поехали, я прописываю всякие опции, и max_client_body_size и
время соединений поднимаю. А нет, не прокатывает ничего. Обновил nginx
до 1.2.7, ситуация повторяется, но… потом я решил глянуть, что на этот
раз curl ответил детальнее, а там nginx 1.0.15.&lt;/p&gt;
&lt;p&gt;А тут я вспоминаю, что я в openvz контейнере и надо мной ещё один
nginx проксирует :) И доступа у меня туда нет. Нужно было сразу подумать
над этим вариантом, но я его почему-то отметал, а он самый очевидный, и
потратил часа 4,5 на всё про всё.&lt;/p&gt;
</summary><category term="проблема"></category><category term="невнимательность"></category><category term="файл"></category><category term="заливка"></category><category term="Я"></category><category term="nginx"></category></entry><entry><title>Запуск celery для нескольких очередей</title><link href="http://imdagger.github.io/posts/2013/03/01/zapusk-celery-dlia-neskolkikh-ocheredei/" rel="alternate"></link><updated>2013-03-01T03:57:59+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-03-01:posts/2013/03/01/zapusk-celery-dlia-neskolkikh-ocheredei/</id><summary type="html">&lt;p&gt;Оказывается можно запустить удобным способом различные celery узлы
всего одной командой и с указанием очередей и конкуренции воркеров для
этой очереди:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;celeryd_multi start &lt;strong&gt;global&lt;/strong&gt; &lt;strong&gt;single&lt;/strong&gt; -Q:&lt;strong&gt;global&lt;/strong&gt; default
-Q:&lt;strong&gt;single&lt;/strong&gt; import -c:&lt;strong&gt;single&lt;/strong&gt; 1 --loglevel=INFO
--pidfile=/var/run/celery/${USER}-%n.pid
--logfile=/var/log/celery/${USER}-%n.log&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;и вариант для Django:&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;./manage.py&lt;/strong&gt; celeryd_multi start global single -Q:global default
-Q:single import -c:single 1 --loglevel=INFO
--pidfile=/var/run/celery/${USER}-%n.pid
--logfile=/var/log/celery/${USER}-%n.log&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;start global single указывает, что мне нужны два узла Celery с
именами &lt;em&gt;global&lt;/em&gt; и &lt;em&gt;single&lt;/em&gt; (Celery сам добавит доменную часть, эти
имена лишь поддомены). Затем &lt;em&gt;-Q:global default&lt;/em&gt; указывает, что global
узел будет обрабатывать все события по умолчанию (т.е. для которых не
была указана очередь явно). А вот для узла &lt;em&gt;single&lt;/em&gt; прописано &lt;em&gt;-Q:single
import -c:single 1&lt;/em&gt;, и это значит, что очередь будет для него
специфическая (у меня она называется &lt;em&gt;import&lt;/em&gt;, но можно любое имя
использовать) и что самое важное: уровень конкуренции для этого узла
всего 1, т.е. никакие 2 комманды не будут выполняться параллельно, что
мне и требовалось для заданий импорта в базу данных.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Всё честно взято и адаптировано под мои нужды
&lt;a class="reference external" href="http://stackoverflow.com/a/5477095"&gt;отсюда&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Celery"></category><category term="удобство"></category><category term="запуск"></category><category term="один"></category><category term="конкуренция"></category><category term="очереди"></category></entry><entry><title>djkombu и MySQL</title><link href="http://imdagger.github.io/posts/2013/02/27/djkombu-i-mysql/" rel="alternate"></link><updated>2013-02-27T01:56:21+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-02-27:posts/2013/02/27/djkombu-i-mysql/</id><summary type="html">&lt;p&gt;Чтобы Celery нормально обрабатывал задачи из MySQL (да я знаю, что
лучше использовать другой брокер для этой задачи и держать, например, их
хотя бы в Redis) пришлось добавить пару строчек для инициализации MySQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;DATABASES&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-err"&gt;…&lt;/span&gt;
        &lt;span class="pgcss-s"&gt;&amp;#39;OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-s"&gt;&amp;#39;init_command&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-c"&gt;# for the Celery&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;},&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;После этого он стал получать задачи как положено, а не только после
каждого перезапуска worker’а.&lt;/p&gt;
</summary><category term="Celery"></category><category term="python"></category><category term="задача"></category><category term="djkombu"></category><category term="зависает"></category><category term="MySQL"></category><category term="не работает"></category><category term="брокер"></category></entry><entry><title>Разбиение текста на слова</title><link href="http://imdagger.github.io/posts/2013/02/22/razbienie-teksta-na-slova/" rel="alternate"></link><updated>2013-02-22T03:59:40+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-02-22:posts/2013/02/22/razbienie-teksta-na-slova/</id><summary type="html">&lt;p&gt;Сначала я реализовал черновой вариант с использованием стандартной
библиотеки unicodedata и прохода по символам текста:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;unicodedata&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;clean_and_split&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;stop_words&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;words&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;u&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;lower&lt;/span&gt;&lt;span class="pgcss-p"&gt;():&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;cname&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;unicodedata&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;category&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;letter&lt;/span&gt;&lt;span class="pgcss-p"&gt;)[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;cname&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-o"&gt;!=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;len&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;words&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;])&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;words&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;append&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;u&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;elif&lt;/span&gt; &lt;span class="pgcss-n"&gt;cname&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# don&amp;#39;t distinguish letter E and E-with-dots&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;u&amp;#39;ё&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;letter&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;u&amp;#39;е&amp;#39;&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;words&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-n"&gt;letter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но профайлер показывал, что это вторая функция по ресурсам после
базы данных в коде. Поэтому пришлось подумать и переделать это всё в
более короткий алгоритм. Я чувствовал, что всё это стоит записать
каким-нибудь регулярным выражением, т.к. регулярные выражения
преобразуются в конечный автомат, который будет работать быстро.
Оказалось, что стандартная библиотека &lt;strong&gt;re&lt;/strong&gt; дружит с Unicode, но
немного не тем боком, что мне нужно. Т.к. я хочу выделить в тексте
только слова из букв (с запасом того, что мне может потребоваться
расширить это условие), выбросив все знаки препинания, цифры и т.д.
Оказалось, что библиотека regex из PyPi как раз то, что нужно:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;regex&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# minimal word length is 3 (last letter of word can&amp;#39;t be dash)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;SPLITTER&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;regex&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;compile&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;ur&amp;#39;[\p{L}-]{2,}[\p{L}]&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;clean_and_split&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;stop_words&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-c"&gt;# тут ещё не хватает проверки stop_words, но добавить её не сложно&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-n"&gt;SPLITTER&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;findall&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;lower&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;replace&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;u&amp;#39;ё&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;u&amp;#39;е&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Главное не забыть указать префиксы строки &lt;strong&gt;ur&lt;/strong&gt; для регулярного
выражения. Т.е. важно не забыть прописать перфикс юникода, иначе \p{…}
не будет работать как следует. В результате этот участок кода ускорился
от 8 до 10 раз.&lt;/p&gt;
&lt;p&gt;Потом мне ещё потребовалось узнать в каких позициях стояли слова, но
это было уже без особых проблем, достаточно использовать finditer метод
объекта скомпилированного регулярного выражения:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;match&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;SPLITTER&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;finditer&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;some_text&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;match&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;group&lt;/span&gt;&lt;span class="pgcss-p"&gt;(),&lt;/span&gt; &lt;span class="pgcss-n"&gt;match&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;start&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вообще это всё нужно, чтобы разделить текст, выбросить лишние слова
и затем можно уже строить шинглы по нему.&lt;/p&gt;
</summary><category term="программирование"></category><category term="текст"></category><category term="слово"></category><category term="python"></category><category term="разбиение"></category><category term="русский"></category><category term="unicode"></category><category term="regex"></category><category term="шинглы"></category></entry><entry><title>Steam и Linux</title><link href="http://imdagger.github.io/posts/2013/02/17/steam-i-linux/" rel="alternate"></link><updated>2013-02-17T03:13:56+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-02-17:posts/2013/02/17/steam-i-linux/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Пришлось для сабжа даже WebMoney завести, т.к. мой PayPal прописан
на другую страну, а Visa Virtuon почему-то отказывался Steam принимать.
Обзавёлся я World of Goo и Counter-Strike: Source, последний правда с
моим пингом немного подлагивал на том сервере куда я подключился и
настройки графики ещё пришлось чуть снизить, т.к. мой Ion всё же не
такой монстр (это же нетбук для работы, а не шпилить днями). Завелось
всё замечательно, спасибо Valve. Убрал Ironhide и поставил Bumblebee +
primus. Из-за Ironhide я думал, что Steam-у нужно положить симлинк на
32-битную графическую библиотеку GL, но оказалось, что он только мешал +
Steam думал, что у меня OpenGL только 1.4 и карточка Intel. А уже после
старта “primusrun steam” и обновления дравера NVidia до 304, у Steam
сомнения отпали и он признал мою вторую видеокарту.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Особо я не играю, но World of Goo игра клёвая и мне хотелось
поддержать их, а CS это всё же какая-никакая дань моим воспоминаниям из
прошлого. Заодно и самой Valve помог, тем что повёлся установить их
систему цифровой дистрибуции.&lt;/p&gt;
</summary><category term="primus"></category><category term="steam"></category><category term="linux"></category><category term="optimus"></category><category term="радость"></category><category term="игры"></category></entry><entry><title>Странное поведение lxml.html</title><link href="http://imdagger.github.io/posts/2013/02/09/strannoe-povedenie-lxmlhtml/" rel="alternate"></link><updated>2013-02-09T01:58:20+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-02-09:posts/2013/02/09/strannoe-povedenie-lxmlhtml/</id><summary type="html">&lt;p&gt;Столкнулся с тем, что не очень валидные с точки зрения стандарта и
логики кусочек HTML обрабатывается неоднозначно при помощи lxml.html.
Браузеры без проблем его переваривают, BeautifulSoup тоже, и некоторые
другие парсеры:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;lxml.html&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;lxml.html.soupparser&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;tostring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt; \
&lt;span class="pgcss-go"&gt;                         &amp;#39;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;))&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;tostring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;soupparser&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;#39;&lt;/span&gt; \
&lt;span class="pgcss-go"&gt;           &amp;#39;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;))&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Cell&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Сразу видно, что lxml.html отделил &amp;lt;table&amp;gt; от &amp;lt;a&amp;gt;, оно то конечно и
правильно, если бы я не столкнулся с такой разметкой на одном реальном
сайте + для других похожих ситуаций оно себя тоже ведёт немного странно.
Всё бы ничего, в DTD же прописано, что в &amp;lt;a&amp;gt; не стоит пихать &amp;lt;table&amp;gt;, но
туда и &amp;lt;div&amp;gt; пихать не стоит, но:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;tostring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;#39;&lt;/span&gt; \
&lt;span class="pgcss-go"&gt;            &amp;#39;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;div&amp;gt;Text&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;))&lt;/span&gt;
&lt;span class="pgcss-go"&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;a href=&amp;quot;link&amp;quot;&amp;gt;&amp;lt;div&amp;gt;Text&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Всё же что-то не так, т.к. библиотеке нужно определиться: либо всё
выносить из тега ссылки, что не является разрешённым, либо обрабатывать
случай &lt;code class="code"&gt;
&amp;lt;table&amp;gt;&lt;/code&gt;
. Но не вести себя по разному.&lt;/p&gt;
</summary><category term="странное поведение"></category><category term="HTML"></category><category term="поведение"></category><category term="python"></category><category term="отклонение"></category><category term="lxml"></category></entry><entry><title>Бесконечная блокировка</title><link href="http://imdagger.github.io/posts/2013/02/05/beskonechnaia-blokirovka/" rel="alternate"></link><updated>2013-02-05T23:43:08+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-02-05:posts/2013/02/05/beskonechnaia-blokirovka/</id><summary type="html">&lt;p&gt;Как получить ситуацию, что gevent выдаст исключение о бесконечно
блокирующейся операции? Сделать бесконечный цикл? Нет. Достаточно, чтобы
операция сама себя ожидала, но как это сделать неявным образом, чтобы
пример не был высосан из пальца и был похож на настоящую ситуацию.
Достаточно просто.&lt;/p&gt;
&lt;p&gt;Допустим есть потребность выполнять какую-то операцию (например
краулинг и парсинг страниц) в ограниченном количестве параллельных
потоком. Мы берём для этого пул с ограниченным размером. Затем для
каждой страницы мы хотим порождать отдельный поток (т.к. микропотоки
достаточно дешёвые), мы пишем что-то типа такого:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;p&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;gevent&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;pool&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;Pool&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;10&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;_&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;5&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;      &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;spawn&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;task&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;&lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;join&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Затем реализуем задачу task, в ней будут выполняться какие-то
операции над полученными данными, например, извлекаться новые ссылки, и
будет происходить порождение новых микропотоков. Но мы же хотим, чтобы
конкуренция не разрасталась, поэтому решаем складывать задачи единый
пул.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;sub_task&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-go"&gt;        p.spawn(lambda: i)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;task&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;i&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;    &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;_&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-nb"&gt;xrange&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;... &lt;/span&gt;        &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;spawn&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;sub_task&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;i&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;p&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Таким образом каждый task создаёт ещё по 4 sub_task. Когда
структура программы не такая простая и голая, а напичкана различной
дополнительной логикой, то кажется, что всё хорошо. Но увы программа
начинает себя странно вести от раза к разу. И поведение меняется от
количества операция и размера пула.&lt;/p&gt;
&lt;p&gt;В версии gevent 0.13.8 всё просто замолкает, зависает и крутится в
цикле. Но благо 1.0dev умеет определять эту проблемную точку и выдавать
исключение:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gt"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;test.py&amp;quot;, line 14, in&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    p.join()&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;/home/imdagger/Projects/bj-project/virtualenv/pg/local/lib/python2.7/site-packages/gevent/pool.py&amp;quot;, line 100, in join&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    self._empty_event.wait(timeout=timeout)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;/home/imdagger/Projects/bj-project/virtualenv/pg/local/lib/python2.7/site-packages/gevent/event.py&amp;quot;, line 77, in wait&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    result = self.hub.switch()&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;  File &amp;quot;/home/imdagger/Projects/bj-project/virtualenv/pg/local/lib/python2.7/site-packages/gevent/hub.py&amp;quot;, line 331, in switch&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;    return greenlet.switch(self)&lt;/span&gt;
&lt;span class="pgcss-gr"&gt;gevent.hub.LoopExit&lt;/span&gt;: &lt;span class="pgcss-n"&gt;This operation would block forever&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;А всё потому, что некоторая задача task нуждается в добавлении в пул
подзадачи sub_task, которая тоже нуждается в пуле, а сам пул нуждается
в завершении задачи task, т.к. он достиг размера 10 и переполнен. и с
другими задачами аналогично, т.е. пул переполнен и ждёт освобождения, а
задачи, чтобы завершится пытаются в него затолкнуть ещё больше подзадач.&lt;/p&gt;
&lt;p&gt;Поэтому для выхода из такой ситуации лучше обойтись либо только task
без вызова ещё одной поздадачи со spawn, а лучше вообще закидывать
подзадачи в очередь, а другой поток (или несколько), будут забирать их,
обрабатывать данные и укладывать в пул.&lt;/p&gt;
</summary><category term="пул"></category><category term="неявный"></category><category term="pool"></category><category term="блокировка"></category><category term="gevent"></category><category term="python"></category></entry><entry><title>Странности MongoEngine</title><link href="http://imdagger.github.io/posts/2013/02/01/strannosti-mongoengine/" rel="alternate"></link><updated>2013-02-01T00:27:47+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-02-01:posts/2013/02/01/strannosti-mongoengine/</id><summary type="html">&lt;p&gt;Странно, но в Mongoengine MapField внутри другого MapField ведёт
себя немного неожиданно. Не знаю, так задумано или это ошибка (спрошу у
них попозже), но если сделать вот так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;EmbeddedDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;num&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;IntField&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Document&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;my_field&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;MapField&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;MapField&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;EmbeddedDocumentField&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;SomeSubModel&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;То всё будет работать, но как только мы захотим получить документ и
произвести правку в поле num начнётся самое интересное:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;object&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;my_field&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;][&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;num&lt;/span&gt;
&lt;span class="pgcss-go"&gt;9&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;my_field&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;][&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;num&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-mi"&gt;10&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;save&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;span class="pgcss-go"&gt;# и снова&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;SomeModel&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;object&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;span class="pgcss-gp"&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class="pgcss-k"&gt;print&lt;/span&gt; &lt;span class="pgcss-n"&gt;some_obj&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;my_field&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;][&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;num&lt;/span&gt;
&lt;span class="pgcss-go"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;И он ни в какую не хочет сохранять. Хотя можно провернуть трюк с
update, но это только для такой простой модели, а если там ещё уровень
вложенности, то уже и update не помогает. А всё почему?&lt;/p&gt;
&lt;p&gt;А потому, что это заложено в поведение &lt;code class="code"&gt;
 _get _changed _fields&lt;/code&gt;
 в
base.BaseDocument у библиотеки, ошибка это или нет, но:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
         &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;field_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;field_list&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;

            &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_db_field_map&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;field_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;key&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;.&amp;#39;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;field&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_data&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field_name&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-bp"&gt;None&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;id&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-k"&gt;continue&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;add&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;id&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;isinstance&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;EmbeddedDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;DynamicEmbeddedDocument&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
               &lt;span class="pgcss-ow"&gt;and&lt;/span&gt; &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                 &lt;span class="pgcss-c"&gt;# Find all embedded fields that have been changed&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_get_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;elif&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;isinstance&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;list&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;tuple&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-nb"&gt;dict&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt; &lt;span class="pgcss-ow"&gt;and&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;db_field_name&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# Loop list / dict fields as they contain documents&lt;/span&gt;
                &lt;span class="pgcss-c"&gt;# Determine the iterator to use&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;items&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;iterator&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nb"&gt;enumerate&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;else&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;iterator&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;field&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;iteritems&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;index&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;iterator&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
                    &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;value&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;_get_changed_fields&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
                        &lt;span class="pgcss-k"&gt;continue&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;list_key&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;.&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;index&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;value&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;_get_changed_fields&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;list_key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;inspected&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;_changed_fields&lt;/span&gt; &lt;span class="pgcss-o"&gt;+=&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="pgcss-si"&gt;%s%s&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;%&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;list_key&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                                        &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;changed&lt;/span&gt; &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;k&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Так вот в том месте, где метод проверяет являются ли данные
связанные с полем словарём или списком, есть некоторая неточность в
поведении. Для нашего случае получается словарь в словаре, если бы это
был просто встроенных документ в словаре, то всё было бы хорошо. Но нет,
у нас словарь в словаре, в котором документ, поэтому оно проверяет наш
словарик на наличие специального метода (именно такого, в котором мы
находимся):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-nb"&gt;hasattr&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;value&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;_get_changed_fields&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Естественно он его не находит, это же простой словарь! И
соответственно не подхватывает изменения из вложенного документа. Выход?
Переработать структуру и сделать поля фиксированные, а не два словаря,
или поправить код, чтобы он переварил такой случай и углублялся в
словарь или ещё один вариант: попробовать сделать имя полю
комбинированное через точку (вида 'key1.key2'). Хотя mongoengine стоило
бы предупредить про такие странности.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="уровень"></category><category term="словарь"></category><category term="странное поведение"></category><category term="MongoEngine"></category><category term="документ"></category><category term="вложенный"></category><category term="поведение"></category><category term="поле"></category><category term="python"></category><category term="программирование"></category></entry><entry><title>Bootstrap кнопка отправки</title><link href="http://imdagger.github.io/posts/2013/01/18/bootstrap-knopka-otpravki/" rel="alternate"></link><updated>2013-01-18T23:23:02+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-01-18:posts/2013/01/18/bootstrap-knopka-otpravki/</id><summary type="html">&lt;p&gt;Как сделать кнопку отправки формы с использованием Bootstrap,
которая не позволит сработать ей дважды во время самой отправки? Можно
воспользоваться data-loading-text аттрибутом, и не стоит забывать про
&lt;code class="code"&gt;
autocomplete=&amp;quot;off&amp;quot;&lt;/code&gt;
, чтобы Firefox не запоминал состояние кнопки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="pgcss-na"&gt;type=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;class=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;btn btn-success&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;name=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;data-loading-text=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;Выполнение...&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;onclick=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;$(this).button(&amp;#39;loading&amp;#39;); return true;&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;autocomplete=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class="pgcss-nt"&gt;&amp;gt;&lt;/span&gt;
        Подключить!
&lt;span class="pgcss-nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В обработчике onclick происходит переключение кнопки в состояние
loading, которое берёт текст из &lt;code class="code"&gt;
data-loading-text&lt;/code&gt;
 атрибута. Атрибуты с
префиксом &lt;code class="code"&gt;
data-&lt;/code&gt;
 современными браузерами (ибо положено по стандарту) не
считаются неправильными, а большинство старый браузеров должно их просто
проигнорировать и не выдавать ошибок.&lt;/p&gt;
</summary><category term="загрузка"></category><category term="HTML"></category><category term="программирование"></category><category term="отправка"></category><category term="кнопка"></category><category term="bootstrap"></category><category term="блокировка"></category></entry><entry><title>Удобная надстройка (и замена) для urllib2</title><link href="http://imdagger.github.io/posts/2013/01/17/udobnaia-nadstroika-i-zamena-dlia-urllib2/" rel="alternate"></link><updated>2013-01-17T03:11:51+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-01-17:posts/2013/01/17/udobnaia-nadstroika-i-zamena-dlia-urllib2/</id><summary type="html">&lt;p&gt;Если использовать библиотеку urllib2, то можно открыть соединение,
проверить заголовки, а затем начать считывать содержимое, которое
возвращает сервер. Но urllib2 не настолько удобная и наглядная как
библиотека requests:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;requests&lt;/span&gt;
&lt;span class="pgcss-n"&gt;answer&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;http://some...url&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cookies&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;mycookie&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;x-additional-header&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но как, допустим, проверить тип содержимого и если он не подходящий
сразу закрыть соединение? Достаточно передать параметр &lt;code class="code"&gt;
stream=True&lt;/code&gt;
:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;requests&lt;/span&gt;
&lt;span class="pgcss-n"&gt;answer&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;requests&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;http://some...url&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;cookies&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;mycookie&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;},&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;stream&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-bp"&gt;True&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
                      &lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-p"&gt;{&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;x-additional-header&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;})&lt;/span&gt;
&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;headers&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;startswith&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
   &lt;span class="pgcss-k"&gt;pass&lt;/span&gt; &lt;span class="pgcss-c"&gt;# в этот момент ещё не началось получение данных самой страницы&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# а вот тут уже, после обращения к text, содержимое будет готово&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# .text обращается к .content, который производит считывание только 1 раз,&lt;/span&gt;
&lt;span class="pgcss-c"&gt;# так что всё хорошо даже второй раз&lt;/span&gt;
&lt;span class="pgcss-k"&gt;print&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;answer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;text&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="программирование"></category><category term="чтение"></category><category term="библиотека"></category><category term="requests"></category><category term="HTTP"></category><category term="python"></category></entry><entry><title>Поиск ссылок на странице</title><link href="http://imdagger.github.io/posts/2013/01/16/poisk-ssylok-na-stranitse/" rel="alternate"></link><updated>2013-01-16T03:41:03+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-01-16:posts/2013/01/16/poisk-ssylok-na-stranitse/</id><summary type="html">&lt;p&gt;Выбрать все ссылки со страницы можно, например, вот так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kn"&gt;import&lt;/span&gt; &lt;span class="pgcss-nn"&gt;lxml.html&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;SomeClass&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;object&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-k"&gt;def&lt;/span&gt; &lt;span class="pgcss-nf"&gt;_parse_urls&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;content&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;document&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;lxml&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;html&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;fromstring&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;content&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
        &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;document&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;xpath&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;//meta[@content=&amp;quot;noindex&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-c"&gt;# don&amp;#39;t parse links from this page&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt;

        &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;atag&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;document&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;xpath&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;//a[not(starts-with(@href, &amp;quot;#&amp;quot;))]&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;):&lt;/span&gt;
            &lt;span class="pgcss-n"&gt;rel&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;atag&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;rel&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-nb"&gt;all&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;attr_value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;not&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-n"&gt;rel&lt;/span&gt; &lt;span class="pgcss-k"&gt;for&lt;/span&gt; &lt;span class="pgcss-n"&gt;attr_value&lt;/span&gt; &lt;span class="pgcss-ow"&gt;in&lt;/span&gt; &lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;noindex&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;nofollow&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;]):&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;yield&lt;/span&gt; &lt;span class="pgcss-n"&gt;atag&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;get&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Выражение &lt;code class="code"&gt;
//meta[&amp;#64;content=&amp;quot;noindex&amp;quot;]&lt;/code&gt;
 выбирает все теги meta, у
которых атрибут content указывает, что индексация страницы нежелательна
(равен строке noindex). Можно было указать, что meta находится в head в
html, но мне было лениво .&lt;/p&gt;
&lt;p&gt;А вот &lt;a class="reference external" href="http://ru.wikipedia.org/wiki/XPath"&gt;XPath&lt;/a&gt;-выражение
&lt;code class="code"&gt;
//a[not(starts-with(&amp;#64;href, &amp;quot;#&amp;quot;))]&lt;/code&gt;
 использует функции not и starts-with;
и выбирает только теги &lt;code class="code"&gt;
&amp;lt;a&amp;gt;&lt;/code&gt;
, у которых атрибут href не начинается на #.&lt;/p&gt;
</summary><category term="ссылки"></category><category term="HTML"></category><category term="XPath"></category><category term="программирование"></category><category term="страницы"></category><category term="разбор"></category></entry><entry><title>Венский завтрак</title><link href="http://imdagger.github.io/posts/2013/01/12/venskii-zavtrak/" rel="alternate"></link><updated>2013-01-12T02:50:19+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-01-12:posts/2013/01/12/venskii-zavtrak/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Купил недавно попробовать этот творожный
&lt;a class="reference external" href="http://www.belmilk.by/trademark/venskii_zavtrak"&gt;десерт&lt;/a&gt;. На вид
упаковка такая… не сильно яркая, но внутри просто чудесный вкус,
понравился даже больше чем аэро (хм.. давно его не встречал, куда он
подевался?). Особенно понравился вариант с грушей и шоколадом. У меня
теперь даже пластиковая ложка всегда с собой в кармане Жалко только, что
баночки не такие большие как хотелось бы.&lt;/p&gt;
</summary><category term="мысли"></category><category term="десерт"></category><category term="еда"></category></entry><entry><title>Эмуляция мышки</title><link href="http://imdagger.github.io/posts/2013/01/07/emuliatsiia-myshki/" rel="alternate"></link><updated>2013-01-07T01:39:04+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2013-01-07:posts/2013/01/07/emuliatsiia-myshki/</id><summary type="html">&lt;p&gt;У старого компа уже давно накрылось несколько мышек, последняя
вообще таинственно пропала (sic сбежала, наверное). А беспроводную не
всегда есть возможность подключить, т.к. она нужна на нетбуке. Поэтому
на случай, когда я оставил нетбук в одном месте с мышкой, но не дома (а
сегодня как раз такой случай), я решил вспомнить, как заставить X-ы
эмулировать мышь. Оказалось, что в последних сборках ArchLinux эту
возможность по умолчанию отключили и мне пришлось поискать и Интернет.
Минут 5 поисков (благо я не один такой), вуаля решение уже готово:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=904880#p904880"&gt;Вариант&lt;/a&gt;
с правкой настроек&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Там же
другой &lt;a class="reference external" href="https://bbs.archlinux.org/viewtopic.php?pid=1045229#p1045229"&gt;вариант&lt;/a&gt;
(сиюминутный и без перезагрузки X-ов и глобальной какой-то правки)&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;$ # вариант 2&lt;/div&gt;
&lt;div class="line"&gt;$ setxkbmap -option keypad:pointerkeys&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Второй вариант хорош, когда просто нужно проверить как оно рабтоает
вцелом. Жмём &lt;kbd class="kbd"&gt;
Shift+NumLock&lt;/kbd&gt;
 и наслаждаемся управлением мышкой через &lt;strong&gt;1,
2, 3, 4, 6, 7, 8, 9&lt;/strong&gt; стрелки и &lt;strong&gt;/ * -&lt;/strong&gt; переключение кнопок мыши, а
&lt;strong&gt;5&lt;/strong&gt; специальная, означающая нажатие выбранной кнопки.&lt;/p&gt;
&lt;p&gt;Если нужно выделить текст в браузере, чтобы скопировать, то жмём в
начале текста Shift, затем 5, затем двигаемся в другое место в тексте и
снова жмём 5, отпускаем Shift.&lt;/p&gt;
</summary><category term="клавиатура"></category><category term="мышь"></category><category term="Xorg"></category><category term="keypad"></category><category term="эмуляция"></category></entry><entry><title>Новый фильм</title><link href="http://imdagger.github.io/posts/2012/12/29/novyi-film/" rel="alternate"></link><updated>2012-12-29T02:33:11+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-12-29:posts/2012/12/29/novyi-film/</id><summary type="html">&lt;p&gt;Качаю Minecraft: The Story of Mojang. Купил за $8 на
&lt;a class="reference external" href="http://redux.com/minecraft-movie"&gt;redux.com&lt;/a&gt;. Надеюсь будет классный
фильм, люблю смотреть фильмы про indie-разработку и жизнь других
разработчиков. Правда, чтобы купить пришлось повозиться, т.к. они
принимают только PayPal, но благо есть onliner.by и очень
полезная&amp;nbsp;&lt;a class="reference external" href="http://forum.onliner.by/viewtopic.php?t=2891475&amp;amp;start=24000"&gt;ветка&lt;/a&gt;
(спасибо автору этой ветки и всему народу там). У меня есть Visa Virtuon
от БПС и Белинвест, первую я запорол ещё когда-то (хотел самостоятельно
пройти верификацию), а вот со второй прокатило, т.к. я прочитал как
нужно правильно пройти все круги ада; пришлось внимательно читать, чтобы
и её не запороть. И спасибо Яндексу, который предоставляет разные домены
для одного и того же ящика :) и &amp;#64;yandex.by и &amp;#64;narod.ru и &amp;#64;ya.ru. Ибо
пришлось регать новый аккаунт в PayPal (не знаю: на долго ли он, может и
заблочат, деньги там держать не буду), а очень не хотелось заводить
левый ящик из-за этого.&lt;/p&gt;
&lt;p&gt;Жалко, что нельзя было оплатить Google Wallet за фильм, т.к. к нему
обе карты подключаются без каких-либо проблем, с полпинка, лишь бы $1 на
карте был.&lt;/p&gt;
</summary><category term="фильм"></category><category term="minecraft"></category><category term="paypal"></category><category term="visa"></category><category term="indie"></category><category term="купил"></category><category term="оплата"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/12/27/urn:ya.ru:post/22199227/1724/" rel="alternate"></link><updated>2012-12-27T00:59:33+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-12-27:posts/2012/12/27/urn:ya.ru:post/22199227/1724/</id><summary type="html">&lt;p&gt;Чтобы при создание Unit-тестов и использовании стандартной
библиотеки unittests не возникало странных ситуаций при работе с
MongoDB, когда появляются внезапно провалившиеся тесты на ровном месте,
следует во время создания соединения через pymongo указать &lt;code class="code"&gt;
safe=True&lt;/code&gt;
,
чтобы каждое изменение разблокировало контекст только после ответа об
успешно применённой операции.&lt;/p&gt;
&lt;blockquote&gt;
pymongo.connection.Connection(port=config.contentserv.port,
&lt;strong&gt;safe=True&lt;/strong&gt;)&lt;/blockquote&gt;
&lt;p&gt;Иначе по-умолчанию изменения отправляются сразу в БД, и клиент не
ожидает подтверждения, что всё хорошо. Что может приводить к неполной
или несвоевременной очистке коллекций между разными тестами.&lt;/p&gt;
</summary><category term="pymongo"></category><category term="unittests"></category><category term="safe"></category></entry><entry><title>Яркость экрана на моём нетбуке</title><link href="http://imdagger.github.io/posts/2012/12/24/iarkost-ekrana-na-moiom-netbuke/" rel="alternate"></link><updated>2012-12-24T22:29:43+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-12-24:posts/2012/12/24/iarkost-ekrana-na-moiom-netbuke/</id><summary type="html">&lt;p&gt;После спящего режима экран не захотел возвращаться к максимальной
яркости на моём нетбуке. Я подумал, что накрылась подсветка. Но благо,
достаточно было сделать:&lt;/p&gt;
&lt;blockquote&gt;
sudo setpci -s 00:02.0 F4.B=99&lt;/blockquote&gt;
&lt;p&gt;Где 99 это коффициент максимальной яркости.&lt;/p&gt;
</summary><category term="setpci"></category><category term="яркость"></category><category term="экран"></category><category term="нетбук"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/12/12/urn:ya.ru:post/22199227/1720/" rel="alternate"></link><updated>2012-12-12T15:01:32+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-12-12:posts/2012/12/12/urn:ya.ru:post/22199227/1720/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Поставил и на домашней и на рабочей машинке bash-completion, чтобы
быть счастливым человеком.&lt;/p&gt;
&lt;blockquote&gt;
sudo pacman -Sy &amp;amp;&amp;amp; sudo pacman -S bash-completion&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Теперь и аргументы и параметры многих команд дополняются по TAB.&lt;/p&gt;
</summary><category term="дополнение"></category><category term="радость"></category><category term="bash"></category></entry><entry><title>Бот ботаня</title><link href="http://imdagger.github.io/posts/2012/11/30/bot-botania/" rel="alternate"></link><updated>2012-11-30T23:45:56+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-11-30:posts/2012/11/30/bot-botania/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Подготовил бота для игры, которую мы скоро релизнем. Можно будет
произвести рассылку от компании, что игра готова и некоторое количество
пользователей откликнется. Вот для них я и подготовил бота для игры в
специфическую версию морского боя, играет он достаточно не плохо, по
поведению похож на человека, что мне и требовалось. Это позволит
удержать на 5-10 пришедшего потенциального игрока, а это в свою очередь
даст возможность ему пересечься не только с ботами, но и с другими
игроками. При чём бот себя никак выдавать не будет, т.к. ему будет
предоставлен настоящий Facebook аккаунт, у него будет настоящий
владелец, фотография, имя и т.д.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Вкратце он работает так:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;смотрит все игры, которые нужно принять и отправляет в них accept&lt;/li&gt;
&lt;li&gt;просматривает игры, где его ход и пробует в ней сделать некоторые
операции, а именно:&lt;/li&gt;
&lt;li&gt;покупает защиты кораблей на все деньги&lt;/li&gt;
&lt;li&gt;защищает 1 точку с вероятностью 0.6 за ход&lt;/li&gt;
&lt;li&gt;пробует уничтожить найденную защиту с вероятностью 0.8&lt;/li&gt;
&lt;li&gt;если нет интересных клеток или просто с вероятностью 0.05 делает
случайных ход, но только в предсказанную свободную клетку (таковыми
точно &lt;strong&gt;не&lt;/strong&gt; являются клетки под кораблями, вокруг них и вокруг
выбитых клеток, которые имеют два прострелянных соседа)&lt;/li&gt;
&lt;li&gt;ищет клетки, которые имеют только одного прострелянного соседа, но
точно не известно есть ли продолжение корабля на противоположной
стороне от соседа&lt;/li&gt;
&lt;li&gt;из полученного списка интересных клеток производится осмотр вокруг
них&lt;/li&gt;
&lt;li&gt;случайно выбирается клетка из потенциально содержащих букву корабля
(ага это не простой морской бой), которые были определены ранее&lt;/li&gt;
&lt;li&gt;завершает сыгранные игры: проигранные или выигранные&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="бот"></category><category term="бой"></category><category term="морской"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/11/14/urn:ya.ru:post/22199227/1713/" rel="alternate"></link><updated>2012-11-14T20:16:09+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-11-14:posts/2012/11/14/urn:ya.ru:post/22199227/1713/</id><summary type="html">&lt;p&gt;Недавно прошёл Machinarium, занятный квест и добрый, приятный стиль.
В нескольких местах сильно затупил, что пришлось пользоваться полной
подсказкой: не мог понять как заставить ворону упасть с висящего кабеля,
не догадался, что нужно повторить услышанную мелодию, чтобы лестница
разблокировалась и затупил с тем, как связать две батарейки вместе (не
обратил внимание, что робот-старик бросил бинт на землю). Может
как-нибудь, если будет время, то куплю ещё игру Botanicula от Amanita
Design (таже студия). Мне нравится их подход к созданию игр.&lt;/p&gt;
</summary><category term="игра"></category><category term="прошёл"></category><category term="впечатление"></category><category term="Machinarium"></category><category term="квест"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/11/11/urn:ya.ru:post/22199227/1711/" rel="alternate"></link><updated>2012-11-11T13:50:14+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-11-11:posts/2012/11/11/urn:ya.ru:post/22199227/1711/</id><summary type="html">&lt;p&gt;Купил Indie Humble Bundle for Android 4. Теперь у меня есть
лицензионные, без какой-либо защиты игры (под любые платформы, я уже
поставил на телефон и под GNU/Linux):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Machinarium&lt;/li&gt;
&lt;li&gt;Splice&lt;/li&gt;
&lt;li&gt;Superbrothers: Sword &amp;amp; Sworcery EP&lt;/li&gt;
&lt;li&gt;Waking Mars&lt;/li&gt;
&lt;li&gt;Eufloria (забавная игра про планетки и семена, и войны между ними)&lt;/li&gt;
&lt;li&gt;Crayon Physics Deluxe&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Машинариум не дал мне нормально поспать :) Всё обошлось мне в $10, я
дал почти в два раза больше среднего, а если бы покупал по 1 игре, то
вышло бы больше $100.&lt;/p&gt;
</summary><category term="bundle"></category><category term="игры"></category><category term="humble"></category><category term="покупка"></category><category term="indie"></category></entry><entry><title>Старый комп</title><link href="http://imdagger.github.io/posts/2012/11/02/staryi-komp/" rel="alternate"></link><updated>2012-11-02T16:56:36+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-11-02:posts/2012/11/02/staryi-komp/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Измерив (приблизительно) линейкой свой старый дисплей от моего
компьютера (с начала 2003 года) я понял, что: то ли DDC видеокарты
возвращает неверный DPI или, что более вероятно, драйвер Nouveau
возвращает или не может определить DPI монитора. Раньше был драйвер от
Nvidia, но они больше не поддерживают мой старый Geforce 4 MX440.
Поэтому пришлось сходить в богатое руководство ArchLinux и взглянуть,
как получить, что за DPI выставлен у меня:&lt;/p&gt;
&lt;blockquote&gt;
xdpyinfo | grep -B2 resolution&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Оказалось, что 96. А по моим расчётам у меня где-то 86 точек на
дюйм. Поэтому после:&lt;/p&gt;
&lt;blockquote&gt;
xrandr –dpi 86&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Приложения в libGDX на этом PC стали отображаться как положено и
задано в сантиметрах.&lt;/p&gt;
</summary><category term="nouveau"></category><category term="отображение"></category><category term="nvidia"></category><category term="компьютер"></category><category term="Xorg"></category><category term="dpi"></category><category term="видеокарта"></category><category term="старый"></category></entry><entry><title>TexturePacker и тайлы</title><link href="http://imdagger.github.io/posts/2012/10/28/texturepacker-i-taily/" rel="alternate"></link><updated>2012-10-28T01:22:46+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-28:posts/2012/10/28/texturepacker-i-taily/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В старом TexturePacker, чтобы он нормально упаковывал тайловые
текстуры нужно кроме того, что добавить _x, _y или _xy суффикс к
названию исходного изображения, следует ещё и minWidth, minHeight тоже
сделать поменьше, а то только те, что больше 128 пойдут в атласы, а
остальные будут проигнорированы. Плюс в моей расширенной версии
упаковщика текстуры не обязаны находиться в одной директории, чтобы
попасть в один атлас, но для этого пришлось изменить немного addImage. А
вот TextureAtlas2 хоть и сделан уже получше, но с расширением его
возможности в сторону разных типов группировок изображений сильно
урезаны. Так ещё и название файла из addImage из нового пакера выпилили,
приходится использовать старый пакер, он тоже очень хорош.&lt;/p&gt;
</summary><category term="упаковка"></category><category term="текстура"></category><category term="libGDX"></category><category term="TexturePacker"></category><category term="тайлы"></category></entry><entry><title>Опциональная библиотека</title><link href="http://imdagger.github.io/posts/2012/10/25/optsionalnaia-biblioteka/" rel="alternate"></link><updated>2012-10-25T13:32:28+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-25:posts/2012/10/25/optsionalnaia-biblioteka/</id><summary type="html">&lt;p&gt;Для выборочного включения
&lt;a class="reference external" href="http://ant.apache.org/manual/Types/fileset.html"&gt;fileset&lt;/a&gt; в path
правиле можно воспользоваться параметром erroronmissingdir, это
позволяет объединить сборку под несколько платформ, когда всего на 1 из
платформ есть дополнительный набор библиотек. Например, при сборке под
PC и Android:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="pgcss-na"&gt;id=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;compiling-env&amp;quot;&lt;/span&gt;&lt;span class="pgcss-nt"&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class="pgcss-nt"&gt;&amp;lt;fileset&lt;/span&gt; &lt;span class="pgcss-na"&gt;id=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;path.internal.android-libs&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;dir=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;${sdk.dir}/platforms/${target}/&amp;quot;&lt;/span&gt;
            &lt;span class="pgcss-na"&gt;erroronmissingdir=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="pgcss-nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="pgcss-nt"&gt;&amp;lt;filename&lt;/span&gt; &lt;span class="pgcss-na"&gt;name=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;android.jar&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-nt"&gt;&amp;lt;/fileset&amp;gt;&lt;/span&gt;
&lt;span class="pgcss-nt"&gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="сборка"></category><category term="файл"></category><category term="Android"></category><category term="ant"></category><category term="выборочный"></category><category term="библиотека"></category></entry><entry><title>Ant, вывод XML</title><link href="http://imdagger.github.io/posts/2012/10/24/ant-vyvod-xml/" rel="alternate"></link><updated>2012-10-24T04:00:23+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-24:posts/2012/10/24/ant-vyvod-xml/</id><summary type="html">&lt;p&gt;При автоматической сборке есть необходимость генерировать
AndroidManifest.xml. Но &lt;code class="code"&gt;
&amp;amp;lt;&lt;/code&gt;
 и &lt;code class="code"&gt;
&amp;amp;gt;&lt;/code&gt;
 выглядят не так наглядно как &amp;lt; и &amp;gt;,
поэтому для echo правило лучше указать &lt;code class="code"&gt;
&amp;lt;!CDATA&amp;lt;[ … ]]&amp;gt;&lt;/code&gt;
, но стоит не
забывать, что это обычный вывод, а не &lt;strong&gt;echoxml&lt;/strong&gt; правило, и если
сделать лишний перевод строки перед &lt;code class="code"&gt;
&amp;lt;?xml&lt;/code&gt;
 тегом, то на выходе будет не
валидный XML.&lt;/p&gt;
&lt;p&gt;А вот задача &lt;strong&gt;echoxml&lt;/strong&gt; позволяет выводить вложенные теги в файл.
Хотя для AndroidManifest.xml она не применима с версией Ant 1.8.2, ибо
он не позволяет вложенному тегу иметь пространство имён (в данном случае
тег manifest с
&lt;code class="code"&gt;
xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/code&gt;
). Но для
остального очень удобная плюшка, которая отформатирует XML добавит
заголовок самостоятельно.&lt;/p&gt;
</summary><category term="вывод"></category><category term="ant"></category><category term="сборка"></category><category term="xml"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/10/24/urn:ya.ru:post/22199227/1703/" rel="alternate"></link><updated>2012-10-24T00:33:58+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-24:posts/2012/10/24/urn:ya.ru:post/22199227/1703/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Выходит, что в AndroidManifest.xml параметр versionName можно
указать как ссылку на ресурс, а versionCode нельзя. Если versionCode
указать, как ссылку на строку из ресурсов, то &lt;strong&gt;adb install&lt;/strong&gt; выдаёт
Failure [INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION].&lt;/p&gt;
</summary><category term="versionCode"></category><category term="adb"></category><category term="Android"></category><category term="manifest"></category></entry><entry><title>Батарея моего телефона</title><link href="http://imdagger.github.io/posts/2012/10/20/batareia-moego-telefona/" rel="alternate"></link><updated>2012-10-20T02:22:34+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-20:posts/2012/10/20/batareia-moego-telefona/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; После обновления прошивки на сентябрьскую мой LG L7 P705 Optimus
стал намного менее прожорливым. Я решил проверить его батарею без
включённого Sleep as Android и она выдержала ~9 дней автономной работы
(раньше у меня при аналогичных настройках удавалось получить дня 3-5).
Меня это радует, это хороший показатель, т.к. я каждый день использовал
телефон для разговоров. С программой для сна выходит где-то 4 дня
работы, что тоже меня устраивает.&lt;/p&gt;
</summary><category term="время"></category><category term="радость"></category><category term="телефон"></category><category term="экономия"></category><category term="ёмкость"></category><category term="аккумулятор"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/10/20/urn:ya.ru:post/22199227/1699/" rel="alternate"></link><updated>2012-10-19T23:27:57+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-20:posts/2012/10/20/urn:ya.ru:post/22199227/1699/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; О! В Ant есть макросы (задача
&lt;a class="reference external" href="http://ant.apache.org/manual/Tasks/macrodef.html"&gt;macrodef&lt;/a&gt;), значит
можно не копипастить одну и туже задачу, если в ней нужно изменить
немного поведение на основе некоторых параметров. Например упаковывать в
атласы изображения из hdpi, mdpi и ldpi директорий с указанием одних и
тех же настроек, но разных источников.&lt;/p&gt;
</summary><category term="ant"></category><category term="повторение"></category><category term="задача"></category><category term="макрос"></category></entry><entry><title>TexturePacker разбор полётов</title><link href="http://imdagger.github.io/posts/2012/10/12/texturepacker-razbor-poliotov/" rel="alternate"></link><updated>2012-10-12T01:26:53+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-12:posts/2012/10/12/texturepacker-razbor-poliotov/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Всё же TexturePacker (который уже успел устареть, т.к. недавно
появился, но ещё не релизнулся TexturePacker2) не настолько топорный,
как я подумал сначала. В нём осталось пару мест, где его можно расширить
и использовать по своему усмотрению. Это методы addImage и process
(который не статический). Можно составить свой список изображений,
сгруппировав их как хочется, затем передать в addImage буфер каждой
картинки (это легко почерпнуть из самих исходников класса), а в конце
вызывать process с указанием куда положить результат и суффиксом для
атласов.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Есть конечно и ложка дёгтя: нельзя простым способом изменить
indexPattern и поведение Filter. Но часть проблемы решается тем, что
addImage вторым параметром принимает название изображение и оно не
обязано быть каким-либо путём на диске. Поэтому в этой точке можно
трансформировать реальный путь к изображению в некоторый псевдоним,
который переварит регулярное выражение indexPattern из TexturePacker.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; P.S. Мне удалось построить на базе этого упаковщика расширенную
версию под собственные нужды на Kawa. Несколько дней размышлений, выбора
упаковщика, пару часов работы и вуаля — персональные нужды
удовлетворены.&lt;/p&gt;
</summary><category term="упаковка"></category><category term="текстура"></category><category term="libGDX"></category><category term="TexturePacker"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/10/11/urn:ya.ru:post/22199227/1697/" rel="alternate"></link><updated>2012-10-11T11:25:01+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-11:posts/2012/10/11/urn:ya.ru:post/22199227/1697/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Вот и сели батарейки у моей мышки, их хватило приблизительно на 10
месяцев активного использования каждый день, напряжение на них упало с
3В до 1,2В. После пересечения границы в 1,3В мышка просто перестала
резко отзываться и погасла. Нужно будет пойти купить снова две AAA
батарейки или аккумулятора.&lt;/p&gt;
</summary><category term="мышь"></category><category term="элемент"></category><category term="беспроводная"></category><category term="заряд"></category><category term="батарейка"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/10/07/urn:ya.ru:post/22199227/1691/" rel="alternate"></link><updated>2012-10-07T00:57:47+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-07:posts/2012/10/07/urn:ya.ru:post/22199227/1691/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Если есть желание прописать Google DNS или OpenDNS сервера перед
DNS, который получен по DHCP от провайдера или модема, то удобно создать
файлик /etc/resolve.conf.head со списком серверов, из него dhcpd будет
брать информацию при регенерации основного resolv.conf.&lt;/p&gt;
</summary><category term="DNS"></category><category term="удобство"></category><category term="DHCP"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/10/04/urn:ya.ru:post/22199227/1683/" rel="alternate"></link><updated>2012-10-04T23:56:48+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-04:posts/2012/10/04/urn:ya.ru:post/22199227/1683/</id><summary type="html">&lt;p&gt;Что-то не похоже, что разработчики
&lt;code class="code"&gt;
com.badlogic.gdx.tools.imagepacker.TexturePacker&lt;/code&gt;
 предусмотрели вариант
расширения этой утилиты, т.к. чтобы унаследоваться от этого класса
придётся переопределить большущий статический монолитный метод process
всего лишь из-за явного использования собственного класса в нём. Проще
подправить сами исходники и протолкнуть в мэйнстрим, чем расширить его.&lt;/p&gt;
</summary><category term="упаковка"></category><category term="текстура"></category><category term="java"></category><category term="libGDX"></category><category term="атлас"></category></entry><entry><title>Автоматическая версия сборки</title><link href="http://imdagger.github.io/posts/2012/10/02/avtomaticheskaia-versiia-sborki/" rel="alternate"></link><updated>2012-10-02T01:16:09+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-10-02:posts/2012/10/02/avtomaticheskaia-versiia-sborki/</id><summary type="html">&lt;p&gt;Хм.. оказывается в Ant есть такая задача, как
&lt;a class="reference external" href="http://ant.apache.org/manual/Tasks/script.html"&gt;script&lt;/a&gt;. Очень
удобно для обработки информации, которая пришла из других источников или
непосредственно из свойств в Ant. Можно запросто вызвать Rhino для
исполнения JavaScript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="pgcss-na"&gt;language=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;src=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;some_file.js&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="pgcss-c"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="pgcss-nx"&gt;естественно&lt;/span&gt; &lt;span class="pgcss-nx"&gt;можно&lt;/span&gt; &lt;span class="pgcss-nx"&gt;и&lt;/span&gt; &lt;span class="pgcss-nx"&gt;непосредственно&lt;/span&gt; &lt;span class="pgcss-nx"&gt;в&lt;/span&gt; &lt;span class="pgcss-nx"&gt;Ant&lt;/span&gt; &lt;span class="pgcss-nx"&gt;build&lt;/span&gt;&lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-nx"&gt;файле&lt;/span&gt; &lt;span class="pgcss-nx"&gt;писать&lt;/span&gt; &lt;span class="pgcss-nx"&gt;этот&lt;/span&gt; &lt;span class="pgcss-nx"&gt;код&lt;/span&gt; &lt;span class="pgcss-o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="pgcss-o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pgcss-nx"&gt;script&lt;/span&gt; &lt;span class="pgcss-nx"&gt;language&lt;/span&gt;&lt;span class="pgcss-o"&gt;=&lt;/span&gt;&lt;span class="pgcss-s2"&gt;&amp;quot;javascript&amp;quot;&lt;/span&gt;&lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;...&lt;/span&gt;
&lt;span class="pgcss-nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Существует возможность исполнять и другие языки, например: такие как
Jython, но &lt;strong&gt;Rhino&lt;/strong&gt; поставляется вместе с JRE. А при
помощи &lt;a class="reference external" href="http://ant.apache.org/manual/Tasks/exec.html"&gt;exec&lt;/a&gt; можно
запустить (с указанием свойства для результата), например, git и
получить последний тег вместе с количеством коммитов до него:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nt"&gt;&amp;lt;exec&lt;/span&gt; &lt;span class="pgcss-na"&gt;executable=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;git&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;outputproperty=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;build.version&amp;quot;&lt;/span&gt;
        &lt;span class="pgcss-na"&gt;failifexecutionfails=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt; &lt;span class="pgcss-na"&gt;failonerror=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="pgcss-nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="pgcss-na"&gt;value=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;describe&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="pgcss-na"&gt;value=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;--tags&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="pgcss-na"&gt;value=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;--always&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="pgcss-na"&gt;value=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;--abbrev=8&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="pgcss-nt"&gt;&amp;lt;arg&lt;/span&gt; &lt;span class="pgcss-na"&gt;value=&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;--dirty=+&amp;quot;&lt;/span&gt; &lt;span class="pgcss-nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="pgcss-nt"&gt;&amp;lt;/exec&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;В свойство build.version попадает значение вида
&lt;strong&gt;&amp;lt;tagname&amp;gt;&lt;/strong&gt;-&lt;strong&gt;&amp;lt;commits&amp;gt;&lt;/strong&gt;-&lt;strong&gt;&amp;lt;sha1&amp;gt;&lt;/strong&gt;, например: &lt;em&gt;1.3-34-cbde6f15&lt;/em&gt;. Я
отключил прерывание сборки, если исполнение git прошло неудачно, т.к. в
дальнейшем скрипт выставит ему значение по умолчанию (для неудачного
свойства).&lt;/p&gt;
&lt;p&gt;Например можно вот так превратить описание от git describe в формат,
который можно сохранить в versionCode для AndroidManifest.xml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-kd"&gt;var&lt;/span&gt; &lt;span class="pgcss-nx"&gt;tag&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nx"&gt;project&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;getProperty&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s2"&gt;&amp;quot;build.version&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;span class="pgcss-kd"&gt;var&lt;/span&gt; &lt;span class="pgcss-nx"&gt;separated&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-nx"&gt;tag&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;split&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s1"&gt;&amp;#39;\\.|-&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;

&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nx"&gt;separated&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;length&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pgcss-mi"&gt;3&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-nx"&gt;project&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;setProperty&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s2"&gt;&amp;quot;build.code&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt;
        &lt;span class="pgcss-nb"&gt;parseInt&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nx"&gt;separated&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;])&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt; &lt;span class="pgcss-mi"&gt;100&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt; &lt;span class="pgcss-mi"&gt;100&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-nb"&gt;parseInt&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nx"&gt;separated&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;])&lt;/span&gt; &lt;span class="pgcss-o"&gt;*&lt;/span&gt; &lt;span class="pgcss-mi"&gt;100&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt;
        &lt;span class="pgcss-nb"&gt;parseInt&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nx"&gt;separated&lt;/span&gt;&lt;span class="pgcss-p"&gt;[&lt;/span&gt;&lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;])&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;span class="pgcss-p"&gt;}&lt;/span&gt; &lt;span class="pgcss-k"&gt;else&lt;/span&gt; &lt;span class="pgcss-p"&gt;{&lt;/span&gt;
    &lt;span class="pgcss-nx"&gt;project&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;setProperty&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-s2"&gt;&amp;quot;build.code&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-o"&gt;-&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;);&lt;/span&gt;
&lt;span class="pgcss-p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Для случая &lt;em&gt;1.3-34-cbde6f15&lt;/em&gt; получится 10334. Если планируется
больше 100 изменений без создания нового тега, то лучше число 100
увеличить в скрипте. В Rhino метод строки &lt;em&gt;split&lt;/em&gt; имеет особенность
заключающуюся в строковом аргументе, который на самом деле описывает
регулярное выражение. Поэтому строка &lt;code class="code"&gt;
 \ \.|-&lt;/code&gt;
 означает, что
разделителем является либо точка либо знак минуса.&lt;/p&gt;
</summary><category term="rhino"></category><category term="нумерация"></category><category term="сборка"></category><category term="тег"></category><category term="Android"></category><category term="ant"></category><category term="версия"></category><category term="контроль"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/09/26/urn:ya.ru:post/22199227/1680/" rel="alternate"></link><updated>2012-09-26T03:09:47+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-09-26:posts/2012/09/26/urn:ya.ru:post/22199227/1680/</id><summary type="html">&lt;p&gt;Почему-то в ночном бреду вспомнилось личное достижение: как я смог
донести до работы &lt;strong&gt;суп&lt;/strong&gt; в ланч-боксе не разлив его в рюкзаке :) Пойду уже
спать.&lt;/p&gt;
</summary><category term="жизнь"></category><category term="еда"></category><category term="бредни"></category></entry><entry><title>Jinja2</title><link href="http://imdagger.github.io/posts/2012/09/24/jinja2/" rel="alternate"></link><updated>2012-09-24T14:43:19+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-09-24:posts/2012/09/24/jinja2/</id><summary type="html">&lt;p&gt;Сел вчера и за полдня переделал в проекте все шаблоны и подсистему,
которая вызывает шаблонизатор, а также инфраструктуру по компиляции и
деплоингу под Jinja2 (вот как-то так: &lt;em&gt;109 files changed, 934
insertions(+), 1373 deletions(-)&lt;/em&gt;). А до этого было Cheetah. Во-первых
стало компилироваться намного быстрее, во-вторых есть множество разных
вариантов загрузки и компиляции шаблонов. Я выбрал складывать всё в один
zip-архив без сжатия. Так же радует автоматическая загрузка шаблонов (в
случае модификации), поддержка &lt;code class="code"&gt;
{{ super() }}&lt;/code&gt;
, наличие макросов с
возможностью обращения к вызывающему контексту. Достаточное количество
фильтров и лёгкость написания своих. В общем очень доволен выбором и
синтаксисом Jinja2 (а также тем, что его легко можно настраивать),
особенно из-за решения нетривиальных проблем с наследованием для
Cheetah.&lt;/p&gt;
&lt;p&gt;Жалко только, что поздно вчера взялся за дело, только около 16:00,
поэтому лёг ночью и поспал всего 3 часа. Но будильник меня разбудил в
нормальном состоянии, я не оказался сильно сонным (помогает то, что он
даёт мне подремать 10 минут).&lt;/p&gt;
</summary><category term="шаблон"></category><category term="Jinja2"></category><category term="программирование"></category><category term="Cheetah"></category><category term="работа"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/09/08/urn:ya.ru:post/22199227/1673/" rel="alternate"></link><updated>2012-09-08T02:48:32+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-09-08:posts/2012/09/08/urn:ya.ru:post/22199227/1673/</id><summary type="html">&lt;p&gt;Второй раз уже обнаруживаю по результату вывода Jad, что я
прокололся и снова вызвал свойство. В Kawa «:»-нотация позволяет
прозрачно обрабатывать геттеры и сеттеры. Но я иногда забываю, что
оперировать нужно с этим полем просто как со свойством, и вызываю как
функцию. Jad показывает странность уже до запуска самого приложения,
которая проявляется в дополнительных конструкциях в духе Float.valueOf +
floatValue + force + конечно же apply1 для всего этого счастья.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let* &lt;/span&gt;&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;finished&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;media:update&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
       &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;new-progress-state&lt;/span&gt; &lt;span class="pgcss-nv"&gt;media:manager:progress&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt; &lt;span class="pgcss-c1"&gt;;; вот тут media:manager:progress это&lt;/span&gt;
                                                    &lt;span class="pgcss-c1"&gt;;; на самом деле&lt;/span&gt;
                                                    &lt;span class="pgcss-c1"&gt;;;     media.getManager().getProgress()&lt;/span&gt;
                                                    &lt;span class="pgcss-c1"&gt;;; в терминологии Java&lt;/span&gt;
 &lt;span class="pgcss-o"&gt;....&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="column"></category><category term="свойства"></category><category term="нотация"></category><category term="getter"></category><category term="kawa"></category><category term="вызов"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/09/05/urn:ya.ru:post/22199227/1672/" rel="alternate"></link><updated>2012-09-05T14:21:41+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-09-05:posts/2012/09/05/urn:ya.ru:post/22199227/1672/</id><summary type="html">&lt;p&gt;Чтобы породить в Emacs некий процесс и, когда он завершится, то
вызвать обработчик, нужно сделать так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;defun&lt;/span&gt; &lt;span class="pgcss-nv"&gt;some-restart-service&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;service&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;set-process-sentinel&lt;/span&gt;
   &lt;span class="pgcss-c1"&gt;;; название процесса может быть любым, оно для именованного доступа&lt;/span&gt;
   &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;start-process-shell-command&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;название-процесса&amp;quot;&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;*имя-буффера-вывода*&amp;quot;&lt;/span&gt;
                                &lt;span class="pgcss-s"&gt;&amp;quot;произвользая-комманда-для-оболочки&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
   &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;service-tool&lt;/span&gt; &lt;span class="pgcss-nv"&gt;event&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
     &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;when&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;eq&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;process-status&lt;/span&gt; &lt;span class="pgcss-nv"&gt;service-tool&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;exit&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
       &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;zerop&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;process-exit-status&lt;/span&gt; &lt;span class="pgcss-nv"&gt;xsf-tool&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
           &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;message&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;All is done.&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
         &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;message&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;Something went wrong.&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Вешаем наш &lt;strong&gt;some-restart-service&lt;/strong&gt; на какую-нибудь клавишу или
просто вызываем. Подсмотрел идею в
&lt;a class="reference external" href="http://xwl.appspot.com/ref/gmail-notifier.el"&gt;http://xwl.appspot.com/ref/gmail-notifier.el&lt;/a&gt;
(макрос &lt;code class="code"&gt;
gmail-notifier-shell-command-asynchronously-with-callback&lt;/code&gt;
).&lt;/p&gt;
</summary><category term="emacs"></category><category term="процесс"></category><category term="обработчик"></category><category term="завершение"></category></entry><entry><title>Истина где-то рядом</title><link href="http://imdagger.github.io/posts/2012/09/05/istina-gde-to-riadom/" rel="alternate"></link><updated>2012-09-05T00:28:59+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-09-05:posts/2012/09/05/istina-gde-to-riadom/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Затратив почти 2,5 часа на поиск, почему не работает звук на новой
машинке, я перебрал всевозможные варианты (а всё от того, что у меня
HDMI от NVidia и я почему-то упорно верил, что проблема где-то в
драйверах и настройках): останавливал pulseaudio и выводил звук через
alsa, прописывал жёсткие настройки для устройств /etc/asound.conf,
мьютил всё подряд, но проблема оказалась ближе, чем я думал. Намного
ближе, … прямо во мне. Помогла осознать
это&amp;nbsp;&lt;a class="reference external" href="ftp://download.nvidia.com/XFree86/gpu-hdmi-audio-document/gpu-hdmi-audio.html"&gt;статья&lt;/a&gt;
с сайта NVidia, где упоминалась утилита&lt;/p&gt;
&lt;blockquote&gt;
sudo speaker-test -c 2 -r 48000 -D hw:0,0&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Она смогла выдать шум в наушники и я заподозрил неладное. Я решил
проверить проигрывается ли музыка от &lt;em&gt;root&lt;/em&gt;. И.. бинго! проблема была в
том, что мой пользователь не был в группе &lt;strong&gt;audio&lt;/strong&gt;. &lt;em&gt;Хотя я это должен
был проверить первым делом&lt;/em&gt;, сделать ls -l /dev/snd/&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Без достаточных прав pulseaudio конфигуратор выдавал только то, что
у меня нет output devices.&lt;/p&gt;
</summary><category term="audio"></category><category term="hdmi"></category><category term="nvidia"></category><category term="pulseaudio"></category><category term="звук"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/09/05/urn:ya.ru:post/22199227/1670/" rel="alternate"></link><updated>2012-09-05T00:18:18+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-09-05:posts/2012/09/05/urn:ya.ru:post/22199227/1670/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Пожертвовал сегодня $5 в пользу проекта ArchLinux.&lt;/p&gt;
</summary><category term="arch"></category><category term="дистрибутив"></category><category term="пожертвование"></category><category term="linux"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/08/26/urn:ya.ru:post/22199227/1668/" rel="alternate"></link><updated>2012-08-26T03:44:35+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-08-26:posts/2012/08/26/urn:ya.ru:post/22199227/1668/</id><summary type="html">&lt;p&gt;При построении макросов, которые генерируют классы сталкиваешься с
проблемой, что имя объекта является переменной или метод является
переменной. Для первого случая всё решается стандартной column-нотацией,
а вот для второго нельзя так просто взять и написать:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;some-object:&lt;/span&gt;&lt;span class="pgcss-o"&gt;#,&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;generated-method&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Лучше делать это с использованием &lt;strong&gt;$lookup$&lt;/strong&gt;, с ним проще и понятнее:
каким образом конструкцию обработает компилятор:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;$lookup$&lt;/span&gt; &lt;span class="pgcss-nv"&gt;some-object&lt;/span&gt; &lt;span class="pgcss-o"&gt;&amp;#39;#,&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;generated-method&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="Scheme"></category><category term="kawa"></category><category term="макрос"></category><category term="объект"></category><category term="поле"></category></entry><entry><title></title><link href="http://imdagger.github.io/posts/2012/08/24/urn:ya.ru:post/22199227/1667/" rel="alternate"></link><updated>2014-07-15T03:00:00+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-08-24:posts/2012/08/24/urn:ya.ru:post/22199227/1667/</id><summary type="html">&lt;p&gt;Не до конца ясно для меня почему так, но скорее всего это связано
как-то с рефлексией. Создание переменной типа procedure и присваивание в
неё ссылки на метод класса приводит к тому, что дальнейшие её вызовы
медленнее, чем аналогичная переменная, которая содержит lambda выражение
с явным вызовом требуемого метода. Т.е. вот такой код (скомпилированный
компилятором Kawa под целевую платформу JVM) исполняется на моём Intel
Atom D525 с 1.8 GHz где-то не более 0.8 секунды:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;module-export&lt;/span&gt; &lt;span class="pgcss-nv"&gt;Test&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;define-simple-class&lt;/span&gt; &lt;span class="pgcss-nv"&gt;Test&lt;/span&gt; &lt;span class="pgcss-p"&gt;()&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;internal-field&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::procedure&lt;/span&gt; &lt;span class="pgcss-nv"&gt;init:&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda &lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;this&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-nv"&gt;:real-method&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt;
    &lt;span class="pgcss-c1"&gt;;(internal-field ::procedure init: (this):real-method)&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;real-method&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::int&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;+ &lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;iter&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;MAX&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::int&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::&lt;/span&gt; &lt;span class="pgcss-nv"&gt;void&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let &lt;/span&gt;&lt;span class="pgcss-nv"&gt;loop&lt;/span&gt; &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;i&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::int&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
                &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;this&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-nv"&gt;:internal-field&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;when&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;&amp;lt; &lt;/span&gt;&lt;span class="pgcss-nv"&gt;i&lt;/span&gt; &lt;span class="pgcss-nv"&gt;MAX&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;loop&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;+ &lt;/span&gt;&lt;span class="pgcss-nv"&gt;i&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))))&lt;/span&gt;

&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;Test&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-nv"&gt;:iter&lt;/span&gt; &lt;span class="pgcss-mi"&gt;10000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;А вот такой код исполняется уже около &lt;strong&gt;8 секунд&lt;/strong&gt;: (вариант с set!
внутри конструктора работает аналогично)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;module-export&lt;/span&gt; &lt;span class="pgcss-nv"&gt;Test&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;define-simple-class&lt;/span&gt; &lt;span class="pgcss-nv"&gt;Test&lt;/span&gt; &lt;span class="pgcss-p"&gt;()&lt;/span&gt;
    &lt;span class="pgcss-c1"&gt;;(internal-field ::procedure init: (lambda () ((this):real-method)))&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;internal-field&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::procedure&lt;/span&gt; &lt;span class="pgcss-nv"&gt;init:&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;this&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-nv"&gt;:real-method&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;real-method&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::int&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;+ &lt;/span&gt;&lt;span class="pgcss-mi"&gt;1&lt;/span&gt; &lt;span class="pgcss-mi"&gt;2&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;iter&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;MAX&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::int&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::&lt;/span&gt; &lt;span class="pgcss-nv"&gt;void&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;let &lt;/span&gt;&lt;span class="pgcss-nv"&gt;loop&lt;/span&gt; &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;i&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::int&lt;/span&gt; &lt;span class="pgcss-mi"&gt;0&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
                &lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;this&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-nv"&gt;:internal-field&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;when&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;&amp;lt; &lt;/span&gt;&lt;span class="pgcss-nv"&gt;i&lt;/span&gt; &lt;span class="pgcss-nv"&gt;MAX&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;loop&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nb"&gt;+ &lt;/span&gt;&lt;span class="pgcss-nv"&gt;i&lt;/span&gt; &lt;span class="pgcss-mi"&gt;1&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))))&lt;/span&gt;

&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;Test&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;&lt;span class="pgcss-nv"&gt;:iter&lt;/span&gt; &lt;span class="pgcss-mi"&gt;10000000&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="проблема"></category><category term="производительность"></category><category term="kawa"></category><category term="динамический"></category><category term="поведение"></category><category term="класс"></category><category term="процедура"></category></entry><entry><title>Bigloo и Kawa</title><link href="http://imdagger.github.io/posts/2012/08/09/bigloo-i-kawa/" rel="alternate"></link><updated>2012-08-09T12:04:21+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-08-09:posts/2012/08/09/bigloo-i-kawa/</id><summary type="html">&lt;p&gt;Почему же я решил променять Bigloo на Kawa? Я очень доволен Bigloo,
он работает достаточно стабильно, ошибки выводит внятные и трэйсы
программ и под Native и под JVM понятные. В нём можно использовать Java
классы и интерфейсы, но… но нельзя экспортировать свой класс как JVM
класс.&lt;/p&gt;
&lt;p&gt;Я смог дописать этот функционал (хотя он скорее в состоянии хака),
но он у меня работает не так как я хотел бы, да и куча подводных камней.
Поэтому я решил пока не тратить драгоценное время на ковыряние самого
компилятора (хотя код в нём оказался достаточно понятный для меня и весь
написан на Scheme).&lt;/p&gt;
&lt;p&gt;С другой стороны Kawa имеет кучу плюшек на платформе JVM, она для
неё родная. А мне как раз сейчас и нужна только JVM. Для нэйтив я буду
юзать Bigloo если что. Kawa на мой взгляд по качеству самого компилятора
чуть более сырая, чем Bigloo и написана по большей части на Java.
Поэтому поправить код Kawa для меня намного труднее, ибо Java мне даётся
сложнее, чем Scheme.&lt;/p&gt;
&lt;p&gt;Так вот пару дней назад наткнулся, что Kawa просто выпадает на моём
коде, вот выжимка из него:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;define-class&lt;/span&gt; &lt;span class="pgcss-nv"&gt;FailClass&lt;/span&gt; &lt;span class="pgcss-p"&gt;()&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;x&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::float&lt;/span&gt; &lt;span class="pgcss-nv"&gt;access:&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;private&lt;/span&gt; &lt;span class="pgcss-nv"&gt;init:&lt;/span&gt; &lt;span class="pgcss-mf"&gt;0.0&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;

&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;wrap-x&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda &lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-nv"&gt;x&lt;/span&gt;&lt;span class="pgcss-p"&gt;))&lt;/span&gt;
&lt;span class="pgcss-p"&gt;((&lt;/span&gt;&lt;span class="pgcss-nf"&gt;calculate-position&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;letrec &lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;wrap-func&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;lambda &lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;wrap-x&lt;/span&gt;&lt;span class="pgcss-p"&gt;)))&lt;/span&gt; &lt;span class="pgcss-p"&gt;)&lt;/span&gt;
     &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;wrap-func&lt;/span&gt;&lt;span class="pgcss-p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;При чём, если заменить &lt;strong&gt;x&lt;/strong&gt; на &lt;strong&gt;(this):x&lt;/strong&gt;, то всё отлично
срабатывает. Kawa 1.12.1 (revision 7282) и стабильная 1.12 просто падали
с ошибкой NullPointerException:&lt;/p&gt;
&lt;p class="cut"&gt;&lt;a class="h-link reference internal" href="#cut_78756560"data-toggle="collapse"&gt;показать стэк-трейс&lt;/a&gt;&lt;/p&gt;
&lt;div class="collapse" id="cut_78756560"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;compiling&lt;/span&gt; &lt;span class="pgcss-n"&gt;test&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;scm&lt;/span&gt; &lt;span class="pgcss-n"&gt;to&lt;/span&gt; &lt;span class="pgcss-n"&gt;test&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
&lt;span class="pgcss-n"&gt;test&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;scm&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;4&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt; &lt;span class="pgcss-n"&gt;internal&lt;/span&gt; &lt;span class="pgcss-n"&gt;error&lt;/span&gt; &lt;span class="pgcss-k"&gt;while&lt;/span&gt; &lt;span class="pgcss-n"&gt;compiling&lt;/span&gt; &lt;span class="pgcss-n"&gt;test&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;scm&lt;/span&gt;
&lt;span class="pgcss-n"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;lang&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;NullPointerException&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setCallersNeedStaticLink&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;209&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setNeedsStaticLink&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;199&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;capture&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;419&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;capture&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;509&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitReferenceExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;484&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitReferenceExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ReferenceExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ReferenceExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;183&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;53&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildrenOnly&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1716&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildren&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1703&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitExpression&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;29&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitScopeExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;98&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;102&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;297&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1692&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;53&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildrenOnly&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1716&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildren&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1703&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitExpression&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;29&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitScopeExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;98&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;102&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;297&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildren&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;787&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitExpression&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;29&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitScopeExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;98&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;102&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;297&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;103&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;125&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ClassExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;762&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;57&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitAndUpdate&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;143&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitSetExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;109&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitSetExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;541&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitSetExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;SetExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;SetExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;432&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;53&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildrenOnly&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1716&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitChildren&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;LambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1703&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitExpression&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;29&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitScopeExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;98&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ExpVisitor&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;102&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitLambdaExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;297&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitModuleExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;152&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visitModuleExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;11&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ModuleExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;visit&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModuleExp&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;472&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;findCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;FindCapturedVars&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;17&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;Compilation&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;process&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Compilation&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;1940&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ModuleInfo&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;loadByStages&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModuleInfo&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;305&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ModuleInfo&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;loadByStages&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModuleInfo&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;290&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;gnu&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;expr&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ModuleInfo&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;loadByStages&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;ModuleInfo&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;290&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;kawa&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;repl&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;compileFiles&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;repl&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;824&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;kawa&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;repl&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;processArgs&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;repl&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;444&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
    &lt;span class="pgcss-n"&gt;at&lt;/span&gt; &lt;span class="pgcss-n"&gt;kawa&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;repl&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;main&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;repl&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;java&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;870&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Я решил не ковыряться и не тратить время, а попытать счастья и
написать в список рассылки о проблеме, т.к. сообщество выглядит живым и
активным. И о чудо через пару часов основной разработчик откликнулся, а
уже спустя меньше, чем 24 часа баг был исправлен и я смог продолжить.
Так что теперь больше такой проблемы нет. Хотя по ощущениям, ещё раз
повторюсь, Kawa выглядит чуть более сырой, чем Bigloo.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="программирование"></category><category term="Scheme"></category><category term="kawa"></category><category term="компилятор"></category><category term="улучшение"></category><category term="разработка"></category><category term="размышления"></category><category term="bigloo"></category></entry><entry><title>Дудлы гугла</title><link href="http://imdagger.github.io/posts/2012/08/08/dudly-gugla/" rel="alternate"></link><updated>2012-08-08T17:11:47+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-08-08:posts/2012/08/08/dudly-gugla/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Уже второй раз забыл, что хотел найти, после того как сыграл в дудл
гугла =/.&lt;/p&gt;
</summary><category term="дудл"></category><category term="doodle"></category><category term="поиск"></category><category term="google"></category></entry><entry><title>Sleep as Android</title><link href="http://imdagger.github.io/posts/2012/07/31/sleep-as-android/" rel="alternate"></link><updated>2012-07-31T00:17:41+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-31:posts/2012/07/31/sleep-as-android/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Купил недавно себе приложение за $1.46, очень полезное для меня.
Называется &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.urbandroid.sleep&amp;amp;hl=ru"&gt;Sleep as
Android&lt;/a&gt;.
Там даётся для начала триальная версия на 14 дней, я попробовал немного
и после того как убедился, что оно работает, то купил. И не жалею,
теперь стал просыпаться бодрым, смог сократить свой ненормальный сон на
4 часа и теперь просыпаюсь под приятный будильник.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Хорошо, что мой телефон может регистрировать показания акселерометра
даже в заблокированном состоянии. Это позволяет мне отключить дисплей и
не тратить на него энергию. Класть телефон рядом с собой я не рискнул,
т.к. запросто его сброшу с постели, положил его под матрас (у меня
специальная секция есть в раскладной кровати, куда его удалось
положить). Теперь он оттуда регистрирует мои все повороты во сне.&lt;/p&gt;
</summary><category term="доволен"></category><category term="программа"></category><category term="пробуждение"></category><category term="покупка"></category><category term="Android"></category><category term="сон"></category></entry><entry><title>Экспорт Java-классов в Bigloo</title><link href="http://imdagger.github.io/posts/2012/07/22/eksport-java-klassov-v-bigloo/" rel="alternate"></link><updated>2012-07-22T04:19:34+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-22:posts/2012/07/22/eksport-java-klassov-v-bigloo/</id><summary type="html">&lt;p&gt;Bigloo Scheme прекрасно умеет импортировать Java-классы, но если
требуется унаследоваться от какого-либо Java-класса, то встаёт небольшая
проблема – нужно писать на Java обёртку, которая дёргает процедуры из
модуля. Это не очень удобно, т.к. приходится постоянно писать такие
обёртки, а хотелось бы, чтобы код был сгенерирован автоматически. После
отдыха на природе я смог собраться с силами и сделать это. Я смог
заставить (пока с кучей грязно-кода и хаков) Bigloo Scheme переварить
нечто такое:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;module&lt;/span&gt; &lt;span class="pgcss-nv"&gt;some-name&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;....&lt;/span&gt;
    &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;java&lt;/span&gt;
        &lt;span class="pgcss-o"&gt;.....&lt;/span&gt;
        &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;export&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;class&lt;/span&gt; &lt;span class="pgcss-nv"&gt;name::parent&lt;/span&gt;
                  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;field&lt;/span&gt; &lt;span class="pgcss-nv"&gt;x::int&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;xname&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
                  &lt;span class="pgcss-o"&gt;...&lt;/span&gt;
                  &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nf"&gt;method&lt;/span&gt; &lt;span class="pgcss-nv"&gt;test::void&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt; &lt;span class="pgcss-nv"&gt;::name&lt;/span&gt; &lt;span class="pgcss-p"&gt;))))&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;...&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;И оно даже сгенерировало классы для экспортируемых сущностей и
тестовый образец заработал после нескольких допиливаний в JVM-as коде и
сборкой при помощи утилиты &lt;em&gt;bgljas&lt;/em&gt;.&lt;/p&gt;
</summary><category term="JVM"></category><category term="генерация"></category><category term="Scheme"></category><category term="java"></category><category term="автоматический"></category><category term="улучшение"></category><category term="bigloo"></category><category term="класс"></category><category term="экспорт"></category></entry><entry><title>Сварка</title><link href="http://imdagger.github.io/posts/2012/07/21/svarka/" rel="alternate"></link><updated>2012-07-21T19:59:32+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-21:posts/2012/07/21/svarka/</id><summary type="html">&lt;p&gt;Сегодня попробовал себя в роли сварщика. У отца есть свой сварочный
аппарат, поэтому я решил попробовать увидеть как оно выглядит: через специальный
защитный шлем смотреть на дуговую искру от электрода к поверхности.
Вобщем первая сварка у меня комом :) Вижу я плоховато без очков, а от
этого ещё и плохо чувствую дистанцию между поверхностью и электродом,
поэтому получилась сварка каплями, или как говорят: «соплей навешал». И
вначале я электрон пытался приложить под прямым углом, оказалось это не
правильно, от этого у меня либо дуга не возникала вообще, либо электрод
прилипал к объекту. Но потом я чуть наловчился, но всё равно было трудно
держать плазму и при этом не воткнуться в металл, чтобы электрод не
прилип снова. Мне понравилось.&lt;/p&gt;
</summary><category term="первый"></category><category term="сварка"></category><category term="жизнь"></category><category term="опыт"></category></entry><entry><title>Indie Game: The Movie</title><link href="http://imdagger.github.io/posts/2012/07/19/indie-game-the-movie/" rel="alternate"></link><updated>2012-07-19T03:00:30+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-19:posts/2012/07/19/indie-game-the-movie/</id><summary type="html">&lt;p&gt;Посмотрел этот документальный фильм. Очень воодушевляет, очень
эмоционально. Посмотрел всё на одном дыхании. В общем отличнейший
мотиватор, чтобы делать игры.&lt;/p&gt;
&lt;p&gt;P.S. Денег не пожалел и&amp;nbsp;&lt;a class="reference external" href="http://indiegamethemovie.com"&gt;купил&lt;/a&gt; этот
фильм, тем более, что требовалось всего $4.99, т.к. сейчас распродажа;
но и без неё он стоит дёшево.&lt;/p&gt;
&lt;p&gt;P.S.S. Думаю ещё раза 3 как минимум его пересмотрю. И музыка в нём тоже
атмосферная.&lt;/p&gt;
</summary><category term="фильм"></category><category term="жизнь"></category><category term="программирование"></category><category term="документальный"></category><category term="дизайн"></category><category term="мотиватор"></category><category term="indie"></category><category term="атмосферное"></category><category term="игры"></category></entry><entry><title>Через пару минут</title><link href="http://imdagger.github.io/posts/2012/07/16/cherez-paru-minut/" rel="alternate"></link><updated>2012-07-16T15:02:23+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-16:posts/2012/07/16/cherez-paru-minut/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Вот и подходит к концу ICFP Contest 2012. Я успел отправить нашего
бота на соревнование, правда он больше странная эвристика и поиск в
глубину с ограничением глубины, которая тоже вычисляется эвристически.
Добавить больше возможностей и отладить его я уже не успевал, решил
побольше поспать, иначе какой фан от соревнования, если себя выживать
ради этого. Жаль, что в этом году задача была больше классической, но
немного порадовал (и одновременно создавал раздражение и ажиотаж) формат
конкурса, в этот раз задача постепенно расширялась по мере продвижения
конкурса. Добавлялись новые непротиворечивые условия и правила. В целом
очень доволен, хорошо отдохнул и провёл время. Мы будем участвовать
командой в следующем году снова.&lt;/p&gt;
</summary><category term="соревнование"></category><category term="завершение"></category><category term="2012"></category><category term="icfpc"></category></entry><entry><title>Визуализатор для карты</title><link href="http://imdagger.github.io/posts/2012/07/14/vizualizator-dlia-karty/" rel="alternate"></link><updated>2012-07-14T14:39:52+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-14:posts/2012/07/14/vizualizator-dlia-karty/</id><summary type="html">&lt;p&gt;Сделал вчера визуализацию для карты и робота из задачи с ICFPC 2012.
Теперь немного проще размышлять и смотреть на небольших картах, что
стоит делать роботу и какие есть трюки. А также перепроверять
оптимальность будущего решения визуально и смотреть, где у него
проблемы.&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/491821/"&gt;&lt;img alt="image0" src="http://img-fotki.yandex.ru/get/5706/22199227.a/0_7812d_977fadc1_L" title="image0"/&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="2012"></category><category term="визуализация"></category><category term="карта"></category><category term="icfpc"></category></entry><entry><title>Осталось менее 30 минут до начала</title><link href="http://imdagger.github.io/posts/2012/07/13/ostalos-menee-30-minut-do-nachala/" rel="alternate"></link><updated>2012-07-13T14:38:44+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-13:posts/2012/07/13/ostalos-menee-30-minut-do-nachala/</id><summary type="html">&lt;p&gt;Подготавливаюсь морально к ICFPC 2012. Интересно всё, что до этого
они писали было ли подсказками. И трамплин этот и карта. Хм.. ну скоро
узнаю :)&lt;/p&gt;
</summary><category term="соревнование"></category><category term="начало"></category><category term="2012"></category><category term="конкурс"></category><category term="icfpc"></category></entry><entry><title>Упрощение использование Java классов в Bigloo</title><link href="http://imdagger.github.io/posts/2012/07/13/uproshchenie-ispolzovanie-java-klassov-v-bigloo/" rel="alternate"></link><updated>2012-07-13T03:02:42+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-13:posts/2012/07/13/uproshchenie-ispolzovanie-java-klassov-v-bigloo/</id><summary type="html">&lt;p&gt;Уфф… нашёл то место, где можно начать расширять этот компилятор
Scheme. Вот оно: &lt;code class="code"&gt;
comptime/Module/java.scm&lt;/code&gt;
. Тут объявлены внутренние
класс &lt;code class="code"&gt;
jklass&lt;/code&gt;
 (да, именно с буквой &lt;strong&gt;k&lt;/strong&gt;, т.к. есть и &lt;code class="code"&gt;
jclass&lt;/code&gt;
) и &lt;code class="code"&gt;
jmethod&lt;/code&gt;
.
Планирую добавить поле по умолчанию для jmethod, которое будет указывать
на функции, которые в свою очередь нужно будет добавить прямо в
сгенерированный класс. Может ещё какой define-java-method объявлю. Вроде
дело сдвинулось с мёртвой точки.&lt;/p&gt;
</summary><category term="Scheme"></category><category term="класс"></category><category term="bigloo"></category><category term="программирование"></category><category term="улучшение"></category></entry><entry><title>Циклические структуры</title><link href="http://imdagger.github.io/posts/2012/07/12/tsiklicheskie-struktury/" rel="alternate"></link><updated>2012-07-12T01:51:12+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-12:posts/2012/07/12/tsiklicheskie-struktury/</id><summary type="html">&lt;p&gt;Python при выводе циклической структуры выкручивается вот так:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="doctest-block"&gt;
&amp;gt;&amp;gt;&amp;gt; a = {1 : 2}
&amp;gt;&amp;gt;&amp;gt; a['2'] = a
&amp;gt;&amp;gt;&amp;gt; a
{1: 2, '2': {...}}
&amp;gt;&amp;gt;&amp;gt; print (a)
{1: 2, '2': {...}}
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;А вот в Bigloo Scheme стандартные display, print и pp не умеют такое
обрабатывать. Но благо нашёлся в документации рядом с display метод
display-circle. Вот он очень хорошо справляется с такой задачей. В
отличии от предыдущих функций, которые просто зацикливаются:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
------------------------------------------------------------------------------
Bigloo (3.8c)                                                            ,--^,
`a practical Scheme compiler'                                      _ ___/ /|/
Сб. июня 9 01:57:24 FET 2012                             ,;'( )__, ) '
Inria -- Sophia Antipolis                                     ;;  //   L__.
email: bigloo&amp;#64;lists-sop.inria.fr                              '   \    /  '
url: http://www-sop.inria.fr/indes/fp/Bigloo                       ^   ^
------------------------------------------------------------------------------
1:=&amp;gt; (define x '(1))
x1:=&amp;gt; (append! x x)
#0=(1 . #0#)
1:=&amp;gt; (display-circle x)
#0=(1 . #0#)
&lt;/pre&gt;
&lt;p&gt;Чего это я вдруг наткнулся на это и вспомнил? Да вот нужно было
вывести класс, а там была ссылка на структуру, которая ссылалась опять
на класс. А я без особых размышлений сделал (print x) и зациклился,
пришлось прервать.&lt;/p&gt;
</summary><category term="программирование"></category><category term="Scheme"></category><category term="python"></category><category term="bigloo"></category><category term="структура"></category><category term="циклический"></category></entry><entry><title>Подсветка скобочек</title><link href="http://imdagger.github.io/posts/2012/07/05/podsvetka-skobochek/" rel="alternate"></link><updated>2012-07-05T01:39:33+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-05:posts/2012/07/05/podsvetka-skobochek/</id><summary type="html">&lt;p&gt;В режиме работы со Scheme (в частности bee-mode из поставки Bigloo)
мне не хватало функции подсветки скобочек, чтобы видеть области кода. В
начале я даже думал писать свой режим, т.к. не получалось найти то, что
хочу. Но повременив с этим и более тщательно поискав, нашёлся минорный
режим, который отлично ладит с моим основным режимом редактирования
Scheme. Вот он —
&lt;a class="reference external" href="http://www.emacswiki.org/HighlightParentheses"&gt;highlight-parentheses-mode&lt;/a&gt;.
Правда я думал, что он будет выделять цветом и код внутри скобок; но всё
же, наверное, это меня раздражало и надоело бы, поэтому оно и так
чудесно всё из коробки.&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/489580/"&gt;&lt;img alt="image0" src="http://img-fotki.yandex.ru/get/5210/22199227.a/0_7786c_9aadda4f_M" title="image0"/&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="цвет"></category><category term="Scheme"></category><category term="emacs"></category><category term="режим"></category><category term="скобки"></category><category term="удобство"></category><category term="parentheses"></category><category term="highlight"></category></entry><entry><title>Golden Axe</title><link href="http://imdagger.github.io/posts/2012/07/04/golden-axe/" rel="alternate"></link><updated>2012-07-04T00:30:21+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-07-04:posts/2012/07/04/golden-axe/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Эх… и меня пираты в детстве обманули и выдали Astyanax за картридж
Golden Axe. Я долгое время верил, что Golden Axe существовал для моего
Dendy (клона NES). Только недавно, решив порыскать, какие там дальше
босы были после зависания узнал, что это была совсем другая хакнутая
игра.&lt;/p&gt;
</summary><category term="играл"></category><category term="жизнь"></category><category term="забавно"></category><category term="детство"></category></entry><entry><title>Amazon EC2</title><link href="http://imdagger.github.io/posts/2012/06/28/amazon-ec2/" rel="alternate"></link><updated>2012-06-28T16:21:20+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-06-28:posts/2012/06/28/amazon-ec2/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Благодаря Visa Virtuon карточке, смог завести себе Amazon аккаунт.
Правда верификация аккаунта у них проходит немного странно и несколько
часов для страны, где я живу. Взяли с меня всю инфу, кто, что, адрес и
т.д. Затем попросили номер телефона и позвонили мне на него, там был
бот, который рассказывал, что я должен набрать ему номер, который вижу
на экране. Со второй попытки я понял, что нужно делать на моём телефоне
(благо они перезванивают). После я смог возспользоваться их годовой
льготой, т.е. бесплатным Micro Instance, по мне так очень неплохой
инстанс для моих задач, 2Ghz процессор, 600MiB оперативной памяти и 8GiB
винчестер. И всё это за $0 в месяц.&lt;/p&gt;
</summary><category term="ec2"></category><category term="aws"></category><category term="amazon"></category><category term="micro"></category><category term="instance"></category></entry><entry><title>И ещё одно небольшое пожертвование</title><link href="http://imdagger.github.io/posts/2012/06/15/i-eshchio-odno-nebolshoe-pozhertvovanie/" rel="alternate"></link><updated>2012-06-15T18:33:34+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-06-15:posts/2012/06/15/i-eshchio-odno-nebolshoe-pozhertvovanie/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; На этот раз $1 в фонд FSF, я потом ещё пожертвую, как переведу на
карточку немного больше денег.&lt;/p&gt;
</summary><category term="небольшое"></category><category term="пожертвование"></category><category term="FSF"></category></entry><entry><title>Visa Virtuon</title><link href="http://imdagger.github.io/posts/2012/06/15/visa-virtuon/" rel="alternate"></link><updated>2012-06-15T18:20:13+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-06-15:posts/2012/06/15/visa-virtuon/</id><summary type="html">&lt;p&gt;Сегодня дошли руки до моей карточки и я решил положить туда
немного денег. Но т.к. БПС банк уже не выдаёт пластиковые карточки для
Visa Virtuon (экономят пластик), то у меня был просто записанный номер
карточки, а срок окончания действия я забыл переписать. Я ошибся с датой
окончания и пытался в банке зачислить деньги от чего пришлось там
провозится 30 минут без результата. Но потом коллега по работе перевёл
мне немного денег на карточку и я смог проверить другую дату окончания:
которая на месяц раньше. И всё нормально прошло, завтра ещё положу денег
на карточку.&lt;/p&gt;
&lt;p&gt;А пока я потратил с неё первый евро. 1 евро я пожертвовал в фонд
Викимедиа:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Здравствуйте, Alexander!&lt;/p&gt;
&lt;p&gt;Хочу выразить вам своё восхищение и огромную благодарность за
пожертвование в Фонд Викимедиа!&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Для вашего архива: ваш взнос от 2012-06-15 составил EUR 1.00.&lt;/p&gt;
&lt;/blockquote&gt;
</summary><category term="жизнь"></category><category term="БПС"></category><category term="virtuon"></category><category term="visa"></category><category term="wikimedia"></category><category term="wikipedia"></category></entry><entry><title>Ошибка при установке через checkinstall</title><link href="http://imdagger.github.io/posts/2012/06/07/oshibka-pri-ustanovke-cherez-checkinstall/" rel="alternate"></link><updated>2012-06-07T02:25:36+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-06-07:posts/2012/06/07/oshibka-pri-ustanovke-cherez-checkinstall/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; При установке некоторых пакетов через checkinstall бывает выпадает
вот такая ошибка:&lt;/p&gt;
&lt;blockquote&gt;
ranlib: could not create temporary file whilst writing archive: No
more archived files&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Её удаётся победить, если перед этим сделать sudo make install,
тогда последующий sudo checkinstall отработает без проблем.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="checkinstall"></category><category term="установка"></category><category term="решение"></category></entry><entry><title>В поисках воды</title><link href="http://imdagger.github.io/posts/2012/06/05/v-poiskakh-vody/" rel="alternate"></link><updated>2012-06-05T01:06:25+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-06-05:posts/2012/06/05/v-poiskakh-vody/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Из множества фирм, которые мы обзвонили только 2 согласились
пробурить нам скважину для воды на даче. Остальные все, как узнаю, где
нужно бурить, то отказываются. Т.к. у соседей и на 25 метров воду не
наши и так по всей деревне. Они даже машину заказывали с буром, но мало
кому повезло.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Но родителям повезло, хотя они вначале сильно были удивлены, что: а)
бурить будет негр английского гражданства; б) бурить будут вручную. Как
оказалось они принципиально не используют машину, чтобы не проскочить
водный слой. Плюс человек этот очень хорошо разбирается в поиске воды,
посмотрел землю, камни, растения, попробовал на вкус, понюхал. Много
всего расспрашивал и выбрал место для бурения.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; И о чудо, они нашли воду на 12 метре! Это при том, что верховодку
они проходили, и с 12 метра пошла хорошая и чистая вода. Тот человек
сказал, чтобы если бы они проскочили этот слой, то следующий слой уже на
32 метрах глубины у нас. Это объяснило почему машины, которые заказывали
не находили воду на 25 метров, они просто проскакивали первый слой, а до
второго уже у них не хватало сил бурить и особенно желания, т.к. платят
только за метры, если нашли воду. А если ничего не находят, то и можно
не платить, только бензин для машину на дорогу.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Вобщем, теперь у нас есть вода на даче и спасибо тому умельцу —
негру из Англии, который любит искать воду. Что ещё примечательно — он
очень аккуратно работает и очень скрупулёзный.&lt;/p&gt;
</summary><category term="жизнь"></category><category term="деревня"></category><category term="радость"></category><category term="скважина"></category><category term="Соколка"></category><category term="бурение"></category></entry><entry><title>3 года моему блогу</title><link href="http://imdagger.github.io/posts/2012/05/30/3-goda-moemu-blogu/" rel="alternate"></link><updated>2012-05-30T00:34:37+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-30:posts/2012/05/30/3-goda-moemu-blogu/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В принципе за 3 года сервис подрос и стал лучше, хотя есть вещи,
которые меня расстраивают, например, что теперь смайлики автоматически
находятся в тексте и распознаются. Я конечно понимаю, что некоторым это
удобно, но для меня (серьёзного человека): человека, который в основном
пишет нейтральные посты о жизни, без лишних эмоций либо чисто
технические мысли, — это очень не удобно, т.к. оно повсюду лепит свои
смайлики в моих примерах кода. Я же не могу всё засовывать в HTML!&lt;/p&gt;
</summary><category term="блог"></category><category term="мысли"></category><category term="годовщина"></category></entry><entry><title>Принудительный сброс кэша в RequireJS</title><link href="http://imdagger.github.io/posts/2012/05/29/prinuditelnyi-sbros-kesha-v-requirejs/" rel="alternate"></link><updated>2012-05-29T23:37:41+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-29:posts/2012/05/29/prinuditelnyi-sbros-kesha-v-requirejs/</id><summary type="html">&lt;p&gt;Нашёл в &lt;a class="reference external" href="http://requirejs.org/docs/api.html#config"&gt;доке по
RequireJS&lt;/a&gt;параметр
urlArgs, который позволяет после каждого загруженного
модуля добавлять некоторые параметры. Как сказано в документации это
можно применять для
принудительного сброса кэша (cache bust), например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-nx"&gt;require&lt;/span&gt;&lt;span class="pgcss-p"&gt;.&lt;/span&gt;&lt;span class="pgcss-nx"&gt;config&lt;/span&gt;&lt;span class="pgcss-p"&gt;({&lt;/span&gt;&lt;span class="pgcss-nx"&gt;urlArgs&lt;/span&gt;&lt;span class="pgcss-o"&gt;:&lt;/span&gt; &lt;span class="pgcss-s2"&gt;&amp;quot;version=инкрементальная_версия&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="RequireJS"></category><category term="кэш"></category><category term="программирование"></category><category term="кеш"></category></entry><entry><title>Tweening</title><link href="http://imdagger.github.io/posts/2012/05/20/tweening/" rel="alternate"></link><updated>2012-05-20T02:31:25+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-20:posts/2012/05/20/tweening/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Кажется это как раз тот термин, который я искал в анимации, для
того, чтобы описать промежуточные достраиваемые кадры. Интересно
насколько часто используется эта техника в играх?&lt;/p&gt;
</summary><category term="мысли"></category><category term="tweening"></category><category term="анимация"></category><category term="игра"></category></entry><entry><title>Долго собирался Cycles</title><link href="http://imdagger.github.io/posts/2012/05/16/dolgo-sobiralsia-cycles/" rel="alternate"></link><updated>2012-05-16T04:49:42+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-16:posts/2012/05/16/dolgo-sobiralsia-cycles/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Из-за того, что у меня всего 2GiB RAM, а для компиляции самому nvcc
нужно аж 1.8GiB, то его сбросило в своп, ещё было плохой идеей
использовать -j2, лучше вообще в таком случае собирать в 1 поток. И
после 1,5 часа мучений компилятор родил 3 файла по ~400KiB с
расширениями cubin для Cycles. Вот только жаль, что Cycles теперь
поддерживает только CUDA начиная с версии 1.3, а у меня GT218
поддерживает только 1.2, поэтому Blender можно завести только в
Experimental режиме, да и не всё (как пишут) на 1.2 будет нормально
работать. Хотя пока прирост производительности по сравнению с моим
бюджетным atom-ом наблюдаю, но больше собирать сам ночью на этой машине
kernel_sm_13.cubin и т.д. не очень хочу, лучше бы я поспал. Всё равно
пришлось выковыривать ядро Cycles для 1.2 версии из другого
Blender-билда.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp; Одно радует, CUDA у меня работает, OpenCL тоже, всё это нормально
переключается через IronHide (optirun утилиту).&lt;/p&gt;
</summary><category term="CUDA"></category><category term="сборка"></category><category term="blender"></category><category term="1.2"></category><category term="nvidia"></category><category term="ironhide"></category></entry><entry><title>Внутренние структуры Blender элементов управления</title><link href="http://imdagger.github.io/posts/2012/05/11/vnutrennie-struktury-blender-elementov-upravleniia/" rel="alternate"></link><updated>2012-05-11T02:57:07+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-11:posts/2012/05/11/vnutrennie-struktury-blender-elementov-upravleniia/</id><summary type="html">&lt;p&gt;Создание новых GUI элементов для самого пакета Blender стало теперь
получше и их новое решение выглядит с архитектурной точки зрения
корректнее, чем большая функция и груда uiDefBut-функций, которые
управляют одновременно и типами и диапазонами и разметкой. Теперь всё
что связано с типами, контролем и логическим описанием полей находится в
&lt;code class="code"&gt;
source/blender/makesrna/intern/rna _ *.c&lt;/code&gt;
, а всё что с разметкой в
&lt;code class="code"&gt;
source/blender/editors/space _ */ * _window.c&lt;/code&gt;
 файлах. В файлах разметки
можно управлять только рядами, колонками, резиновой вёрсткой через
uiLayoutRow, uiItemR и т.д. Может немного смутить старый код, они его
ещё не весь вычистили, особенно из space_logic, там есть код от вывода
актуаторов старым способом, не стоит обращать на него внимания, он не
используется.&lt;/p&gt;
&lt;p&gt;Больше не приходится писать магические конструкции типа таких:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;uiDefBut(block, TEX, 1, &amp;quot;Imageset: &amp;quot;, &lt;strong&gt;xco+10, yco-44,width-20,19,
&amp;amp;(guia-&amp;gt;layoutname),&lt;/strong&gt;
&lt;strong&gt;0, 63, 0, 0,&lt;/strong&gt; &amp;quot;Imageset name where cursor is present&amp;quot;);&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Где жёстко зашиваешь позицию элемента в блоке и его размеры.&lt;/p&gt;
</summary><category term="blender"></category><category term="bge"></category><category term="программирование"></category><category term="доработка"></category></entry><entry><title>Пришлось вытащить полное дерево</title><link href="http://imdagger.github.io/posts/2012/05/06/prishlos-vytashchit-polnoe-derevo/" rel="alternate"></link><updated>2012-05-06T03:55:14+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-06:posts/2012/05/06/prishlos-vytashchit-polnoe-derevo/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Желания переносить Blender 2.63 на новый FFmpeg мало, просто хочется
собрать его, а не переписывать, тем более, что я не сильно разбираюсь
как использовать библиотеки от FFmpeg, там множество функций. Поэтому
самым простым решением оказалось сделать git pull, подтянуть весь
репозиторий к себе, там посмотреть git tag, выбрать подходящую версию, я
пока остановился на n0.8.9 и сделать git checkout n0.8.9; а затем
сборка… и покатили!&lt;/p&gt;
</summary><category term="git"></category><category term="сборка"></category><category term="ffmpeg"></category></entry><entry><title>Новый FFmpeg</title><link href="http://imdagger.github.io/posts/2012/05/06/novyi-ffmpeg/" rel="alternate"></link><updated>2012-05-06T01:41:48+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-05-06:posts/2012/05/06/novyi-ffmpeg/</id><summary type="html">&lt;p&gt;Разобрался как в коде Blender 2.63 из trunk модифицировать ImBuf под
новую версию FFmpeg из trunk. Ибо функция av_set_parameters уже давно
устарела и была удалена. Теперь чтобы создать параметры и установить (а
затем передать в запись заголовка) необходимо проделать шаги с
использованием av_dict_set (данный пример для переменной типа int):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;из &lt;strong&gt;source/blender/imbuf/intern/indexer.c&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;int ffmpeg_quality;&lt;/div&gt;
&lt;div class="line"&gt;AVDictionary *opts = NULL;&lt;/div&gt;
&lt;div class="line"&gt;uint8_t buf[32];&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;ffmpeg_quality = (int)(1.0f + 30.0f * (1.0f - (float)quality / 100.0f) + 0.5f);&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;snprintf(buf, sizeof(buf), “%d”, ffmpeg_quality);&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;av_dict_set&lt;/strong&gt;(&amp;amp;opts, “qmin”, buf, 0);&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;av_dict_set&lt;/strong&gt;(&amp;amp;opts, “qmax”, buf, 0);&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;avformat_write_header&lt;/strong&gt;(rv-&amp;gt;of, &lt;strong&gt;&amp;amp;opts&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;av_dict_free&lt;/strong&gt;(&amp;amp;opts);&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
</summary><category term="blender"></category><category term="сборка"></category><category term="программирование"></category><category term="ffmpeg"></category><category term="компиляция"></category></entry><entry><title>Фестиваль единоборств "Битва над сожем"</title><link href="http://imdagger.github.io/posts/2012/04/28/festival-edinoborstv-bitva-nad-sozhem/" rel="alternate"></link><updated>2012-04-28T13:35:26+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-04-28:posts/2012/04/28/festival-edinoborstv-bitva-nad-sozhem/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Сходил, доволен. Вначале немного было как-то вяло, да и публика ещё
не разогрелась, боксёрским поединком немного недоволен, т.к. работали
они вяло. А с результатами тайского бокса не совсем согласен, хотя
скорее всего я не уловил того, что видели боковые судьи. Каратэ между
девушками было зрелищным, получше, чем между парнями (особенно от того,
что у бойца не получалось хорошо работать ногами, а руками у него было
преимущество, но он не воспользовался им). Смешанные и система K1
прибавили адреналина.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Народу было очень много (по моим подсчётам 1000 человек), я столько
не ожидал, я вообще в &lt;strong&gt;ЦОРе&lt;/strong&gt; был первый раз (отдельное спасибо Славику
и его жене, что заранее заняли места).&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Звуковиков я бы поругал, им следовало поработать над расстановкой
колонок лучше, да и программу организаторам тоже стоило чуть лучше
подумать, а то последнее выступление поставили после зрелищного боя
тяжеловесов (второго раунда не было, т.к. боец сдался, насколько я видел
и понял из-за того, что он сильно получил по печени и решил, что деньги
всё равно и так заплатят, а здоровье бесценно, ему вроде Иван пробил
руками колесо, когда зажал в угол ринга), естественно после просмотра
боя все уже знали, что дальше не будет ничего особенного и стали быстро
расходится.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Закрытие получилось немного смазанным от этого, но с учётом, что я
ничего не потратил на мероприятие, смотрел 3,5 часа всё сидя и со
второго ряда с трибуны, я очень даже доволен. Переживал, что на
транспорт не сяду, но благо все разъехались быстро.&lt;/p&gt;
</summary><category term="Я"></category><category term="бои"></category><category term="жизнь"></category><category term="фестиваль"></category><category term="единоборства"></category></entry><entry><title>Фикс для PyAMF</title><link href="http://imdagger.github.io/posts/2012/04/28/fiks-dlia-pyamf/" rel="alternate"></link><updated>2012-04-28T01:34:21+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-04-28:posts/2012/04/28/fiks-dlia-pyamf/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Нашёл проблему в PyAMF, которая мешает нормально работать с
десериализованными из AMF объектами, которые содержат правило synonym в
__amf__, при сериализации оно работает нормально, а вот в обратную
сторону нет. Т.к. это касалось рабочего проекта и исправление нужно
здесь и сейчас, то не дожидаясь пока его исправят разработчики, я
поправил сам. Просто форкнул репозиторий проекта и исправил
&lt;a class="reference external" href="https://github.com/IMDagger/pyamf"&gt;тут&lt;/a&gt;. Чуть позже отправлю
pull-запрос разработчикам, надеюсь они примут мои исправления. Т.к. это
была явная ошибка в тесте и проблема с copy&amp;amp;paste в коде.&lt;/p&gt;
</summary><category term="__amf__"></category><category term="synonym"></category><category term="исправление"></category><category term="python"></category><category term="ошибка"></category><category term="pyamf"></category></entry><entry><title>Flash socket блокировался антивирусами</title><link href="http://imdagger.github.io/posts/2012/04/22/flash-socket-blokirovalsia-antivirusami/" rel="alternate"></link><updated>2012-04-22T10:02:40+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-04-22:posts/2012/04/22/flash-socket-blokirovalsia-antivirusami/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Неожиданная проблема с тем, что у некоторых игроков не отображались
обновления, разрешилась. Сузив круг виновных приложений и платформ,
выяснилось, что это антивирус. При чём Kaspersky и Avast себя вели
достаточно одинаково — блокировали запрос из Flash без каки-либо
собщений пользователю и отметов в журнале событий. Такое молчаливое
поведение достаточно странно. Но после продолжительных поисков
выяснилось, что достаточно сменить порт для соединения с 80-го. В nginx
было выставлено дополнительно слушать 81-ый порт. После этого проблема с
Flash и его socket соединением решилась.&lt;/p&gt;
</summary><category term="антивирус"></category><category term="flash"></category><category term="программирование"></category><category term="сокет"></category><category term="работа"></category></entry><entry><title>Celery для игрового мира</title><link href="http://imdagger.github.io/posts/2012/04/19/celery-dlia-igrovogo-mira/" rel="alternate"></link><updated>2012-04-19T00:08:06+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-04-19:posts/2012/04/19/celery-dlia-igrovogo-mira/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Надесь Celery в режиме gevent сможет выступить в роли менеджера
задач игровых миров, было бы неплохо из WEB-части порождать отдельную
задачу, которая обслуживает и обновляет состояние игрового мира в Redis.
Т.е. по небольшой группе микропотоков на игровой мир, где будут
существовать игроки и отправлять в него события. Эдакая модель акторов
на Python с супервизором Celery.&lt;/p&gt;
</summary><category term="Celery"></category><category term="игра"></category><category term="мультиплеер"></category><category term="gevent"></category><category term="микропоток"></category><category term="python"></category></entry><entry><title>Подружил TextureAtlas, AssetManager и мультизагрузку</title><link href="http://imdagger.github.io/posts/2012/04/14/podruzhil-textureatlas-assetmanager-i-multizagruzku/" rel="alternate"></link><updated>2012-04-14T01:49:28+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-04-14:posts/2012/04/14/podruzhil-textureatlas-assetmanager-i-multizagruzku/</id><summary type="html">&lt;p&gt;Одним из преимуществ libGDX является то, что реально писать
приложение на PC, отлаживать большую часть приложения на PC без
эмулятора смартфона. Но есть особенность в том, где ищет библиотека
ресурсы на PC платформе и на Android. &lt;code class="code"&gt;
Gdx.files.internal&lt;/code&gt;
 для PC ищет
данные начиная с корня приложения, а на платформе Android начиная с
директории assets.&lt;/p&gt;
&lt;p&gt;Это создаёт небольшие неудобства для унификации и отладки. Хотелось
бы свободно заливать, запускать и не думать сильно о платформе. А ещё
управлять удобно загруженными ресурсами, поддерживать связи между ними,
выгружать. Со всем этим помогает объект класса AssetManager.&lt;/p&gt;
&lt;p&gt;Поэтому удобно немного расширить его поведение и указать, где
искать необходимые файлы. Когда я попытался создать свой резолвер и
просто добавлять assets/ для случая PC-платформу, то наткнулся на
проблему с загрузкой TextureAtlas. Сам pack-файл загружался прекрасно, а
вот уже изображения указанные в нём загружались как assets/assets/*,
что было некорректно и не приемлемо. Поэтому пришла простая мысль
проверять начинается ли путь с assets/ и, если это так, то не добавлять
префикс ещё раз:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
    &lt;span class="pgcss-kd"&gt;protected&lt;/span&gt; &lt;span class="pgcss-kd"&gt;class&lt;/span&gt; &lt;span class="pgcss-nc"&gt;MultiResolver&lt;/span&gt; &lt;span class="pgcss-kd"&gt;extends&lt;/span&gt; &lt;span class="pgcss-n"&gt;InternalFileHandleResolver&lt;/span&gt;
&lt;span class="pgcss-o"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-kd"&gt;public&lt;/span&gt; &lt;span class="pgcss-n"&gt;FileHandle&lt;/span&gt; &lt;span class="pgcss-nf"&gt;resolve&lt;/span&gt; &lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;String&lt;/span&gt; &lt;span class="pgcss-n"&gt;fileName&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;{&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Gdx&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;app&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;getType&lt;/span&gt;&lt;span class="pgcss-o"&gt;()&lt;/span&gt; &lt;span class="pgcss-o"&gt;!=&lt;/span&gt; &lt;span class="pgcss-n"&gt;Application&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;ApplicationType&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;Android&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;{&lt;/span&gt;
                &lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-o"&gt;(!&lt;/span&gt;&lt;span class="pgcss-n"&gt;fileName&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;startsWith&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;assets/&amp;quot;&lt;/span&gt;&lt;span class="pgcss-o"&gt;))&lt;/span&gt;
                    &lt;span class="pgcss-n"&gt;fileName&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;assets/&amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;fileName&lt;/span&gt;&lt;span class="pgcss-o"&gt;;&lt;/span&gt;
            &lt;span class="pgcss-o"&gt;}&lt;/span&gt;
            &lt;span class="pgcss-k"&gt;return&lt;/span&gt; &lt;span class="pgcss-kd"&gt;super&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;resolve&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;fileName&lt;/span&gt;&lt;span class="pgcss-o"&gt;);&lt;/span&gt;
        &lt;span class="pgcss-o"&gt;}&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;}&lt;/span&gt;

    &lt;span class="pgcss-kd"&gt;public&lt;/span&gt; &lt;span class="pgcss-kt"&gt;void&lt;/span&gt; &lt;span class="pgcss-nf"&gt;error&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;String&lt;/span&gt; &lt;span class="pgcss-n"&gt;fileName&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;Class&lt;/span&gt; &lt;span class="pgcss-n"&gt;type&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;Throwable&lt;/span&gt; &lt;span class="pgcss-n"&gt;throwable&lt;/span&gt;&lt;span class="pgcss-o"&gt;)&lt;/span&gt; &lt;span class="pgcss-o"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;Gdx&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;app&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;error&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;RESOURCE&amp;quot;&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;Problem with file &amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;fileName&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot; class &amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;type&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="pgcss-o"&gt;+&lt;/span&gt; &lt;span class="pgcss-n"&gt;throwable&lt;/span&gt;&lt;span class="pgcss-o"&gt;);&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;}&lt;/span&gt;

    &lt;span class="pgcss-kd"&gt;public&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MediaLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;()&lt;/span&gt; &lt;span class="pgcss-o"&gt;{&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;AssetManager&lt;/span&gt;&lt;span class="pgcss-o"&gt;();&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setErrorListener&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;this&lt;/span&gt;&lt;span class="pgcss-o"&gt;);&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;BitmapFont&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;BitmapFontLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Music&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MusicLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Pixmap&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;PixmapLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Sound&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;SoundLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;TextureAtlas&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;TextureAtlasLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Texture&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;TextureLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;Skin&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;SkinLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
        &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;setLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;TileMapRenderer&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;TileMapRendererLoader&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-k"&gt;new&lt;/span&gt; &lt;span class="pgcss-nf"&gt;MultiResolver&lt;/span&gt;&lt;span class="pgcss-o"&gt;())&lt;/span&gt;
    &lt;span class="pgcss-o"&gt;}&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Возможно есть более красивые и грамотные решения, но меня и это
вполне устраивает. Тем более, что я не собираюсь создавать вложенные
assets директории. В примерах от libGDX перед pack-файлом принудительно
указывают требование на загрузку изображения от этого pack-файла, но
видимо там это сделано лишь для примера, т.к. реальной необходимости в
этом нет.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;load&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;planet/pack&amp;quot;&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;TextureAtlas&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;);&lt;/span&gt;
&lt;span class="pgcss-c1"&gt;// ... когда всё загрузилось и готово&lt;/span&gt;
&lt;span class="pgcss-n"&gt;atlas&lt;/span&gt; &lt;span class="pgcss-o"&gt;=&lt;/span&gt; &lt;span class="pgcss-n"&gt;manager&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;get&lt;/span&gt;&lt;span class="pgcss-o"&gt;(&lt;/span&gt;&lt;span class="pgcss-s"&gt;&amp;quot;planet/pack&amp;quot;&lt;/span&gt;&lt;span class="pgcss-o"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;TextureAtlas&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-na"&gt;class&lt;/span&gt;&lt;span class="pgcss-o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="программирование"></category><category term="libGDX"></category><category term="менеджер"></category><category term="ресурсы"></category><category term="платформы"></category><category term="унификация"></category><category term="атлас"></category></entry><entry><title>Небольшие загвоздки с сокетом</title><link href="http://imdagger.github.io/posts/2012/04/09/nebolshie-zagvozdki-s-soketom/" rel="alternate"></link><updated>2012-04-09T01:26:32+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-04-09:posts/2012/04/09/nebolshie-zagvozdki-s-soketom/</id><summary type="html">&lt;p&gt;Придётся ещё на сервере открыть 843 порт и отдавать там файл
crossdomain.xml, т.к. того требует Flash socket policy, эх… а я думал,
что подводных камней вообще не будет :) Нашёл вот
&lt;a class="reference external" href="http://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html"&gt;тут&lt;/a&gt;,
что и к чему и почему.&lt;/p&gt;
</summary><category term="flash"></category><category term="трудность"></category><category term="программирование"></category><category term="сокет"></category><category term="порт"></category></entry><entry><title>Эксперимент прошёл успешно</title><link href="http://imdagger.github.io/posts/2012/03/31/eksperiment-proshiol-uspeshno/" rel="alternate"></link><updated>2012-03-31T02:43:37+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-03-31:posts/2012/03/31/eksperiment-proshiol-uspeshno/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Очень большой поток сообщений через chunked канал мы не проверяли,
но всё работает отлично. События передаются, только, т.к. Flash часть
без Flex, то нужно чтобы списки не передавались как
flex.messaging.io.ArrayCollection, т.к. они только во Flex есть. Поэтому
нужно, чтобы &lt;strong&gt;pyamf.amf3.use_proxies_default&lt;/strong&gt; был равен &lt;strong&gt;False&lt;/strong&gt;.
Так же стоит выставить заголовки, чтобы промежуточные прокси-сервера,
если таковые имеются не изменяли содержимое и не кэшировали его, т.к.
это всё таки события из игровой системы. И не очень бы хотелось, чтобы
игрок вошёл в игру и случилось дежавю.&lt;/p&gt;
&lt;blockquote&gt;
…
Cache-Control: no-cache, no-transform
…&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Ещё забавно, когда из браузера обращается к обработчику, то
начинается скачиванием бинарного файла с AMF-объектами, и он может
скачиваться бесконечно.&lt;/p&gt;
</summary><category term="программирование"></category><category term="радость"></category><category term="HTTP"></category><category term="python"></category><category term="сериализация"></category><category term="pyamf"></category><category term="flash"></category><category term="работа"></category><category term="flex"></category></entry><entry><title>Соединение Flash &lt;-&gt; Python, AMF и другие товарищи</title><link href="http://imdagger.github.io/posts/2012/03/30/soedinenie-flash-python-amf-i-drugie-tovarishchi/" rel="alternate"></link><updated>2012-03-30T00:26:26+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-03-30:posts/2012/03/30/soedinenie-flash-python-amf-i-drugie-tovarishchi/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Дабы не строить свой TCP-сервер и не разрабатывать свой протокол для
того, чтобы обмениваться с Flash в &lt;strong&gt;двустороннем порядке&lt;/strong&gt; при помощи
AMF-пакетов, мы сошлись на варианте с двумя соединениями. Одно
соединение для получения событий из системы (1), а второй канал (2)
используется через NetConnection и создан для отправки call из Flash. Из
игры отправляется некоторый запрос по каналу (2), который является
HTTP-запросом, соединение удерживается и в рамках одного соединения
происходит много HTTP-запросов. Затем call обрабатывается на сервере и
происходят проверки корректности, событие заносится в очередь или
исполняется сразу же (в зависимости от необходимого времени для
события), ответ возвращается в AMF-формате обратно клиенту.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Затем в системе происходят события, и необходимо оповестить игрока
об этом. Обработчик обслуживающий (2) канал начинает отдавать события по
HTTP клиенту в режиме &lt;em&gt;Transfer-Encoding: chunked&lt;/em&gt;, каждый пакет это
одно событие системы. Flash их обрабатывает и отображает игроку.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Такой подход позволил использовать стандартный pywsgi.WSGIHandler из
gevent, при этом получить быстрый канал оповещения с минимальными
накладными расходами. Chunked режим всего требует несколько байт для
отделения длины от пакета и немного символов для описания самой длины в
HEX. Требуется из Flash подключаться при помощи обычного сокета и
пересылать немного HTTP-заголовков для инициализации сессии. Посмотрим
насколько оправдает себя такой подход, чем то напоминает спутниковый
интернет.&lt;/p&gt;
</summary><category term="HTTP"></category><category term="python"></category><category term="flash"></category><category term="работа"></category><category term="chunked"></category><category term="wsgi"></category></entry><entry><title>Facebook и scrolling="yes"</title><link href="http://imdagger.github.io/posts/2012/02/25/facebook-i-scrollingyes/" rel="alternate"></link><updated>2012-02-25T00:05:10+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-02-25:posts/2012/02/25/facebook-i-scrollingyes/</id><summary type="html">&lt;p&gt;Старые приложения, которые были зарегистрированы до 2011 года на
Facebook отображаются в iframe нормально. А вот в новых в Opera и
Firefox появляется горизонтальный скролл, причём в нём нет необходимости
и он выключен. Долгие рысканья по интернету не дали точного ответа,
везде указывалось, что нужно прописать в CSS для случая переполнения
отсекание содержимого. Не помогали и setAutoSize и новый setAutoGrow.
Смущало то, что старые и новые приложения имели похожий код стилей.&lt;/p&gt;
&lt;p&gt;Было явно видно, что не в стилях проблема, т.к. для старых
приложений код приходил от Facebook для iframe с scrolling=“no”, а для
новых с yes. Поиски ничего не давали. Сравнив опции, на первый взгляд,
нескольких приложений существенных различий я не обнаружил.&lt;/p&gt;
&lt;p&gt;Но вот какой-то момент потребовалось для шаблона включить Width в
режим Fluid, что было благополучно сделано. Естественно на
горизонтальный скролл это никак не повлияло (я это и ранее проверял). Но
вдруг я заметил, что для старого приложения высота фиксированная, а для
нового нет. Закралось чувство, что вот она проблема.&lt;/p&gt;
&lt;p&gt;И действительно, переключив высоту Height c Fluid на Fixed,
&lt;strong&gt;горизонтальный&lt;/strong&gt; скролл исчез. И Facebook перестал выдавать
scrolling=“yes”, похоже, что плавающая высота работает у Facebook как-то
странно.&lt;/p&gt;
</summary><category term="скролл"></category><category term="проблема"></category><category term="facebook"></category><category term="решение"></category><category term="fluid"></category><category term="scrolling"></category><category term="высота"></category><category term="браузеры"></category><category term="горизонтальный"></category><category term="iframe"></category></entry><entry><title>Наследование блоков в Cheetah</title><link href="http://imdagger.github.io/posts/2012/02/17/nasledovanie-blokov-v-cheetah/" rel="alternate"></link><updated>2012-02-17T18:59:15+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-02-17:posts/2012/02/17/nasledovanie-blokov-v-cheetah/</id><summary type="html">&lt;p&gt;Столкнулся с проблемой, что есть блок &lt;code class="code"&gt;
#block … #end block&lt;/code&gt;
 и
шаблон &lt;em&gt;base&lt;/em&gt;, его расширяет шаблон &lt;em&gt;base_ex&lt;/em&gt;t при помощи
&lt;code class="code"&gt;
#extends&lt;/code&gt;
, а его в свою очередь расширяет шаблон &lt;em&gt;application&lt;/em&gt;. Я
хотел в &lt;em&gt;base_ext&lt;/em&gt; добавить обрамляющий &lt;code class="code"&gt;
&amp;lt;div&amp;gt;&lt;/code&gt;
 для блока из &lt;em&gt;base&lt;/em&gt;, но
не трогать базовый шаблон. Т.е. просто унаследовать метод и вызывать
метод предка. Помогла вот
такая &lt;a class="reference external" href="http://base-art.net/Articles/44/"&gt;техника&lt;/a&gt; с &lt;code class="code"&gt;
$self&lt;/code&gt;
 (хотя
там в примере используется &lt;code class="code"&gt;
#def&lt;/code&gt;
, но это не влияет на подход к
решению проблемы).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;base.tmpl:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-x"&gt;...&lt;/span&gt;
&lt;span class="pgcss-cp"&gt;#block&lt;/span&gt; &lt;span class="pgcss-n"&gt;external_block&lt;/span&gt;&lt;span class="pgcss-x"&gt;&lt;/span&gt;
&lt;span class="pgcss-x"&gt;    ...&lt;/span&gt;
&lt;span class="pgcss-cp"&gt;#end block&lt;/span&gt;&lt;span class="pgcss-x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;base_ext.tmpl:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-cp"&gt;#import&lt;/span&gt; &lt;span class="pgcss-n"&gt;templates&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;base&lt;/span&gt;&lt;span class="pgcss-x"&gt;&lt;/span&gt;
&lt;span class="pgcss-cp"&gt;#extends&lt;/span&gt; &lt;span class="pgcss-n"&gt;templates&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;base&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;base&lt;/span&gt;&lt;span class="pgcss-x"&gt;&lt;/span&gt;
&lt;span class="pgcss-cp"&gt;#block&lt;/span&gt; &lt;span class="pgcss-n"&gt;external_block&lt;/span&gt;&lt;span class="pgcss-x"&gt;&lt;/span&gt;
&lt;span class="pgcss-x"&gt;    &amp;lt;div&amp;gt;&lt;/span&gt;
&lt;span class="pgcss-x"&gt;        templates.base_ext.base(&lt;/span&gt;&lt;span class="pgcss-cp"&gt;$&lt;/span&gt;&lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-x"&gt;)&lt;/span&gt;
&lt;span class="pgcss-x"&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="pgcss-cp"&gt;#end block&lt;/span&gt;&lt;span class="pgcss-x"&gt;&lt;/span&gt;
&lt;span class="pgcss-x"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
</summary><category term="проблема"></category><category term="наследование"></category><category term="решение"></category><category term="python"></category><category term="расширение"></category><category term="шаблон"></category><category term="Cheetah"></category></entry><entry><title>Странная кнопка</title><link href="http://imdagger.github.io/posts/2012/02/16/strannaia-knopka/" rel="alternate"></link><updated>2012-02-16T01:29:16+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-02-16:posts/2012/02/16/strannaia-knopka/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; У меня беспроводная мышь &lt;strong&gt;esperanza EM106&lt;/strong&gt;, сегодня случайно
обнаружил на стороне, где расположен оптический элемент рядом с
переключателем включения/выключения мыши ещё одну кнопку. Она круглая и
средних размеров, но немного утоплена в корпус, чтобы случайно не нажать
и во время работы не мешала. Эта кнопка точно не для замены батареек,
т.к. такая уже есть и она больше и жёстче. Включение и выключение тоже
ясно где, да и подписано. А что это за кнопка не ясно, круглая чёрная,
неприметная.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Экспериментально я смог выяснить, что при нажатии на данную кнопку
мышь отключается приблизительно на 10 секунд и больше не реагирует на
внешние раздражители. Затем снова происходит инициализация, как при
включении. Вердикт: &lt;strong&gt;*возможно*&lt;/strong&gt; это кнопка перезапуска внутреннего
контроллера (хотя неужели они сделали такую мышь, что она может
зависнуть?).&lt;/p&gt;
</summary><category term="беспроводная"></category><category term="выключение"></category><category term="мышь"></category><category term="странно"></category><category term="кнопка"></category><category term="интересно"></category></entry><entry><title>Неуловимый Опечатко</title><link href="http://imdagger.github.io/posts/2012/02/14/neulovimyi-opechatko/" rel="alternate"></link><updated>2012-02-14T02:14:13+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-02-14:posts/2012/02/14/neulovimyi-opechatko/</id><summary type="html">&lt;p&gt;Минут 25 (может даже больше, если считать, что я проблему увидел
раньше, но решил исправить более приоритетные и понятные) потратил на
поиски, почему один java-файл не компилируется. Смотрю в название класса
в libGDX написано название, смотрю в класс, который его использует вроде
тоже самое. А начинаю компилировать, выпадает ошибка:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[javac] MailBox.java:22: cannot find symbol
[javac] symbol  : class IndentityMap
[javac] location: class by.sweetpair.longtrip.notifications.MailBox
[javac]         qSlots = new IndentityMap&amp;lt;String, AtomicQueue&amp;lt;Object&amp;gt;&amp;gt;();
[javac]                      ^
&lt;/pre&gt;
&lt;p&gt;Сижу туплю, туплю, пытаюсь найти более сложное объяснение, почему
оно не компилируется. Не могу поверить, что тут может быть опечатка,
ведь разве я мог опечататься в слове IdentityMap? I..den..tity, что?
Ооопс, а у меня закралась незаметная буква N после буквы I Наверное пара
identity и indentity одна из частых неуловимых опечаток Хотя я помню,
что идентификация пишется без буквы эн после и, но часто на автомате
пишу это слово как отступ (indent).&lt;/p&gt;
</summary><category term="программирование"></category><category term="IdentityMap"></category><category term="java"></category><category term="название"></category><category term="libGDX"></category><category term="опечатка"></category><category term="класс"></category><category term="забавно"></category></entry><entry><title>Проблема с "," опять преследует</title><link href="http://imdagger.github.io/posts/2012/02/13/problema-s-opiat-presleduet/" rel="alternate"></link><updated>2012-02-13T21:18:33+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-02-13:posts/2012/02/13/problema-s-opiat-presleduet/</id><summary type="html">&lt;p&gt;В JavaScript не следует в словарях после описания последнего
элемента ставить лишнюю запятую. Особенно плохо от этого становится IE.
Пришлось проверить код при помощи небольшого выражения для grep:&lt;/p&gt;
&lt;blockquote&gt;
$ grep -Przo &amp;quot;(?s),\s*}&amp;quot; --include=&amp;quot;*.js&amp;quot; htdocs/&lt;/blockquote&gt;
&lt;p&gt;Оно не учитывает, что между запятой и последующей скобкой может быть
комментарий, но это и не сильно важно для быстрой грязной проверки. А
вообще следует использовать jslint, что я теперь и буду делать.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="issue"></category><category term="comma"></category><category term="словарь"></category><category term="запятая"></category><category term="grep"></category><category term="поиск"></category><category term="javascript"></category><category term="IE"></category></entry><entry><title>Как бы сложилось?</title><link href="http://imdagger.github.io/posts/2012/02/06/kak-by-slozhilos/" rel="alternate"></link><updated>2012-02-06T01:55:59+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-02-06:posts/2012/02/06/kak-by-slozhilos/</id><summary type="html">&lt;p&gt;Интересно, чтобы случилось и как бы сложилась моя карьера и личная
жизнь, если бы не стал программировать на Python. Помню я на него
посмотрел ещё в 2005 году, всё что у меня было — стандартная
документация поставляемая с пакетом из дистрибутива. Тогда я взглянул на
него и он мне показался каким-то сложноватым :) Хотя про сам язык я слышал
и раньше он старших ребят, я тогда ещё учился в школе. В 2006 году мне
попался на глаза Lua, и очень понравился. Так прошёл год разработки на
нём, а может чуть больше или меньше. Язык мне понравился, прототипная
модель тоже, до него я с такой не сталкивался. Но не хватало «батареек».
И тут я ещё раз взглянул на Python, и понеслось. Он стал для меня
понятнее и приятнее, роднее, чем раньше сразу в 2005. Оказалось, что в
комплекте с ним идёт очень много удобных библиотек, а главное интуитивно
понятных, как и сам язык. Так он меня и завёл на проекты Slide Inc., а
затем Google Slide Inc. после поглощения. А так же он повлиял на мою
личную жизнь, т.к. я бы не встретил тех людей, которых встретил,
вращаясь в этой области.&lt;/p&gt;
</summary><category term="Я"></category><category term="бредни"></category><category term="жизнь"></category><category term="программирование"></category><category term="python"></category></entry><entry><title>Opera, jQuery и POST</title><link href="http://imdagger.github.io/posts/2012/01/24/opera-jquery-i-post/" rel="alternate"></link><updated>2012-01-24T23:33:18+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-24:posts/2012/01/24/opera-jquery-i-post/</id><summary type="html">&lt;p&gt;Обнаружил сегодня, что запросы из jQuery с использованием метода
POST, если data является пустым словарём (т.е. никаких аргументов не
передаём), то Opera выставляет Content-Type: text/xml; encoding=utf-8, и
это негативно сказывается на cgi.py из стандартной библиотеки Python.
Стандартный библиотечный FieldStorage решает, что нужно попробовать
считать аргумент как есть, т.к. тип данных не ясен. Но данные реально
отсутствуют и последующие попытки проверки параметров при помощи
has_key проваливаются, т.к. внутри стоит специальная проверка на такие
None случаи неполной инициализации. Вот код из cgi.py из Python 2.7.2,
который проверяет тип содержимого:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;

&lt;span class="pgcss-k"&gt;if&lt;/span&gt; &lt;span class="pgcss-n"&gt;ctype&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;application/x-www-form-urlencoded&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
    &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;read_urlencoded&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;
&lt;span class="pgcss-k"&gt;elif&lt;/span&gt; &lt;span class="pgcss-n"&gt;ctype&lt;/span&gt;&lt;span class="pgcss-p"&gt;[:&lt;/span&gt;&lt;span class="pgcss-mi"&gt;10&lt;/span&gt;&lt;span class="pgcss-p"&gt;]&lt;/span&gt; &lt;span class="pgcss-o"&gt;==&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;#39;multipart/&amp;#39;&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
    &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;read_multi&lt;/span&gt;&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-n"&gt;environ&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;keep_blank_values&lt;/span&gt;&lt;span class="pgcss-p"&gt;,&lt;/span&gt; &lt;span class="pgcss-n"&gt;strict_parsing&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-k"&gt;else&lt;/span&gt;&lt;span class="pgcss-p"&gt;:&lt;/span&gt;
    &lt;span class="pgcss-bp"&gt;self&lt;/span&gt;&lt;span class="pgcss-o"&gt;.&lt;/span&gt;&lt;span class="pgcss-n"&gt;read_single&lt;/span&gt;&lt;span class="pgcss-p"&gt;()&lt;/span&gt;

&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Как лечится? В принципе есть несколько путей решения проблемы:
добавить фиктивный параметр равный null в POST запросе из jQuery (что
прекрасно решает проблему без дополнительных телодвижений), унаследовать
FieldStorage и расширить его функционал, чтобы он обрабатывал случай для
text/xml (что не особо хочется).&lt;/p&gt;
&lt;p&gt;Я выбрал первый вариант и мне стало получше, правда наверное нужно
для непонятных типов содержимого отвечать клиенту каким-нибудь особым
HTTP-кодом.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="xml"></category><category term="jquery"></category><category term="opera"></category><category term="POST"></category><category term="python"></category><category term="CGI"></category></entry><entry><title>Ironhide и работа от батареи</title><link href="http://imdagger.github.io/posts/2012/01/17/ironhide-i-rabota-ot-batarei/" rel="alternate"></link><updated>2012-01-17T10:52:48+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-17:posts/2012/01/17/ironhide-i-rabota-ot-batarei/</id><summary type="html">&lt;p&gt;Вчера попытался запустить optirun на нетбуке, не подключённом к сети
в режиме работы от аккумулятора. glxinfo показал, что работает драйвер
от intel, т.е. не дискретная карта, а встроенная. Без запуска через
optirun аналогично. Я начал воевать с этим :) Уже активировал,
переконфигурировал, и всё не помогало. А затем мне пришла мысль в
голову, что так всё и задумано, что Optimus включится, когда я переведу
нетбук на более продолжительный источник энергии.&lt;/p&gt;
&lt;p&gt;После подключения блока питания к нетбуку optirun glxinfo резко стал
показывать уже информацию о драйверах для Ion2. В принципе меня такой
режим устраивает, главное, что я теперь знаю, когда какая из карт
используется и что будет поедать мой заряд.&lt;/p&gt;
</summary><category term="asus"></category><category term="intel"></category><category term="карта"></category><category term="linux"></category><category term="optirun"></category><category term="optimus"></category><category term="nvidia"></category><category term="ironhide"></category><category term="eeepc"></category></entry><entry><title>PPPoE и byfly</title><link href="http://imdagger.github.io/posts/2012/01/12/pppoe-i-byfly/" rel="alternate"></link><updated>2012-01-12T23:24:02+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-12:posts/2012/01/12/pppoe-i-byfly/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; При подключении через pppd со стороны byfly выдавалась ошибка
подключения с Access denied и что-то говорилось про неверный логин или
пароль. Множество раз перепроверив пароль и их логин, который
заканчивается на &amp;#64;beltel.by, наши мозги утверждали, что всё правильно.
Звонок с запросом баланса и подключили ли они нам всё, дал положительный
ответ. Но сервер продолжал упорно отказываться подключиться, хотя с
модема удалось поднять соединение, но нас такой вариант не устраивал,
т.к. тогда сложнее балансировать каналы.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Рысканье по интернету давало много ответов, что нужно вписать для
byfly в конфигурационный файл pppd для данного подключения, но ничего не
помогало, только смущало, что у некоторых прописана строка на загрузку
модуля &lt;strong&gt;rp-pppoe.so&lt;/strong&gt; Оказалось, что авторизация не проходит без
загрузки данного модуля, достаточно было использовать стандартные
настройки peers от pppd и добавить:&lt;/p&gt;
&lt;blockquote&gt;
plugin rp-pppoe.so eth3 # eth3 — сетевая карта, куда подключён модем
к серверу в режиме bridge&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Эта строка всё решила.&lt;/p&gt;
</summary><category term="ошибка"></category><category term="PPPoE"></category><category term="соединение"></category><category term="авторизация"></category><category term="интернет"></category><category term="byfly"></category><category term="плагин"></category><category term="работа"></category></entry><entry><title>Ironehide и ASUS EeePC 1215N</title><link href="http://imdagger.github.io/posts/2012/01/11/ironehide-i-asus-eeepc-1215n/" rel="alternate"></link><updated>2012-01-11T17:27:39+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-11:posts/2012/01/11/ironehide-i-asus-eeepc-1215n/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Теперь я смог оседлать Nvidia Optimus, в Ubuntu 11.10 после добавки
ppa, как описано &lt;a class="reference external" href="http://kubuntu.ru/node/9078"&gt;здесь&lt;/a&gt; мне ещё
пришлось убрать nouveau драйвер и переключиться на nvidia драйвер. При
чём как-то с первого раза не вышло, я уже даже подумал, что всё …
приехали, но потом отлегло. Ещё пока только не проверят bluetooth на
своей машинке, надеюсь он тоже заработает без особых мучений. Пока всё
заработало меньше, чем с полпинка. Без особых гуглений и тервотрёпки.&lt;/p&gt;
</summary><category term="asus"></category><category term="linux"></category><category term="optimus"></category><category term="nvidia"></category><category term="ironhide"></category><category term="blumblebee"></category><category term="eeepc"></category></entry><entry><title>Купил себе ASUS EeePC 1215N</title><link href="http://imdagger.github.io/posts/2012/01/11/kupil-sebe-asus-eeepc-1215n/" rel="alternate"></link><updated>2012-01-11T03:04:19+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-11:posts/2012/01/11/kupil-sebe-asus-eeepc-1215n/</id><summary type="html">&lt;p&gt;Купил сабж в интернет-магазине redmarket.by, было приятно, что цена
у них была относительно невысокая и товар в наличии, а когда сказали,
что доставят прямо на следующий день, то меня переполнила радость.
Сегодня товар оперативно доставили, я даже не успел настроится на
рабочий лад. Пока полёт нормальный и я доволен, ощущения как от
ноутбука, который брал когда-то в командировку, поэтому переодически не
покидает беспокойство, что у меня заберут и это назад :) Поверхность
реально пачкается от пальцев, но меня это не напрягает, я всегда могу
его протереть салфетками для техники. Нужно ещё докупить чехольчик и
мышку небольшую.&lt;/p&gt;
&lt;p class="text-center"&gt;&lt;a class="reference external" href="http://fotki.yandex.ru/users/imdagger/view/441180/"&gt;&lt;img alt="Нетбук" src="http://img-fotki.yandex.ru/get/4529/22199227.a/0_6bb5c_554fe62c_L" title="Нетбук"/&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="покупка"></category><category term="жизнь"></category><category term="asus"></category><category term="техника"></category><category term="eeepc"></category><category term="Я"></category></entry><entry><title>Удивительная механика</title><link href="http://imdagger.github.io/posts/2012/01/07/udivitelnaia-mekhanika/" rel="alternate"></link><updated>2012-01-07T15:31:22+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-07:posts/2012/01/07/udivitelnaia-mekhanika/</id><summary type="html">&lt;p&gt;Вчера на одном дыхании прочёл книгу “В поисках энергетической
капсулы”, описывающую жизненный путь Нурбея Гулиа в поисках оптимального
аккумулятора. Очень вдохновляет и написана простым языком, с юмором и
техническими подробностями.&lt;/p&gt;
</summary><category term="интересно"></category><category term="книга"></category><category term="механика"></category><category term="аккумулятор"></category></entry><entry><title>com.badlogic.gdx.utils</title><link href="http://imdagger.github.io/posts/2012/01/05/combadlogicgdxutils/" rel="alternate"></link><updated>2012-01-05T23:51:13+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2012-01-05:posts/2012/01/05/combadlogicgdxutils/</id><summary type="html">&lt;p&gt;libGDX радует своим utils, там есть и &lt;code class="code"&gt;
JsonReader&lt;/code&gt;
 и &lt;code class="code"&gt;
XmlReader&lt;/code&gt;
 и
другие полезные фишечки.&lt;/p&gt;
</summary><category term="utils"></category><category term="libGDX"></category><category term="программирование"></category></entry><entry><title>С Новым 2012 Кодом! :)</title><link href="http://imdagger.github.io/posts/2011/12/31/s-novym-2012-kodom/" rel="alternate"></link><updated>2011-12-31T17:08:14+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2011-12-31:posts/2011/12/31/s-novym-2012-kodom/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; В этот год родились тысячи строк кода и сотни коммитов, они прошли
свой долгий путь, чтобы превратиться в релизы и порадовать своих
создателей. Так пусть в новом году будет ещё больше кода и меньше багов,
и программы принесут нирвану в наши виртуальные дома. С праздником!&lt;/p&gt;
</summary><category term="код"></category><category term="2012"></category><category term="радость"></category><category term="поздравление"></category><category term="праздник"></category><category term="Я"></category></entry><entry><title>RequireJS модули</title><link href="http://imdagger.github.io/posts/2011/12/29/requirejs-moduli/" rel="alternate"></link><updated>2011-12-29T03:55:53+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2011-12-29:posts/2011/12/29/requirejs-moduli/</id><summary type="html">&lt;p&gt;Мне нужно было подправить странную проблему в JavaScript коде,
структура которого была написана не мной. Сервер возвращает некоторый
готовый HTML, который принимает клиентская сторона и превращает в DOM.
Возвращаемая страница содержала несколько тегов &lt;code class="code"&gt;
&amp;lt;script&amp;gt;&lt;/code&gt;
, я создал
несколько js-файлов, при чём B нуждался в A, и был после них тег
&lt;code class="code"&gt;
&amp;lt;script&amp;gt;&lt;/code&gt;
 с прописанным кодом в шаблоне, где создавался экземпляр
прототипа из файла B.&lt;/p&gt;
&lt;p&gt;И всё это счастье срабатывало на нажатие кнопки. Я обнаружил, что
кнопку приходится нажимать несколько раз. При чём странным образом
первый раз код выпадал с ошибкой и говорил, что не знает такой прототип
C и в помине (и что он undefined), хотя чуть выше был подключён
JavaScript-код для него.&lt;/p&gt;
&lt;p&gt;Пару проб с &lt;strong&gt;alert&lt;/strong&gt;-ами и выяснилось, что если этот участок кода
немного подождёт, то всё проходит из соринки и задоринки. Стало ясно,
что &lt;code class="code"&gt;
&amp;lt;script&amp;gt;&lt;/code&gt;
 элементы обходятся в произвольном порядке и по мере
загрузки. В тот момент, когда блок кода исполнялся, протопит C ещё
загружался с сервера. Пришлось искать решения.&lt;/p&gt;
&lt;p&gt;И оно нашлось &lt;a class="reference external" href="http://requirejs.org/"&gt;RequireJS&lt;/a&gt;, что позволило
мне собрать части кода как модули и определить зависимости между ними. Я
не JavaScript разработчик, поэтому я раньше не особо задумывался, что в
JS есть такие проблемы и до этого не искал таких библиотек.&lt;/p&gt;
&lt;p&gt;Но после того как я сделал модули меня ждал небольшой сюрприз
(документацию я смотрел невнимательно):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// a/b/c&lt;/div&gt;
&lt;div class="line"&gt;define([], function() { … });&lt;/div&gt;
&lt;div class="line"&gt;// mod/user&lt;/div&gt;
&lt;div class="line"&gt;define([’a/b/c’, …], function (mod_a) {&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; ....&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;mod_a undefined, т.к. модуль ничего не экспортирует&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;});&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Я ничего не возвращал из данной функции, почему-то подразумевая, что
всё как-то само отправится в глобальную видимость, хотя сто раз прочёл в
доке про указание на анонимную функцию и т.д.&lt;/p&gt;
&lt;p&gt;А затем час волосы на себе рвал пытаясь понять почему mod_a
переменная undefined и не содержит заветного модуля. Оказалось, что
функция возвращает словарь с данными, которые модуль экспортирует.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// a/b/c&lt;/div&gt;
&lt;div class="line"&gt;define([], function() { … return {exported: MyMegaProto}; });&lt;/div&gt;
&lt;div class="line"&gt;// mod/user&lt;/div&gt;
&lt;div class="line"&gt;define([’a/b/c’, …], function (mod_a) {&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;использовать mod_a.exported&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; ...&lt;/div&gt;
&lt;div class="line"&gt;&amp;nbsp; &amp;nbsp; return … // то что экспортируем&lt;/div&gt;
&lt;div class="line"&gt;});&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
</summary><category term="загрузка"></category><category term="ошибка"></category><category term="программирование"></category><category term="радость"></category><category term="javascript"></category><category term="undefined"></category><category term="модуль"></category><category term="RequireJS"></category><category term="зависимость"></category><category term="работа"></category></entry><entry><title>Новогодний корпоратив — Epic Fail 2</title><link href="http://imdagger.github.io/posts/2011/12/22/novogodnii-korporativ-epic-fail-2/" rel="alternate"></link><updated>2011-12-22T23:43:26+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2011-12-22:posts/2011/12/22/novogodnii-korporativ-epic-fail-2/</id><summary type="html">&lt;p&gt;В этот раз вышло даже похуже, чем в прошлый раз, хоть и в ресторане
отмечали. Такое чувство было, что в зале прямо рядом со мной курят или
это специально такая система вентиляции: брать дым извне и затягивать в
зал? Ведущий тоже … в общем Терренс и Филлип отдыхают с их
фикально/анальными шутками, у этого были сексуально/фикально/анальные с
ответвлением в различные девиации. Участвовать в пошлых и странных
конкурсах я не хотел, еда мне не очень понравилась, поэтому я быстренько
ушёл и не жалею.&lt;/p&gt;
</summary><category term="корпоратив"></category><category term="ресторан"></category><category term="праздник"></category><category term="Я"></category><category term="печаль"></category><category term="работа"></category></entry><entry><title>Удаление табуляции</title><link href="http://imdagger.github.io/posts/2011/12/21/udalenie-tabuliatsii/" rel="alternate"></link><updated>2011-12-22T00:00:05+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2011-12-21:posts/2011/12/21/udalenie-tabuliatsii/</id><summary type="html">&lt;p&gt;Так вышло, что code style convention проекта, где я работаю требует
выравнивания &lt;strong&gt;табуляцией&lt;/strong&gt;. А в Emacs, когда я нажимаю &lt;kbd class="kbd"&gt;
Backspace&lt;/kbd&gt;
, чтобы
удалить один уровень выравнивания в Python-коде, преобразует его в
smart-табуляцию, что мне не подходит, т.к. появляются пробелы. Проблема
решилась установкой локальной комбинации клавиш на хук в Python-режиме:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;из ~/.emacs файла:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-c1"&gt;;; в python-mode хуке&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;local-set-key&lt;/span&gt; &lt;span class="pgcss-p"&gt;(&lt;/span&gt;&lt;span class="pgcss-nv"&gt;kbd&lt;/span&gt; &lt;span class="pgcss-s"&gt;&amp;quot;DEL&amp;quot;&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt; &lt;span class="pgcss-ss"&gt;&amp;#39;backward-delete-char&lt;/span&gt;&lt;span class="pgcss-p"&gt;)&lt;/span&gt;
&lt;span class="pgcss-o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
</summary><category term="python"></category><category term="emacs"></category><category term="работа"></category><category term="табуляция"></category><category term="backspace"></category></entry><entry><title>$where в MongoDB</title><link href="http://imdagger.github.io/posts/2011/12/12/where-v-mongodb/" rel="alternate"></link><updated>2011-12-12T03:55:54+03:00</updated><author><name>IMDagger</name></author><id>tag:imdagger.github.io,2011-12-12:posts/2011/12/12/where-v-mongodb/</id><summary type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Внимательнее нужно мне читать стандартную документацию к MongoDB, а
то я был удивлён оператором $where для поиска, а также возможностью
использовать регулярные выражения для поиска. Пока оно мне ещё не особо
нужно, но я на них наткнулся на стороннем сайте, откуда затем снова
пришёл на MongoDB
&lt;a class="reference external" href="http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-RegularExpressions"&gt;Wiki&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Я"></category><category term="невнимательность"></category><category term="$where"></category><category term="документация"></category><category term="MongoDB"></category></entry></feed>