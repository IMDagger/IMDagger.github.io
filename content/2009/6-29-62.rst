Вывод
=====
:date: 2009-06-29 13:45:01
:tags: вывод, python, icfpc
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=62

Виртуальную машину нужную для задачи я закодировал быстро (был
только один небольшой нюанс, о котором ниже). После этого контеста для
себя я сделал некоторый вывод, чтобы в следующем году было больше фана и
результат:

#. Продолжу писать на Python, он меня по большей части порадовал, даже
   когда я почувствовал потери производительности, то быстро смог
   сделать модуль на C и подключить через **ctypes**.
#. Очень порадовал Blender, я использовал его BGE для визуализации,
   несмотря на то, что мне нужно было от него только 2D.
#. Собрать команду, даже если из окружающих никто не захочет, то найти
   онлайн человека 3-4
#. Подготовиться заранее учавствовать командой (опыт ICPC имеется, но
   ICFP Programming Contest - это всё же совсем другое)
#. Учесть “грабли”, на которыя я наступил, теперь я на своей шкуре
   понял, зачем в Python ввели **with**:

.. code-block:: python

    x86.writelines(generated_source)
    os.sytem(...лалала, а тут вызывается команда,
      которая работала с "сохранённым" файлом на
      диск, лалалала)

И этой программой был компилятор языка C из GCC. Когда я
компилировал руками созданный файл, то всё было хорошо, но как только я
пытался это делать из Python, то вываливались очень странные ошибки
компиляции, которых в принципе быт не могло. Так я промучался порядочное
время, пока не вспомнил одну беду, я забыл **синхронизировать** буффер
кэша в памяти с диском. Я добавил x86.close() (можно было x86.flush(),
но мне реально дескриптор файла уже не нужен был после записи туда
информации). Получилось:

.. code-block:: python

    x86.writelines(generated_source)
    x86.close()
    os.sytem(...лалала, а тут вызывается команда,
      которая работала с "сохранённым" файлом на
      диск, лалалала)

И о чудо! Всё заработало.
