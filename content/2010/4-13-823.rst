Разбор полёта
=============
:date: 2010-04-13 14:33:39
:tags: скринкастинг, bge, запись, изображение
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=823

Вот небольшой скрипт для записи видео из игрового режима по кардам в
изображения на диске:

.. code-block:: python

    from Rasterizer import makeScreenshot
    cont = GameLogic.getCurrentController()
    owner = cont.owner

    cur_time = owner['timer']
    last_time = owner['start time']
    end_time = owner['end time']

    if last_time < end_time:
        try:
            cur_frame = GameLogic.cur_frame
        except:
            cur_frame = 0

        delta = 1 / owner['per second']
        image_name = owner['path'] + '%04d'

        while cur_time > last_time:
            last_time += delta
            cur_frame += 1
            makeScreenshot(image_name % cur_frame)

        GameLogic.cur_frame = cur_frame
        owner['start time'] = last_time

Скрипт нужно вызывать по событию изменения свойства таймера. Следующие
параметры доступны через свойства объекта и регулируют поведение
скрипта:

-  timer — тип Timer, используется для вызова скрипта и определения
   текущего времени в BGE
-  start time — задаётся в секундах время начала съёмки видео,
   используется также скриптом во внутренних целях, опираться на него
   после запуска скрипта не стоит другим объектам, т.к. оно
   увеличивается после начала съёмки
-  per second — количество необходимых кадров в секунду
-  end time — время, когда нужно остановить создание снимков экрана
-  path — пусть, куда будут складываться снимки экрана вида:
   0001.расширение .. NNNN.расширение, тип сохраняемого изображения
   задаётся там, где и для рендеринга. Путь должен быть со / (или \\ под
   другой осью) на конце.

.. class:: text-center

|image0|

А теперь по порядку как он работает:

.. code-block:: python

    # локальные имена быстрее многочисленных обращений к модулю
    from Rasterizer import makeScreenshot

    # получение текущего объекта, т.к. его свойства — параметры системы
    cont = GameLogic.getCurrentController()
    owner = cont.owner

    # start time служит как время записи последнего кадра, а также стартовым временем
    cur_time = owner['timer']
    last_time = owner['start time']
    end_time = owner['end time']


    # если время последней съёмки не привысило допустимую верхнюю границу,
    # то нужно ещё сделать кадров
    if last_time < end_time:
        # текущий кадр хранится в GameLogic.cur_frame, если он ещё не создан — произошло
        # исключение, то принять значение как 0
        try:
            cur_frame = GameLogic.cur_frame
        except:
            cur_frame = 0


        # приращение на один кадр расчитывается как обратное числу кадров в секунду
        delta = 1 / owner['per second']
        # шаблон для сохранения файла с изображением,
        # %04d принуждает добавлять лидирующие нули, если число <1000
        image_name = owner['path'] + '%04d'

        # если оказалось, что время создания последнего снимка экрана
        # было раньше, чем текущее время, то пора записать немного кадров
        while cur_time > last_time:
            # приращивается время последней съёмки и номер кадра
            last_time += delta
            cur_frame += 1
            # если получится, что скрипт отстал по какой-то причине, например компьтер
            # не достаточно производительный или что-то ему мешало, или на предыдущем
            # кадре работало что-то, что затормозило всё отрисовку, то при помощи этого
            # цикла он дополнит одинаковыми кадрами этот участок (лучше, чем самому
            # потом думать, где провалы скорости и вручную дополнять), также он
            # увеличит время последней съёмки и не позволит лишний раз вызывать
            # makeScreenshot в неподходящий момент, т.е. этот цикл позволяет делать
            # снимки синхронно с положенным временем

            # записывается кадр на диск, шаблон image\_name расширяется при помощи
            # cur_fame параметра (содержит номер текущего кадра)
            makeScreenshot(image_name % cur_frame)

        # локальные переменные быстрее работают, чем свойства, но их в конце стоит обратно
        # сохранить на места
        GameLogic.cur_frame = cur_frame
        owner['start time'] = last_time


.. |image0| image:: http://img-fotki.yandex.ru/get/4209/imdagger.6/0_2b6ad_53d65419_L
   :target: http://fotki.yandex.ru/users/imdagger/view/177837/
