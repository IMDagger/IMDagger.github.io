Chain assignment
================
:date: 2013-04-15 21:32:40
:tags: программирование, знания, присваивание, хитрость, python, стандарт, особенность, пробел
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=1775

Попался на одном месте в Python, хотя быстро нашёл. Я почему-то на
автомате написал выражение для множественного присваивания исходя из
мысли, что присваивание будет идти справа-налево:

   | a = {}
   | x = 7
   | x = a[x] = 3
   | # увы, тут a это **{3: 3}**, а не {7: 3} как могло показаться, если
     глянуть мельком

Ибо присваивание цепочки происходит слева-направо (да это
документировано, да и вообще есть ли в Python что-то что выполняется
справа-налево?), сначала вычисляется самое правое выражение, а затем
распространяется по очереди в выражения начиная слева:

    | # вот так выглядит a = b = c = 7 в инструкциях VM
    | LOAD\_CONST               1 (7)
    | DUP\_TOP
    | STORE\_FAST               0 (**a**)
    | DUP\_TOP
    | STORE\_FAST               1 (**b**)
    | STORE\_FAST               2 (**c**)

Думаю тут порядок сохранения в переменных пояснять не нужно и так
видно глазом.
