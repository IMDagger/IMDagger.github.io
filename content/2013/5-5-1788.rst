Взаимодействие Racket и JVM
===========================
:date: 2013-05-05 00:08:58
:tags: JVM, racket, procfs, JNI, стек, pthreads, нить
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=1788

При сборке Racket в качестве расширения через интерфейс JNI лучше
всего на данный момент в sconfig. выключить опцию
LINUX\_FIND\_STACK\_BASE для Linux/Android (если расширение будет
создано в отдельном потоке). Т.к. это создаёт проблему неверного
определения нижней границы стека, попытки Racket вызвать stack overflow
обработчик и естественно ошибку, т.к. переполнения в реальности не было
и структуры для переполнения не заготовлены. А всё из-за того, что для
Linux используется вызов функции adjust\_stack\_base, которая считывает
/proc/self/maps и ищет [stack] строку вида:

    | ...
    | beeb5000-beed6000 rw-p 00000000 00:00 0          [stack]
    | ...

Но в случае с JNI стек основной части приложения будет отличаться от
стека native части кода, если тот создан в отдельной нити. Можно
попробовать определить границы стека через pthread, но возникает
проблема, что делать, если человек хочет собрать библиотеку без
pthreads, … хотя может для случая без pthreads можно идти как и раньше,
используя procfs.
