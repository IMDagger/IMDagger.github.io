Соединение Flash <-> Python, AMF и другие товарищи
==================================================
:date: 2012-03-30 00:25:48
:modified: 2012-03-30 00:26:26
:tags: HTTP, python, flash, работа, chunked, wsgi
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=1572

    Дабы не строить свой TCP-сервер и не разрабатывать свой протокол для
того, чтобы обмениваться с Flash в **двустороннем порядке** при помощи
AMF-пакетов, мы сошлись на варианте с двумя соединениями. Одно
соединение для получения событий из системы (1), а второй канал (2)
используется через NetConnection и создан для отправки call из Flash. Из
игры отправляется некоторый запрос по каналу (2), который является
HTTP-запросом, соединение удерживается и в рамках одного соединения
происходит много HTTP-запросов. Затем call обрабатывается на сервере и
происходят проверки корректности, событие заносится в очередь или
исполняется сразу же (в зависимости от необходимого времени для
события), ответ возвращается в AMF-формате обратно клиенту.

    Затем в системе происходят события, и необходимо оповестить игрока
об этом. Обработчик обслуживающий (2) канал начинает отдавать события по
HTTP клиенту в режиме *Transfer-Encoding: chunked*, каждый пакет это
одно событие системы. Flash их обрабатывает и отображает игроку.

    Такой подход позволил использовать стандартный pywsgi.WSGIHandler из
gevent, при этом получить быстрый канал оповещения с минимальными
накладными расходами. Chunked режим всего требует несколько байт для
отделения длины от пакета и немного символов для описания самой длины в
HEX. Требуется из Flash подключаться при помощи обычного сокета и
пересылать немного HTTP-заголовков для инициализации сессии. Посмотрим
насколько оправдает себя такой подход, чем то напоминает спутниковый
интернет.

