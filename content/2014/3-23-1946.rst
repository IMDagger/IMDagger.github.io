Регулярка и проверка на простоту?
=================================
:date: 2014-03-24 02:29:03
:modified: 2014-03-24 02:30:29
:tags: ненормальное, программирование, число, простое
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=1946

Немного безумия и можно при помощи регулярного выражения проверить
простое ли число

    .. code-block:: pycon

       >>> import re
       >>> is_complex = re.compile(r'^1?$|^(11+?)\1+$')
       >>> def check_prime(n):
       ...     return not bool(is_complex.match('1' * n))
       ...

    .. cut:: Подробнее

      | >>> check\_prime(1)
      | **False**
      | >>> check\_prime(2)
      | **True**
      | >>> check\_prime(3)
      | **True**
      | >>> check\_prime(4)
      | **False**
      | >>> check\_prime(101)
      | **True**
      | >>> check\_prime(200)
      | **False**
      | >>> check\_prime(243)
      | **False**
      | >>> check\_prime(901)
      | **False**
      | >>> check\_prime(903)
      | **False**
      | >>> check\_prime(997)
      | **True**

Как работает это? is\_complex проверяет есть ли у числа какие-либо
два множителя, т.е. при помощи регулярного аражения происходит
факторизация числа. Само число записывается как такое же количество
единиц равное значению.

*Часть* выражения::

   ... ^(11+?)\1+ ...

Означает, что строка состоит из двух или более единиц таких, что
встречаются два или более раза в ней. Т.е. получается, что проверка
регулярным выражением пытается выразить N единиц через A \* B; если это
возможно, то число составное.
