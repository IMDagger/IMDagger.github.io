Верификация времени
===================
:date: 2011-06-01 22:39:10
:tags: время, верификация, бредни
:category: text
:author: IMDagger
:yaru-link: http://imdagger.ya.ru/replies.xml?item_no=1351

Думаю, что я не первый, кого заинтересовала данная проблема.
Возможно есть чёткая формулировка почему это не возможно, но я даже не
знаю как спросить поисковик о такой задаче.

Есть некоторый не детерминированный процесс, для которого нужно
гарантировать, что он отработал T шагов. Начальное состояние процесса
определяется со стороны системы V, она может выдавать какие угодно
начальные параметры. Данная система как раз и зависит от того, кто
решает задачу (т.е .меня). Процесс должен протекать с момента t1 до
момента t2. Т.е. если сказано, что 5 секунд, значит нужно дать гарантию,
что он протекал 5 секунд (не обязательно очень точно). При чём этот
процесс сгенерировал некоторый набор данных. Данные генерируются легко,
поэтому процессу не составляет труда выполнить операцию быстрее чем за
заданное T. По окончанию процесса он отправляет данные обратно в
систему. Система либо принимает данные либо отвергает.

Я хотел построить схему таким образом: изначально система выдаёт
K=2\ :sup:`L` ключей N\ :sub:`1`\ …N\ :sub:`K` для процесса. Каждый ключ
является либо ложным либо действительно описывает некоторый момент
времени. Связь  моментов времени и ключей заключается в какой-нибудь
такой формуле (это не заданная формула, а просто мысль):
N\ :sub:`j`\ =hash(t\ :sub:`j`\ \*K\ :sub:`j`), но не обязательно такой.
Главное, чтобы не возможно было легко извлечь момент времени из
N\ :sub:`j`. Получится, что для выяснения нужного ключа потребуется K
операций вскрытия, а для проверки момента времени нужно лишь от O(1) до
O(L) (зависит от реализации).

Процесс на каждом шаге вместе с основной операцией генерации
вычисляет ещё и функцию связи для текущего t, если полученное число
присутствует в множестве, значит мы нашли подходящий момент времени.
Проблема в том, что операция получается простой и можно создать процесс
который ничего не будет генерировать, а просто сначала найдёт ответы
перебором, таким же как по данным будет проходит нормальный процесс, а
затем построит ответ.

Что-то от этого всего голова разболелась. Наверное для всего этого
есть доказательство невозможности реализации :-/.
